{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u804c\u4e1a\u751f\u6daf\u8bb0\u4e8b\u672c","text":"<p>\u5b59\u4f1f</p> <p>\u590d\u65e6\u5927\u5b66\u7814\u7a76\u751f</p> <p>\u73b0 \u5317\u4eac\u5916\u4f01\u5fb7\u79d1\u4eba\u529b\u8d44\u6e90\u670d\u52a1\u4e0a\u6d77\u6709\u9650\u516c\u53f8 </p> <p>\u7ecf\u5386\uff1a</p> <p>1. \u5317\u4eac\u5916\u4f01\u5fb7\u79d1\u4eba\u529b\u8d44\u6e90\u670d\u52a1\u4e0a\u6d77\u6709\u9650\u516c\u53f8 </p> <ul> <li>2023.10-\u81f3\u4eca\uff1a\u6e38\u620f\u4e2d\u5fc3\u5f00\u53d1\u90e8\uff0c\u8f6f\u4ef6\u5f00\u53d1\u5de5\u7a0b\u5e08\u3001  </li> <li>2022.08-2023.09\uff1a\u7cfb\u7edf\u6d4b\u8bd5\u4e0e\u517c\u5bb9\u6027\u9a8c\u8bc1\u90e8\uff0c\u7f51\u5361MDE\u3001\u7530\u4e3b  </li> </ul> <p>\u6280\u80fd\uff1a</p> <ul> <li>\u7f16\u7a0b\u8bed\u8a00\uff1aC/C++\uff0cPython\uff0cJavaScript</li> <li>\u5de5\u5177\u4e0e\u73af\u5883\uff1aLinux\u64cd\u4f5c\u7cfb\u7edf\uff0cNative C++\uff0c\u7f51\u7edc\u7f16\u7a0b\u3001\u6027\u80fd\u5206\u6790\u5de5\u5177\u3002</li> </ul> <p>\u6b63\u5728\u5b66\u4e60\uff1a\u4e24\u6570\u4e4b\u548c\u3001Flutter\u3001Mechine Learning</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/","title":"\u521d\u59cb\u5316\u9879\u76ee","text":""},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#npm","title":"\u521d\u59cb\u5316 npm","text":"Bash<pre><code>npm init -y\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#electron","title":"\u5b89\u88c5 Electron","text":"Bash<pre><code>npm install electron --save-dev\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#gitignore","title":"\u914d\u7f6e <code>.gitignore</code>","text":"Text Only<pre><code># Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n.pnpm-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional stylelint cache\n.stylelintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variable files\n.env\n.env.development.local\n.env.test.local\n.env.production.local\n.env.local\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# vuepress v2.x temp and cache directory\n.temp\n.cache\n\n# Docusaurus cache and generated files\n.docusaurus\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*\n</code></pre> <p>\u4fee\u6539package.json</p> JSON<pre><code>{\n  \"name\": \"project-name\",\n  \"version\": \"1.0.0\",\n  \"description\": \"project-description\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"electron .\",\n    \"test\": \"echo \\\\\\\"Error: no test specified\\\\\\\" &amp;&amp; exit 1\"\n  },\n  \"author\": \"author\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"electron\": \"^23.1.3\"\n  }\n}\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#_2","title":"\u8f93\u5165\u521d\u59cb\u5316\u6a21\u677f","text":"index.jsindex.html JavaScript<pre><code>const { app, BrowserWindow } = require('electron/main')\n\nconst createWindow = () =&gt; {\n  const win = new BrowserWindow({\n    width: 800,\n    height: 600\n  })\n\n  win.loadFile('index.html')\n}\n\napp.whenReady().then(() =&gt; {\n  createWindow()\n\n  app.on('activate', () =&gt; {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow()\n    }\n  })\n})\n\napp.on('window-all-closed', () =&gt; {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n</code></pre> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta\n      http-equiv=\"Content-Security-Policy\"\n      content=\"default-src 'self'; script-src 'self'\"\n    /&gt;\n    &lt;meta\n      http-equiv=\"X-Content-Security-Policy\"\n      content=\"default-src 'self'; script-src 'self'\"\n    /&gt;\n    &lt;title&gt;Hello from Electron renderer!&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello from Electron renderer!&lt;/h1&gt;\n    &lt;p&gt;\ud83d\udc4b&lt;/p&gt;\n    &lt;p id=\"info\"&gt;&lt;/p&gt;\n  &lt;/body&gt;\n  &lt;script src=\"./renderer.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE/#_3","title":"\u8fd0\u884c","text":"Bash<pre><code>npm run start\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/","title":"Electron\u6253\u5305","text":"<p>Electron\u662f\u7528TS\u7f16\u5199windows\u5e94\u7528\u7684\u6846\u67b6\u3002\u4f5c\u4e3a\u4e00\u4e2awindows\u5e94\u7528\uff0c\u662f\u5f88\u9002\u5408\u6253\u5305\u6210\u4e00\u4e2a\u5b89\u88c5\u6587\u4ef6\u7684\u3002</p> <p>Electron\u63d0\u4f9b\u4e86\u591a\u4e2a\u6253\u5305\u65b9\u5f0f\uff0c\u672c\u6587\u4e0d\u8fc7\u591a\u4ecb\u7ecd\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u4f7f\u7528electron-builder\u8fdb\u884c\u6253\u5305\uff0c\u5b98\u7f51\u5730\u5740\uff1ahttps://www.electron.build/index.html</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#_1","title":"\u9879\u76ee\u6784\u5efa","text":"<p>\u9996\u5148\u6784\u5efa\u4e00\u4e2a\u793a\u4f8b\u9879\u76ee\uff0c\u53c2\u8003\uff1a</p> <p>https://www.electronjs.org/zh/docs/latest/tutorial/tutorial-first-app</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#packagejson","title":"package.json\u914d\u7f6e","text":"<ol> <li>\u5b89\u88c5\u4f9d\u8d56</li> </ol> Text Only<pre><code>npm install electron-builder\n</code></pre> <ol> <li>\u914d\u7f6e</li> </ol> JSON<pre><code>{\n  \"name\": \"my-electron-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"electron .\",\n    \"test\": \"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\",\n    \"make\": \"electron-builder\"                                                   // \u6dfb\u52a0\u6253\u5305\u547d\u4ee4\uff1a npm run make\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"electron\": \"^30.0.3\"\n  },\n\n  // electron-builder \u914d\u7f6e\n  \"build\": {\n    \"productName\": \"hello-electron\",\n    \"appId\": \"com.harry.helloElectron\",\n    \"copyright\": \"harry\",\n    \"directories\": {\n      \"output\": \"build\"\n    },\n    // \u53ef\u9009\u62e9\u5e73\u53f0\uff0c\u5177\u4f53\u89c1\uff1a\n    // https://www.electron.build/\n    \"win\": {\n      \"target\": [\n        {\n          \"target\": \"nsis\"\n        }\n      ],\n      \"artifactName\": \"${productName}-setup-${version}.${ext}\"\n    },\n\n    // windows \u901a\u8fc7 nsis \u6253\u5305\u5b89\u88c5\u6587\u4ef6\uff0c\u914d\u7f6e:\n    // https://www.electron.build/configuration/nsis.html\n    \"nsis\": {\n      \"oneClick\": false,\n      \"allowElevation\": true,\n      \"allowToChangeInstallationDirectory\": true,\n      \"createDesktopShortcut\": true,\n      \"createStartMenuShortcut\": true,\n      \"shortcutName\": \"helloElectron\"\n    }\n  }\n}\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#win","title":"\u81ea\u5b9a\u4e49\u5b89\u88c5\u9875\u9762\uff08win\uff09","text":"<p>electron-builder\u901a\u8fc7nsis\u6253\u5305\u5b89\u88c5\u6587\u4ef6\u3002NSIS\uff08Nullsoft Scriptable Install System\uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa Windows \u5b89\u88c5\u7a0b\u5e8f\u7684\u5f00\u6e90\u811a\u672c\u7cfb\u7edf\u3002</p> <p>\u901a\u8fc7\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u5df2\u7ecf\u6709\u4e00\u5957\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u5b89\u88c5\u9875\u9762\u4e86\uff1a\u9009\u62e9\u7528\u6237-&gt;\u9009\u62e9\u5b89\u88c5\u8def\u5f84-&gt;\u5b89\u88c5\u3002</p> <p>\u4f46\u6709\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u5b89\u88c5\u9875\u9762\u5e76\u8fdb\u884c\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\u3002\u8fd9\u5c31\u9700\u8981\u5bf9nsis\u811a\u672c\u505a\u5b9a\u5236\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#packagejson_1","title":"\u4fee\u6539package.json","text":"<p>\u6211\u4eec\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u521b\u5efa\u4e00\u4e2ansis\u811a\u672c\u6587\u4ef6\uff1abuild.nsh\uff0c\u7136\u540e\u5728package.json\u91cc\u5f15\u5165</p> JSON<pre><code>\"nsis\": {\n  \"oneClick\": false,\n  \"allowElevation\": true,\n  \"allowToChangeInstallationDirectory\": true,\n  \"createDesktopShortcut\": true,\n  \"createStartMenuShortcut\": true,\n  \"shortcutName\": \"helloElectron\",\n  \"include\": \"./build.nsh\"                          // \u5f15\u5165\u811a\u672c\n}\n</code></pre> <p>\u6839\u636eelectron-builder\u6587\u6863\uff0c\u811a\u672c\u5f15\u5165\u6709\u4e24\u79cd\u65b9\u5f0f\uff1ainclude\uff1a\u81ea\u5b9a\u4e49\u811a\u672c. script:\u5b8c\u5168\u5b9a\u5236\u5316\u811a\u672c\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u53ea\u7528\u7b2c\u4e00\u4e2a\u5c31\u591f\uff0c\u5b8c\u5168\u91cd\u5199\u811a\u6b65\u4ee3\u4ef7\u592a\u5927\u3002</p> <p>\u5982\u679c\u9700\u8981\u6ce8\u518c\u8868\u64cd\u4f5c\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5f15\u5165guid\u4fdd\u8bc1\u9879\u76ee\u5728\u6ce8\u518c\u8868\u6709\u786e\u5b9a\u7684\u547d\u540d:</p> JSON<pre><code>\"nsis\": {\n  \"oneClick\": false,\n  \"allowElevation\": true,\n  \"allowToChangeInstallationDirectory\": true,\n  \"createDesktopShortcut\": true,\n  \"createStartMenuShortcut\": true,\n  \"shortcutName\": \"helloElectron\",\n  \"include\": \"./build.nsh\",\n  \"guid\": \"HelloElectron\"                           // \u8bbe\u7f6eguid\n}\n</code></pre> <p>allowToChangeInstallationDirectory\u9009\u9879\u8ba9\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\uff0c\u4f46\u4e5f\u7ed1\u6b7b\u4e86\u9875\u9762\u987a\u5e8f\u3002\u5982\u679c\u6211\u4eec\u60f3\u5728\u9009\u62e9\u5b89\u88c5\u76ee\u5f55\u4e0e\u5b89\u88c5\u4e4b\u95f4\u52a0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u9875\u9762\uff0c\u90a3\u4e48\u8981\u5173\u6389\u8fd9\u4e2a\u9875\u9762\u5e76\u5728nsis\u811a\u672c\u91cc\u5f15\u5165\u3002</p> JSON<pre><code>\"nsis\": {\n  \"oneClick\": false,\n  \"allowElevation\": true,\n  \"allowToChangeInstallationDirectory\": false,      // \u6539\u4e3afalse\uff0c\u6216\u8005\u76f4\u63a5\u5220\u6389\n  \"createDesktopShortcut\": true,\n  \"createStartMenuShortcut\": true,\n  \"shortcutName\": \"helloElectron\",\n  \"include\": \"./build.nsh\",\n  \"guid\": \"HelloElectron\"\n}\n</code></pre> <p>\u603b\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5e94\u8be5\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u53bb\u914d\u7f6ensis\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#_2","title":"\u811a\u672c\u7f16\u5199","text":"<p>nsis\u7528\u4e86\u4e00\u79cd\u4f4e\u7ea7\u811a\u672c\u8bed\u8a00\uff0c\u751a\u81f3for\u5faa\u73af\u90fd\u6ca1\u6709\uff0c\u5728\u7f16\u5199\u81ea\u5b9a\u4e49\u9700\u6c42\u7684\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u5584\u7528\u8c37\u6b4c\uff0c\u4e0e\u67e5\u8be2nsis\u5b98\u65b9\u6587\u6863\uff1a</p> <p>https://nsis.sourceforge.io/Main_Page</p> <p>\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e9b\u7b14\u8005\u7528\u5230\u7684\u5185\u5bb9\uff1a</p> <p>\u6211\u4eec\u5047\u8bbe\u9700\u6c42\u662f\uff1a\u6b22\u8fce\u9875\u9762-&gt;\u5e94\u7528\u9009\u62e9\u76ee\u5f55-&gt;\u6570\u636e\u9009\u62e9\u76ee\u5f55-&gt;\u5b89\u88c5\u9875\u9762-&gt;\u5b89\u88c5\u5b8c\u6210\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u5c06nsis\u7684\u914d\u7f6e\u6539\u6210\u5982\u4e0b\uff1a</p> Text Only<pre><code>\"nsis\": {\n  \"oneClick\": false,\n  \"perMachine\": true,\n  \"shortcutName\": \"helloElectron\",\n  \"warningsAsErrors\": false,\n  \"include\": \"./build.nsh\",\n  \"guid\": \"HelloElectron\"\n}\n</code></pre> <p>\u8fd9\u91cc\u589e\u52a0\u4e86\u4e00\u4e2a\"warningsAsErrors\": false\uff0c\u4ee5\u907f\u514d\u67d0\u4e9b\u8b66\u544a\u5bfc\u81f4\u7f16\u8bd1\u5931\u8d25\uff0c</p> <p>\u6253\u5f00\u6784\u5efa\u597d\u7684\u5b89\u88c5\u5305\uff0c\u4f1a\u76f4\u63a5\u8fdb\u5165\u5b89\u88c5\u9875\u9762\u8fdb\u884c\u5b89\u88c5\u3002</p> <p>\u5f15\u5165\u73b0\u4ee3\u5316\u7ec4\u4ef6</p> <p>nsis\u63d0\u4f9b\u4e86\u4e00\u4e9b\u73b0\u4ee3\u5316\u7684\u9875\u9762\uff0c\u53ef\u4ee5\u5728\u811a\u672c\u91cc\u76f4\u63a5\u5f15\u7528\uff1a</p> NSIS<pre><code>!include \"MUI2.nsh\"\n\n# Installer pages\n!insertmacro MUI_PAGE_WELCOME\n!insertmacro MUI_PAGE_LICENSE textfile\n!insertmacro MUI_PAGE_COMPONENTS\n!insertmacro MUI_PAGE_DIRECTORY\n!insertmacro MUI_PAGE_STARTMENU pageid variable\n!insertmacro MUI_PAGE_INSTFILES\n!insertmacro MUI_PAGE_FINISH\n\n# Uninstaller pages\n!insertmacro MUI_UNPAGE_WELCOME\n!insertmacro MUI_UNPAGE_CONFIRM\n!insertmacro MUI_UNPAGE_LICENSE textfile\n!insertmacro MUI_UNPAGE_COMPONENTS\n!insertmacro MUI_UNPAGE_DIRECTORY\n!insertmacro MUI_UNPAGE_INSTFILES\n!insertmacro MUI_UNPAGE_FINISH\n</code></pre> <p>\u5b9e\u9645\u4e0a\uff0celectron-builder\u5c31\u662f\u5f15\u5165\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\uff0c\u5e76\u505a\u4e86\u4e00\u5c42\u529f\u80fd\u5316\u7684\u5c01\u88c5\uff0c\u53ef\u4ee5\u770belectron-builder\u7684\u6e90\u7801\uff1a https://github.com/electron-userland/electron-builder/blob/master/packages/app-builder-lib/templates/nsis/assistedInstaller.nsh</p> <p>\u8fd9\u4e2a\u6587\u4ef6\u91cc\u5c31\u6709\u5f00\u542f\u4e86allowToChangeInstallationDirectory\u540e\u7684\u811a\u672c\u3002</p> <p>\u6309\u987a\u5e8f\u5f15\u5165\u81ea\u5b9a\u4e49\u9875\u9762</p> <p>\u6839\u636e\u9700\u6c42\uff0c\u6211\u4eec\u9700\u8981\u6dfb\u52a0\u201c\u6b22\u8fce\u9875\u9762-&gt;\u5e94\u7528\u9009\u62e9\u76ee\u5f55-&gt;\u6570\u636e\u9009\u62e9\u76ee\u5f55\u201d\u8fd9\u4e09\u4e2a\u76ee\u5f55\uff0c\u5176\u4e2d\uff0c\u524d\u4e8c\u8005\u5c5e\u4e8eMUI\u7ec4\u4ef6\uff0c\u6211\u4eec\u76f4\u63a5\u5f15\u7528\u5373\u53ef\uff0c\u7b2c\u4e09\u4e2a\u5c5e\u4e8e\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u9875\u9762\u3002</p> NSIS<pre><code>!include \"MUI2.nsh\"\n\n!insertmacro MUI_PAGE_WELCOME\n!insertmacro MUI_PAGE_DIRECTORY\nPage custom CustomFunction CustomFunctionLeave\nFunction CustomFunction\nFunctionEnd\nFunction CustomFunctionLeave\nFunctionEnd\n\nUninstPage custom un.CustomFunction\nFunction un.CustomFunction\nFunctionEnd\n</code></pre> <ul> <li>\u81ea\u5b9a\u4e49\u9875\u9762\u683c\u5f0f\uff1aPage custom {function} {functionLeave}</li> <li>Page custom \u56fa\u5b9a\uff0c\u4e0d\u53ef\u4fee\u6539</li> <li>function\u4e3a\u81ea\u5b9a\u4e49\u9875\u9762\u8981\u505a\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u589e\u52a0\u89e6\u53d1\u51fd\u6570\u56de\u8c03\uff0c\u6bd4\u5982\u7ed9\u6309\u94ae\u589e\u52a0\u4e00\u4e2a\u529f\u80fd\u3002</li> <li>functionLeave\u4e3a\u70b9\u51fb\u4e0b\u4e00\u6b65\u4ee5\u540e\uff0c\u79bb\u5f00\u8fd9\u4e2a\u9875\u9762\u540e\u8981\u505a\u7684\u51fd\u6570\u3002</li> <li>Page\u4e00\u5b9a\u8981\u6709\u4e00\u4e2aUninstPage\uff0c\u5e76\u4e14\u51fd\u6570\u540d\u8981un.\u5f00\u5934\uff0c\u5426\u5219\u62a5\u9519</li> </ul> <p>\u9875\u9762\u529f\u80fd\u5b9a\u5236</p> <p>\u8fd9\u6837\u6253\u5305\u597d\u4ee5\u540e\uff0c\u9875\u9762\u5c31\u90fd\u6709\u4e86\uff0c\u4f46\u662f\u9875\u9762\u529f\u80fd\u8981\u505a\u4e00\u4e9b\u5b9a\u5236\uff1a</p> <ol> <li>\u5b89\u88c5\u8def\u5f84\u81ea\u52a8\u6dfb\u52a0\u5e94\u7528\u76ee\u5f55</li> </ol> <p>MUI2\u9ed8\u8ba4\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa\u76ee\u5f55\uff0celectron-builder\u6709\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u4e5f\u8981\u52a0\u4e0a\u3002\u53ef\u4ee5\u53c2\u8003\u521a\u521a\u7684electron-builder\u7684\u6e90\u7801\u3002</p> NSIS<pre><code>; StrContains\n; nsis\u5b98\u65b9\u63d0\u4f9b\u7684\u51fd\u6570\uff0chttps://nsis.sourceforge.io/StrContains\uff0c\u9700\u7f16\u7801\u8fdb\u811a\u672c\u6587\u4ef6\n; \u7528\u4e8e\u8bc6\u522b\u8def\u5f84\u662f\u5426\u5305\u542b\u5e94\u7528\u76ee\u5f55\n\nVar STR_HAYSTACK\nVar STR_NEEDLE\nVar STR_CONTAINS_VAR_1\nVar STR_CONTAINS_VAR_2\nVar STR_CONTAINS_VAR_3\nVar STR_CONTAINS_VAR_4\nVar STR_RETURN_VAR\n\nFunction StrContains\n  Exch $STR_NEEDLE\n  Exch 1\n  Exch $STR_HAYSTACK\n  ; Uncomment to debug\n  ;MessageBox MB_OK 'STR_NEEDLE = $STR_NEEDLE STR_HAYSTACK = $STR_HAYSTACK '\n    StrCpy $STR_RETURN_VAR \"\"\n    StrCpy $STR_CONTAINS_VAR_1 -1\n    StrLen $STR_CONTAINS_VAR_2 $STR_NEEDLE\n    StrLen $STR_CONTAINS_VAR_4 $STR_HAYSTACK\n    loop:\n      IntOp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_1 + 1\n      StrCpy $STR_CONTAINS_VAR_3 $STR_HAYSTACK $STR_CONTAINS_VAR_2 $STR_CONTAINS_VAR_1\n      StrCmp $STR_CONTAINS_VAR_3 $STR_NEEDLE found\n      StrCmp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_4 done\n      Goto loop\n    found:\n      StrCpy $STR_RETURN_VAR $STR_NEEDLE\n      Goto done\n    done:\n   Pop $STR_NEEDLE ;Prevent \"invalid opcode\" errors and keep the\n   Exch $STR_RETURN_VAR  \nFunctionEnd\n\n!macro _StrContainsConstructor OUT NEEDLE HAYSTACK\n  Push `${HAYSTACK}`\n  Push `${NEEDLE}`\n  Call StrContains\n  Pop `${OUT}`\n!macroend\n\n!define StrContains '!insertmacro \"_StrContainsConstructor\"'\n\n; \u5728\u5b89\u88c5\u524d\uff08\u9009\u62e9\u6570\u636e\u76ee\u5f55\u70b9\u51fb\u4e0b\u4e00\u6b65\u65f6\uff09\u4fee\u6539\u5e94\u7528\u5b89\u88c5\u8def\u5f84\nFunction CustomFunctionLeave\n    ; \u6570\u636e\u76ee\u5f55\u4e5f\u8981\u505a\u6821\u9a8c\n    ${StrContains} $0 \"HelloElectron\" $DataLocation\n ${If} $0 == \"\"\n StrCpy $INSTDIR \"$DataLocation\\HelloElectron\"\n ${endIf}\n\n ${StrContains} $0 \"HelloElectron\" $INSTDIR\n ${If} $0 == \"\"\n StrCpy $INSTDIR \"$INSTDIR\\HelloElectron\"\n ${endIf}\nFunctionEnd\n</code></pre> <ol> <li>\u5b9a\u5236\u6570\u636e\u9875\u9762</li> </ol> <p>\u4fee\u6539\u9875\u9762UI\uff0c\u589e\u52a0\u76ee\u5f55\u548c\u9009\u62e9</p> NSIS<pre><code>Var DataLocationDir\nVar DataLocationText\n!macro preInit\n    StrCpy $DataLocationText \"C:/ProgramData/HelloElectron\"\n!macroend\n\nFunction CustomFunction\n    !insertmacro MUI_HEADER_TEXT_PAGE \"\u9009\u62e9\u6570\u636e\u4f4d\u7f6e\" \"\u9009\u62e9\u6570\u636e\u8981\u5b89\u88c5\u7684\u6587\u4ef6\u5939\"   ; \u5b9a\u5236\u6807\u5934\n\n    ; \u521b\u5efa\u9875\u9762UI\n    nsDialogs::Create /NOUNLOAD 1018\n    pop $0\n\n    ; \u521b\u5efa\u6807\u7b7e\u63a7\u4ef6\n    ${NSD_CreateLabel} 0 0 100% 12u \"\u9009\u62e9\u6570\u636e\u76ee\u5f55\"\n    Pop $0\n\n    ; \u521b\u5efa\u76ee\u5f55\u6846 \u56db\u4e2a\u6570\u5b57\u4ee3\u8868\uff1a\u957f \u4e0a\u8fb9\u8ddd \u5bbd \u9ad8\n    ${NSD_CreateDirRequest} 0 15u 70% 12u \"$DataLocationText\"\n    Pop $DataLocationDir\n\n    ; \u521b\u5efa\u6d4f\u89c8\u6309\u94ae\n    ${NSD_CreateBrowseButton} 72% 13u 20% 15u \"\u6d4f\u89c8(B)...\"\n    Pop $0\n\n    ; \u8bbe\u7f6e\u6d4f\u89c8\u51fd\u6570\n    ${NSD_OnClick} $0 BrowseButtonClick\n    Pop $0\n\n    ; \u663e\u793a\u9875\u9762\n    nsDialogs::show\nFunctionEnd\n</code></pre> <p>\u9875\u9762\u6709\u4e86\uff0c\u7ed9\u6309\u952e\u589e\u52a0\u529f\u80fd\uff1a</p> NSIS<pre><code>Function BrowseButtonClick\n    nsDialogs::SelectFolderDialog \"\u9009\u62e9\u6570\u636e\u4f4d\u7f6e\" \"$DataLocationText\"\n    Pop $0\n\n    ${if} $0 != \"error\"\n        ${NSD_SetText} $DataLocationDir $0\n    ${Endif}\nFunctionEnd\n\n; \u5728\u5b89\u88c5\u524d\uff08\u9009\u62e9\u6570\u636e\u76ee\u5f55\u70b9\u51fb\u4e0b\u4e00\u6b65\u65f6\uff09\u4fee\u6539\u5e94\u7528\u5b89\u88c5\u8def\u5f84\nFunction CustomFunctionLeave\n    ${NSD_GetText} $DataLocationDir $DataLocationText            ; \u4ece\u76ee\u5f55\u6846\u83b7\u53d6\u6587\u672c\n\n    ; \u6570\u636e\u76ee\u5f55\u4e5f\u8981\u505a\u6821\u9a8c\n    ${StrContains} $0 \"HelloElectron\" $DataLocationText\n ${If} $0 == \"\"\n StrCpy $DataLocationText \"$DataLocationText\\HelloElectron\"\n ${endIf}\n\n ${StrContains} $0 \"HelloElectron\" $INSTDIR\n ${If} $0 == \"\"\n StrCpy $INSTDIR \"$INSTDIR\\HelloElectron\"\n ${endIf}\nFunctionEnd\n</code></pre> <ol> <li>\u6570\u636e\u6301\u4e45\u5316</li> </ol> <p>\u5982\u679c\u9700\u8981\u5c06\u6570\u636e\u505a\u6301\u4e45\u5316\uff0c\u53ef\u4ee5\u8003\u8651\u5199\u5165\u6587\u4ef6\u6216\u5199\u5165\u6ce8\u518c\u8868</p> NSIS<pre><code>!macro customInstall\n    ; \u5199\u6587\u4ef6\n    Delete \"$INSTDIR\\output.ini\"                ; \u5220\u9664\u505a\u521d\u59cb\u5316\n    FileOpen $0 \"$INSTDIR\\output.ini\" \"w\"       ; \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u5199\u5165\n    FileWrite $0 \"$DataLocationText\"            ; \u5199\u5165\u6587\u672c\n    FileClose $0                                ; \u5173\u95ed\u6587\u4ef6\n\n    ; \u5199\u6ce8\u518c\u8868\n    SetRegView 32\n    WriteRegStr HKLM \"${INSTALL_REGISTRY_KEY}\" DataLocation $DataLocationText\n    SetRegView 64\n    WriteRegStr HKLM \"${INSTALL_REGISTRY_KEY}\" DataLocation $DataLocationText\n!macroend\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%89%93%E5%8C%85/#_3","title":"\u6587\u4ef6\u6253\u5305","text":"Text Only<pre><code>npm run make\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/","title":"Electron\u7684\u6d41\u7a0b\u6a21\u578b","text":"<p>Electron\u91c7\u7528\u4e86\u7c7b\u4f3c\u4e8eChromium\u7684\u591a\u8fdb\u7a0b\u67b6\u6784\uff0c\u4e3b\u8981\u7ba1\u7406\u4e24\u7c7b\u8fdb\u7a0b\uff1a\u4e3b\u8fdb\u7a0b\u548c\u6e32\u67d3\u5668\u8fdb\u7a0b\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_1","title":"\u4e3b\u8fdb\u7a0b","text":"<p>\u6bcf\u4e2a Electron \u5e94\u7528\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u4e3b\u8fdb\u7a0b\uff0c\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002 \u8fd9\u4e2a\u4e3b\u8fdb\u7a0b\u5728Node.js\u73af\u5883\u4e2d\u8fd0\u884c\uff0c\u62e5\u6709\u4f7f\u7528<code>require</code>\u6765\u52a0\u8f7d\u6a21\u5757\u548c\u4f7f\u7528\u6240\u6709Node.js API\u7684\u80fd\u529b\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_2","title":"\u7a97\u53e3\u7ba1\u7406","text":"<p>\u4e3b\u8fdb\u7a0b\u4e3b\u8981\u8d1f\u8d23\u5229\u7528<code>BrowserWindow</code>\u6a21\u5757\u6765\u521b\u5efa\u548c\u7ba1\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u7a97\u53e3\u3002</p> <p>\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u7a97\u53e3\u7684<code>webContents</code>\u5bf9\u8c61\u4e0e\u7f51\u9875\u5185\u5bb9\u8fdb\u884c\u4ea4\u4e92\u3002</p> JavaScript<pre><code>const { BrowserWindow } = require('electron')\n\nconst win = new BrowserWindow({ width: 800, height: 1500 })\nwin.loadURL('https://github.com')\n\nconst contents = win.webContents\nconsole.log(contents)\n</code></pre> <p><code>BrowserWindow</code>\u6a21\u5757\u7ee7\u627f\u81ea<code>EventEmitter</code>\uff0c\u5141\u8bb8\u60a8\u4e3a\u5404\u79cd\u7528\u6237\u4e8b\u4ef6\uff08\u5982\u6700\u5c0f\u5316\u6216\u6700\u5927\u5316\u7a97\u53e3\uff09\u6dfb\u52a0\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>\u5f53\u4e00\u4e2a<code>BrowserWindow</code>\u5b9e\u4f8b\u88ab\u9500\u6bc1\u65f6\uff0c\u4e0e\u4e4b\u76f8\u5173\u7684\u6e32\u67d3\u5668\u8fdb\u7a0b\u4e5f\u4f1a\u968f\u4e4b\u7ec8\u6b62\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_3","title":"\u5e94\u7528\u7a0b\u5e8f\u751f\u547d\u5468\u671f","text":"<p>\u4e3b\u8fdb\u7a0b\u901a\u8fc7Electron\u7684<code>app</code>\u6a21\u5757\u6765\u63a7\u5236\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002</p> JavaScript<pre><code>// quitting the app when no windows are open on non-macOS platforms\napp.on('window-all-closed', () =&gt; {\n  if (process.platform !== 'darwin') app.quit()\n})\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#api","title":"\u539f\u751f API","text":"<p>\u4e3b\u8fdb\u7a0b\u4e5f\u80fd\u591f\u96c6\u6210\u548c\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u751fAPI\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_4","title":"\u6e32\u67d3\u5668\u8fdb\u7a0b","text":"<p>\u5728Electron\u4e2d\uff0c\u6bcf\u4e2a\u6253\u5f00\u7684<code>BrowserWindow</code>\u4f1a\u4ea7\u751f\u4e00\u4e2a\u72ec\u7acb\u7684\u6e32\u67d3\u5668\u8fdb\u7a0b\u3002\u8fd9\u4e9b\u8fdb\u7a0b\u8d1f\u8d23\u5448\u73b0\u7f51\u9875\u5185\u5bb9\uff0c\u5e76\u4e14\u5fc5\u987b\u9075\u5b88\u6807\u51c6\u7684\u7f51\u9875\u6280\u672f\u89c4\u8303\uff1a</p> <ul> <li>\u4f7f\u7528HTML\u6587\u4ef6\u4f5c\u4e3a\u6bcf\u4e2a\u6e32\u67d3\u5668\u8fdb\u7a0b\u7684\u5165\u53e3\u70b9\u3002</li> <li>\u5e94\u7528\u5c42\u53e0\u6837\u5f0f\u8868\uff08CSS\uff09\u6765\u6dfb\u52a0\u548c\u4fee\u6539\u754c\u9762\u6837\u5f0f\u3002</li> <li>\u901a\u8fc7<code>&lt;script&gt;</code>\u6807\u7b7e\u5f15\u5165\u548c\u6267\u884cJavaScript\u4ee3\u7801\u3002</li> </ul> <p>\u4e0d\u8fc7\uff0c\u6e32\u67d3\u5668\u8fdb\u7a0b\u6ca1\u6709\u76f4\u63a5\u8bbf\u95eeNode.js API\u7684\u6743\u9650\uff0c\u5305\u62ec<code>require</code>\u547d\u4ee4\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_5","title":"\u9884\u52a0\u8f7d\u811a\u672c","text":"<p>\u9884\u52a0\u8f7d\u811a\u672c\u662f\u4e00\u79cd\u7279\u6b8a\u7684JavaScript\u6587\u4ef6\uff0c\u5b83\u5728\u6e32\u67d3\u5668\u8fdb\u7a0b\u52a0\u8f7d\u7f51\u9875\u5185\u5bb9\u4e4b\u524d\u6267\u884c\u3002 \u5c3d\u7ba1\u8fd9\u4e9b\u811a\u672c\u5728\u6e32\u67d3\u5668\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u8bbf\u95eeNode.js\u7684API\u3002</p> <p>\u5728<code>BrowserWindow</code>\u7684\u6784\u9020\u51fd\u6570\u4e2d\u7684<code>webPreferences</code>\u9009\u9879\u91cc\u53ef\u4ee5\u6307\u5b9a\u9884\u52a0\u8f7d\u811a\u672c\u7684\u8def\u5f84\uff1a</p> JavaScript<pre><code>const { BrowserWindow } = require('electron')\n// ...\nconst win = new BrowserWindow({\n  webPreferences: {\n    preload: 'path/to/preload.js'\n  }\n})\n// ...\n</code></pre> <p>\u9884\u52a0\u8f7d\u811a\u672c\u4e0e\u6e32\u67d3\u5668\u5171\u4eab\u540c\u4e00\u4e2a\u5168\u5c40<code>Window</code>\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u5728\u5168\u5c40<code>window</code>\u5bf9\u8c61\u4e2d\u66b4\u9732API\u6765\u4e3a\u7f51\u9875\u5185\u5bb9\u63d0\u4f9b\u989d\u5916\u7684\u529f\u80fd\u3002</p> <p>\u4e3a\u4e86\u786e\u4fdd\u5b89\u5168\uff0c\u9884\u52a0\u8f7d\u811a\u672c\u4e0d\u80fd\u76f4\u63a5\u5bf9<code>window</code>\u5bf9\u8c61\u8fdb\u884c\u66f4\u6539\u3002</p> JavaScript<pre><code>// preload.js\nwindow.myAPI = {\n  desktop: true\n}\n\n// renderer.js\nconsole.log(window.myAPI)\n// =&gt; undefined\n</code></pre> <p>\u8bed\u5883\u9694\u79bb\uff08Context Isolation\uff09\u610f\u5473\u7740\u9884\u52a0\u8f7d\u811a\u672c\u4e0e\u6e32\u67d3\u5668\u7684\u4e3b\u8981\u8fd0\u884c\u73af\u5883\u662f\u9694\u79bb\u5f00\u6765\u7684\uff0c\u4ee5\u907f\u514d\u6cc4\u6f0f\u4efb\u4f55\u5177\u7279\u6743\u7684 API \u5230\u60a8\u7684\u7f51\u9875\u5185\u5bb9\u4ee3\u7801\u4e2d\u3002</p> <p>\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>contextBridge</code>\u6a21\u5757\u6765\u5b89\u5168\u5730\u5728\u9884\u52a0\u8f7d\u811a\u672c\u548c\u6e32\u67d3\u5668\u4e4b\u95f4\u5efa\u7acb\u6c9f\u901a\u6865\u6881\uff1a</p> JavaScript<pre><code>// preload.js\nconst { contextBridge } = require('electron')\n\ncontextBridge.exposeInMainWorld('myAPI', {\n  desktop: true\n})\n\n// renderer.js\nconsole.log(window.myAPI)\n// =&gt; { desktop: true }\n</code></pre> <p>\u8fd9\u79cd\u673a\u5236\u975e\u5e38\u6709\u7528\uff0c\u7279\u522b\u662f\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff1a</p> <ul> <li>\u901a\u8fc7\u66b4\u9732 <code>ipcRenderer</code> \u5e2e\u624b\u6a21\u5757\u4e8e\u6e32\u67d3\u5668\u4e2d\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5229\u7528\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09\u4ece\u6e32\u67d3\u5668\u89e6\u53d1\u4e3b\u8fdb\u7a0b\u7684\u4efb\u52a1\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002</li> <li>\u5982\u679c\u6b63\u5728\u4e3a\u8fdc\u7a0bURL\u4e0a\u7684\u73b0\u6709Web\u5e94\u7528\u5f00\u53d1Electron\u5c01\u88c5\u65f6\uff0c\u53ef\u4ee5\u5728\u6e32\u67d3\u5668\u7684<code>window</code>\u5bf9\u8c61\u4e0a\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u4ee5\u5b9e\u73b0\u53ea\u9002\u7528\u4e8e\u684c\u9762\u5e94\u7528\u7684\u7279\u6b8a\u903b\u8f91\u3002</li> </ul>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_6","title":"\u6548\u7387\u8fdb\u7a0b","text":"<p>\u6bcf\u4e2aElectron\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u901a\u8fc7UtilityProcess API\u751f\u6210\u591a\u4e2a\u5b50\u8fdb\u7a0b\u3002\u4e3b\u8fdb\u7a0b\u5728Node.js\u73af\u5883\u4e2d\u8fd0\u884c\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u80fd\u591f\u4f7f\u7528require\u6a21\u5757\u548c\u6240\u6709Node.js API\u3002\u5b50\u8fdb\u7a0b\u53ef\u4ee5\u7528\u6765\u8fd0\u884c\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u6bd4\u5982\u5904\u7406\u4e0d\u53ef\u4fe1\u7684\u670d\u52a1\u3001\u6267\u884cCPU\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u6216\u7ba1\u7406\u90a3\u4e9b\u5728\u4e3b\u8fdb\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5f15\u8d77\u5d29\u6e83\u7684\u7ec4\u4ef6\u3002</p> <p>\u5bf9\u6bd4Node.js\u7684child_process\u6a21\u5757\uff0cUtilityProcess\u521b\u5efa\u7684\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7MessagePort\u5efa\u7acb\u4e0e\u6e32\u67d3\u8fdb\u7a0b\u7684\u901a\u4fe1\u901a\u9053\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E6%B5%81%E7%A8%8B%E6%A8%A1%E5%9E%8B/#_7","title":"\u7279\u5b9a\u8fdb\u7a0b\u6a21\u5757","text":"<p>Electron\u7684npm\u5305\u8fd8\u5bfc\u51fa\u4e86\u5305\u542bElectron TypeScript\u7c7b\u578b\u5b9a\u4e49\u5b50\u96c6\u7684\u5b50\u8def\u5f84\u3002</p> <ul> <li><code>electron/main</code> \u5305\u542b\u6240\u6709\u4e3b\u8fdb\u7a0b\u6a21\u5757\u7684\u7c7b\u578b\u3002</li> <li><code>electron/renderer</code> \u5305\u542b\u6240\u6709\u6e32\u67d3\u8fdb\u7a0b\u6a21\u5757\u7684\u7c7b\u578b\u3002</li> <li><code>electron/common</code> \u5305\u542b\u53ef\u4ee5\u5728\u4e3b\u8fdb\u7a0b\u548c\u6e32\u67d3\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u6a21\u5757\u7684\u7c7b\u578b\u3002</li> </ul> Text Only<pre><code>const { app } = require('electron/main');\nconst { shell } = require('electron/common');\n</code></pre>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Electron/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<p>Electron \u4e2d\u4e3b\u8fdb\u7a0b\u4e0e\u6e32\u67d3\u8fdb\u7a0b\u4e4b\u95f4\u6709\u660e\u786e\u7684\u5206\u5de5\uff1a</p> <p>\u4e3b\u8fdb\u7a0b\u7684\u89d2\u8272</p> <ul> <li>\u6267\u884c Node.js \u64cd\u4f5c\uff1a\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u3001\u7f51\u7edc\u8bf7\u6c42\u3001\u5176\u4ed6\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u4efb\u52a1\u3002</li> <li>\u7ba1\u7406\u6e32\u67d3\u8fdb\u7a0b\uff1a\u521b\u5efa\u548c\u63a7\u5236\u5e94\u7528\u7a97\u53e3\u3002</li> <li>\u54cd\u5e94 IPC \u6d88\u606f\uff1a\u5904\u7406\u6765\u81ea\u6e32\u67d3\u8fdb\u7a0b\u7684\u8bf7\u6c42\uff0c\u5e76\u5411\u5176\u8fd4\u56de\u6570\u636e\u6216\u53cd\u9988\u3002</li> </ul> <p>\u6e32\u67d3\u8fdb\u7a0b\u7684\u89d2\u8272</p> <ul> <li>\u5904\u7406 UI\uff1a\u8fd0\u884c\u548c\u7ba1\u7406\u7f51\u9875\u754c\u9762\uff0c\u5904\u7406\u7528\u6237\u7684\u8f93\u5165\uff0c\u663e\u793a\u5185\u5bb9\u3002</li> <li>\u6570\u636e\u4f20\u9012\uff1a\u901a\u8fc7 IPC \u53d1\u9001\u6570\u636e\u6216\u8bf7\u6c42\u5230\u4e3b\u8fdb\u7a0b\u3002</li> <li>\u9650\u5236\u76f4\u63a5\u8bbf\u95ee Node.js\uff1a\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u6e32\u67d3\u8fdb\u7a0b\u9ed8\u8ba4\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee Node.js \u529f\u80fd\u3002</li> </ul> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\uff0c\u7136\u540e\u6267\u884c\u5904\u7406\u6587\u4ef6\u3001\u6216\u8005\u7f51\u7edc\u64cd\u4f5c\u7b49\u5c5e\u4e8eNode.js\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u4ee3\u7801\u5b9e\u73b0\u662f\u4e0d\u80fd\u653e\u5728\u6e32\u67d3\u8fdb\u7a0b\u91cc\u7684\uff0c\u800c\u662f\u5728\u6e32\u67d3\u8fdb\u7a0b\u62ff\u5230\u6570\u636e\uff0c\u5c06\u6570\u636e\u56de\u4f20\u7ed9\u4e3b\u7ebf\u7a0b\uff0c\u8ba9\u4e3b\u7ebf\u7a0b\u6267\u884c\u5bf9\u5e94\u7684Node.js\u64cd\u4f5c\u3002</p> <p>\u5728 Electron \u4e2d\uff0c\u8fdb\u7a0b\u4f7f\u7528 <code>ipcMain</code> \u548c <code>ipcRenderer</code> \u6a21\u5757\uff0c\u901a\u8fc7\u5f00\u53d1\u4eba\u5458\u5b9a\u4e49\u7684\u201c\u901a\u9053\u201d\u4f20\u9012\u6d88\u606f\u6765\u8fdb\u884c\u901a\u4fe1\u3002 \u901a\u9053\u53ef\u4ee5\u4efb\u610f\u547d\u540d\uff0c\u4e14\u662f\u53cc\u5411\u7684\u3002</p> <p>\u73b0\u5728\u5047\u8bbe\u6211\u4eec\u6709\u4e3b\u7ebf\u7a0b\u811a\u672cindex.js\u3001\u9884\u52a0\u8f7d\u811a\u672cpreload.js\u3001\u6e32\u67d3\u7ebf\u7a0b\u811a\u672cpage.js\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u7ed3\u6784\u5e94\u8be5\u662f\u8fd9\u6837\u7684\uff1a</p> index.jspreload.jspage.jsindex.html JavaScript<pre><code>// \u5f15\u5165ipcMain\nconst {app, BrowserWindow, ipcMain} = require('electron/main')  \nconst path = require('node:path')\n\n// \u5f15\u5165Node.js\u6a21\u5757\u529f\u80fd\u4ee3\u7801\uff0c\u5f53\u7136\u5982\u679c\u4f60\u4e0d\u60f3\u6a21\u5757\u5316\uff0c\u5c31\u5199\u51e0\u4e07\u884c\u7684index.js\u4e5f\u53ef\u4ee5\nconst {nodejsFunction} = require('./functionModule');\n\n\n\n// \u901a\u8fc7ipcMain\u5efa\u7acbpageFunctionPipe\u76d1\u542c\u7ba1\u9053\uff0c\u8be5\u7ba1\u9053\u7531preload.js\u8bbe\u7f6e\uff0c\u88abpage.js\u8c03\u7528\u89e6\u53d1\nipcMain.on('pageFunctionPipe', (event, data) =&gt; {\n    // \u8c03\u7528\u81ea\u5b9a\u4e49\u6a21\u5757\u8fdb\u884c\u5904\u7406\n    nodejsFunction(data)\n});\n\n// \u6b63\u5e38\u7684electron\u521d\u59cb\u5316\u4ee3\u7801\nconst createWindow = () =&gt; {\n    const win = new BrowserWindow({\n        width: 1440,\n        height: 900,\n        webPreferences: {\n            preload: path.join(__dirname, 'preload.js')\n        }\n    })\n    win.loadFile('index.html')\n}\n\napp.whenReady().then(() =&gt; {\n    createWindow()\n})\n</code></pre> JavaScript<pre><code>// \u5f15\u5165ipcRenderer\nconst {contextBridge, ipcRenderer} = require('electron/renderer')\n\n//\u5b9a\u4e49\u4e00\u4e2awindow\u5bf9\u8c61\uff0c\u6b64\u5904\u7528electron\ncontextBridge.exposeInMainWorld('electron', {\n    // \u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3nodejsFunctionAPItoPage\uff0c\u8fd9\u4e2a\u63a5\u53e3\u5728page.js\u4e2d\u88ab\u8c03\u7528\n    nodejsFunctionAPItoPage: (data) =&gt; {\n        // \u8fd9\u91cc\u5bf9\u7ba1\u9053pageFunctionPipe\u547d\u540d\uff0c\u7531\u4e3b\u7ebf\u7a0b\u811a\u672c\u5f00\u542f\u76d1\u542c\n        ipcRenderer.send('pageFunctionPipe', data);\n    }\n});\n</code></pre> JavaScript<pre><code>// \u8c03\u7528preload\u4e2d\u5b9a\u4e49\u7684window\u5bf9\u8c61\u4e0e\u63a5\u53e3\nwindow.electron.nodejsFunctionAPItoPage(data);\n</code></pre> HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  // ...\u7701\u7565HTML\u4ee3\u7801\n\n  //\u5f15\u5165page.js\n  &lt;script src=\"./page.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4f1a\u5728\u6e32\u67d3\u8fdb\u7a0b\u6267\u884c\u5230nodejsFunctionAPItoPage\u65f6\uff0c\u89e6\u53d1\u4e3b\u7ebf\u7a0b\u7684\u76d1\u542c\u51fd\u6570\u5e76\u4f20\u53c2\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"Flutter\u73af\u5883\u642d\u5efa","text":"<p>\u5373\u4fbf\u5b98\u7f51\u6709\u4e86\u4e2d\u56fd\u533a\u7684\u6559\u7a0b\uff0c\u4f46\u662f\u8bf4\u660e\u8fd8\u662f\u4e0d\u591f\u5f88\u8be6\u7ec6\uff0c\u8e29\u4e86\u5f88\u591a\u5751\uff0c\u8fd9\u8fb9\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0bFlutter\u7684\u642d\u5efa\u8fc7\u7a0b\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#1","title":"1\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u4e3a\u4e86\u786e\u4fddFlutter\u80fd\u591f\u5728\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u987a\u5229\u8fd0\u884c\uff0c\u6211\u4eec\u9700\u8981\u5148\u8bbe\u7f6e\u4e00\u4e9b\u73af\u5883\u53d8\u91cf\u3002\u8fd9\u4e9b\u53d8\u91cf\u5c06\u5e2e\u52a9Flutter\u8bc6\u522b\u5fc5\u8981\u7684\u8d44\u6e90\u548c\u8def\u5f84\u3002</p> <ol> <li><code>PUB_HOSTED_URL</code>:  https://pub.flutter-io.cn</li> <li><code>FLUTTER_STORAGE_BASE_URL</code>:https://storage.flutter-io.cn</li> <li><code>NO_PROXY</code>: <code>localhost,127.0.0.1,::1</code></li> <li><code>ALL_PROXY</code>\uff08\u5982\u679c\u9700\u8981\uff09: <code>http://\u4ee3\u7406\u5730\u5740:\u7aef\u53e3</code> \u6216 <code>socks5://\u4ee3\u7406\u5730\u5740:\u7aef\u53e3</code>\u3002</li> </ol> <p>\u524d\u9762\u4e24\u4e2a\u4e3a\u4e2d\u56fd\u533a\u955c\u50cf\uff0c\u540e\u9762\u4e24\u4e2a\u662f\u4ee3\u7406\u914d\u7f6e\u3002</p>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#2pathwindowsinstalllinuxmac","title":"2\uff1a\u6dfb\u52a0PATH(windows)/Install(Linux\\Mac)","text":"<ul> <li><code>C:\\Flutter\\bin</code>\uff08\u5047\u8bbe\u5c06Flutter\u5b89\u88c5\u5728C:\\Flutter\uff09\u3002</li> <li><code>C:\\AndroidSDK</code>\uff08\u5047\u8bbe\u5c06AndroidSDK\u5b89\u88c5\u5728C:\\AndroidSDK\uff09\u3002</li> </ul>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#3flutter-sdk","title":"3\uff1a\u4e0b\u8f7d\u4e0e\u5b89\u88c5Flutter SDK","text":"<ol> <li>\u4e0b\u8f7dFlutter SDK\u3002</li> <li>\u89e3\u538b\u4e0b\u8f7d\u7684\u6587\u4ef6\u5230 <code>C:\\Flutter</code> \u76ee\u5f55\uff08\u6ce8\u610f\uff1a\u8def\u5f84\u4e2d\u4e0d\u8981\u5305\u542b\u7a7a\u683c\uff09\u3002</li> </ol>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#4android-studiovisual-studio-2022","title":"4\uff1a\u5b89\u88c5Android Studio\u548cVisual Studio 2022","text":"<p>\u5b89\u88c5Android Studio\u548cVisual Studio 2022\uff0c\u8fd9\u4e9bIDE\u4e3aFlutter\u5f00\u53d1\u63d0\u4f9b\u4e86\u5fc5\u8981\u7684\u5de5\u5177\u548c\u652f\u6301\u3002</p> <ol> <li>\u4eceAndroid Studio\u5b98\u7f51\u4e0b\u8f7d\u5e76\u5b89\u88c5Android Studio\u3002</li> <li>\u5728\u5b89\u88c5\u65f6\u9009\u62e9\u5b89\u88c5Android SDK\uff08\u63a8\u8350\u7248\u672c34\uff09\u3002</li> <li>\u4eceVisual Studio\u5b98\u7f51\u4e0b\u8f7d\u5e76\u5b89\u88c5Visual Studio 2022\u3002</li> <li>\u5728\u5b89\u88c5Visual Studio\u65f6\uff0c\u786e\u4fdd\u5305\u542bC++\u5f00\u53d1\u73af\u5883\u3002</li> </ol>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#5android-cmdline-tools","title":"5\uff1a\u8bbe\u7f6eAndroid cmdline-tools","text":"<ol> <li>\u4e0b\u8f7dAndroid cmdline-tools\u5e76\u89e3\u538b\u5230AndroidSDK\u76ee\u5f55\u3002</li> <li>\u5728cmdline-tools\u7684bin\u76ee\u5f55\u4e0b\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</li> <li><code>.\\sdkmanager.bat --install \"cmdline-tools;latest\"</code></li> <li><code>flutter doctor --android-licenses</code></li> </ol>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#6maven","title":"6\uff1a\u66f4\u6362Maven\u955c\u50cf\u5730\u5740\uff1a","text":"<ol> <li>\u6253\u5f00<code>/path-to-flutter-sdk/packages/flutter_tools/lib/src/http_host_validator.dart</code>\u6587\u4ef6\uff0c\u4fee\u6539<code>https://maven.google.com/</code>\u4e3a google maven \u7684\u56fd\u5185\u955c\u50cf\uff0c\u5982<code>https://maven.aliyun.com/repository/google/</code></li> <li>\u5220\u9664<code>/path-to-flutter-sdk/bin/cache</code> \u6587\u4ef6\u5939</li> </ol>"},{"location":"%E5%AE%A2%E6%88%B7%E7%AB%AF/Flutter/Flutter%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#7flutter-doctor","title":"7\uff1a\u8fd0\u884cflutter doctor","text":"<p>\u6700\u540e\uff0c\u8fd0\u884c <code>flutter doctor</code> \u547d\u4ee4\u68c0\u67e5\u73af\u5883\u662f\u5426\u5df2\u6b63\u786e\u914d\u7f6e\uff0c\u5982\u679c\u6709\u95ee\u9898\u4f1a\u6709\u5bf9\u5e94\u56de\u663e\u3002</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/Pytorch/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/","title":"\u521d\u59cb\u5316","text":"Python<pre><code>x_data = torch.tensor([1,2],[3,4])                      # \u901a\u8fc7\u539f\u59cb\u6570\u7ec4\u521d\u59cb\u5316\nx_np = torch.from_numpy(np_array)                       # \u901a\u8fc7NumPy\u6570\u7ec4\u521d\u59cb\u5316\n\nx_ones = torch.ones_like(x_data)                        # \u4e0ex_data\u5f62\u72b6\u76f8\u540c\uff0c\u503c\u90fd\u4e3a1\nx_rand = torch.rand_like(x_data, dtype=torch.float)     # \u4e0ex_data\u5f62\u72b6\u76f8\u540c\uff0c\u503c\u4e3a0-1\u968f\u673a\u503c\n\n# \u901a\u8fc7\u5f62\u72b6\u521b\u5efa\nshape = (2,3,)\nrand_tensor = torch.rand(shape)\nones_tensor = torch.ones(shape)\nzeros_tensor = torch.zeros(shape)\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/","title":"Transformer\u521d\u63a2","text":"<p>Transformer \u662f\u4e00\u79cd\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5e8f\u5217\u6570\u636e\uff0c\u5982\u6587\u672c\u3002\u81ea2017\u5e74\u7531Vaswani\u7b49\u4eba\u5728\u8bba\u6587\u300aAttention Is All You Need\u300b\u4e2d\u63d0\u51fa\u4ee5\u6765\uff0c\u5b83\u5df2\u7ecf\u6210\u4e3a\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u9886\u57df\u7684\u4e00\u4e2a\u6838\u5fc3\u6280\u672f\u3002Transformer\u6a21\u578b\u7684\u5173\u952e\u521b\u65b0\u662f\u5176\u4f7f\u7528\u4e86\u201c\u81ea\u6ce8\u610f\u529b\uff08Self-Attention\uff09\u201d\u673a\u5236\uff0c\u8fd9\u4f7f\u5f97\u5b83\u5728\u5904\u7406\u957f\u8ddd\u79bb\u4f9d\u8d56\u5173\u7cfb\u65f6\u8868\u73b0\u51fa\u8272\uff0c\u5e76\u4e14\u80fd\u591f\u9ad8\u6548\u5730\u5e76\u884c\u5904\u7406\u5e8f\u5217\u6570\u636e\u3002</p> <p>\u672c\u6587\u5c06\u5c1d\u8bd5\u57fa\u4e8eTransformer\u7684CausalLM\u6a21\u578b\u3002Causal Language Modeling (CausalLM) \u662f\u4e00\u79cd\u7279\u5b9a\u7684\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\uff0c\u5b83\u4e13\u6ce8\u4e8e\u751f\u6210\u8fde\u8d2f\u548c\u903b\u8f91\u4e0a\u5408\u7406\u7684\u6587\u672c\u3002\u5728\u8fd9\u79cd\u6a21\u578b\u4e2d\uff0c\u6587\u672c\u751f\u6210\u662f\u57fa\u4e8e\u5148\u524d\u7684\u8bcd\u6216\u77ed\u8bed\uff0c\u5373\u6a21\u578b\u751f\u6210\u7684\u6bcf\u4e2a\u65b0\u8bcd\u90fd\u53ea\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u8bcd\u3002\u8fd9\u79cd\u6a21\u578b\u901a\u5e38\u7528\u4e8e\u5404\u79cd\u751f\u6210\u4efb\u52a1\uff0c\u6bd4\u5982\u6545\u4e8b\u751f\u6210\u3001\u5bf9\u8bdd\u7cfb\u7edf\u3001\u5185\u5bb9\u521b\u4f5c\u8f85\u52a9\u5de5\u5177\u7b49\u3002</p> <p>CausalLM\u7684\u6838\u5fc3\u7279\u5f81\uff1a</p> <ol> <li>\u56e0\u679c\uff08\u5355\u5411\uff09\u5173\u7cfb\uff1a CausalLM\u7684\u4e3b\u8981\u7279\u70b9\u662f\u5176\u5355\u5411\uff08\u6216\u56e0\u679c\uff09\u7684\u5904\u7406\u65b9\u5f0f\u3002\u8fd9\u610f\u5473\u7740\u5728\u751f\u6210\u6587\u672c\u65f6\uff0c\u6a21\u578b\u4ec5\u8003\u8651\u4e4b\u524d\u7684\u8bcd\u6c47\uff08\u4e0a\u6587\uff09\uff0c\u800c\u4e0d\u50cf\u53cc\u5411\u6a21\u578b\u90a3\u6837\u540c\u65f6\u8003\u8651\u4e0a\u6587\u548c\u4e0b\u6587\u3002\u4f8b\u5982\uff0c\u7ed9\u5b9a\u4e00\u53e5\u8bdd\u7684\u5f00\u59cb\u90e8\u5206\uff0cCausalLM\u4f1a\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd\uff0c\u7136\u540e\u57fa\u4e8e\u8fd9\u4e2a\u65b0\u8bcd\u8fde\u540c\u4e4b\u524d\u7684\u8bcd\u7ee7\u7eed\u9884\u6d4b\u4e0b\u4e00\u4e2a\u8bcd\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</li> <li>\u9002\u7528\u4e8e\u6587\u672c\u751f\u6210\uff1a \u7531\u4e8e\u5176\u56e0\u679c\u6027\u8d28\uff0cCausalLM\u975e\u5e38\u9002\u5408\u6587\u672c\u751f\u6210\u4efb\u52a1\u3002\u5b83\u53ef\u4ee5\u8fde\u7eed\u751f\u6210\u6587\u672c\uff0c\u76f4\u5230\u8fbe\u5230\u67d0\u79cd\u505c\u6b62\u6761\u4ef6\uff0c\u5982\u751f\u6210\u4e86\u7279\u5b9a\u6570\u91cf\u7684\u8bcd\u6216\u8fbe\u5230\u4e86\u53e5\u5b50\u7684\u81ea\u7136\u7ed3\u675f\u3002</li> <li>\u5e94\u7528\u573a\u666f\u5e7f\u6cdb\uff1a \u8fd9\u79cd\u6a21\u578b\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u804a\u5929\u673a\u5668\u4eba\u3001\u6545\u4e8b\u8bb2\u8ff0\u3001\u81ea\u52a8\u5199\u4f5c\u52a9\u624b\u7b49\u9886\u57df\u3002\u5b83\u4eec\u53ef\u4ee5\u6839\u636e\u7ed9\u5b9a\u7684\u5f00\u5934\u751f\u6210\u8fde\u8d2f\u3001\u6709\u521b\u610f\u7684\u6587\u672c\u3002</li> <li>\u8bad\u7ec3\u65b9\u5f0f\uff1a \u5728\u8bad\u7ec3CausalLM\u65f6\uff0c\u901a\u5e38\u4f7f\u7528\u5927\u91cf\u6587\u672c\u6570\u636e\u3002\u6a21\u578b\u5b66\u4e60\u5982\u4f55\u6839\u636e\u5df2\u6709\u7684\u6587\u672c\u5e8f\u5217\u9884\u6d4b\u4e0b\u4e00\u4e2a\u6700\u53ef\u80fd\u7684\u8bcd\u3002\u8fd9\u79cd\u8bad\u7ec3\u65b9\u5f0f\u4f7f\u6a21\u578b\u80fd\u591f\u5b66\u4e60\u8bed\u8a00\u7684\u7ed3\u6784\u3001\u8bed\u6cd5\u89c4\u5219\u548c\u8bcd\u6c47\u95f4\u7684\u5173\u8054\u3002</li> <li>\u6280\u672f\u5b9e\u73b0\uff1a CausalLM\u901a\u5e38\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u5b9e\u73b0\uff0c\u7279\u522b\u662f\u5229\u7528\u4e86\u53d8\u6362\u5668\uff08Transformer\uff09\u67b6\u6784\u3002\u53d8\u6362\u5668\u6a21\u578b\u7279\u522b\u64c5\u957f\u5904\u7406\u5e8f\u5217\u6570\u636e\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u8bed\u8a00\u5efa\u6a21\u4efb\u52a1\u3002</li> </ol>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#_1","title":"\u73af\u5883","text":"<p>\u50cfdiffusers\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b89\u88c5\u73af\u5883\uff1a</p> Bash<pre><code>pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/     #\u6362\u6e90\npip3 install flask flask-cors                                                                                       #\u642d\u5efa\u4e00\u4e2a\u540e\u53f0\u73af\u5883\npip3 install torch transformers sentencepiece protobuf accelerate\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#1-torch","title":"1. <code>torch</code>","text":"<ul> <li>\u5e93\u540d\u79f0\uff1aPyTorch</li> <li>\u4e3b\u8981\u7528\u9014\uff1aPyTorch \u662f\u4e00\u4e2a\u5f00\u6e90\u673a\u5668\u5b66\u4e60\u5e93\uff0c\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u5e94\u7528\u3002\u5b83\u88ab\u5e7f\u6cdb\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u548c\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u754c\u9762\u6765\u6784\u5efa\u548c\u8bad\u7ec3\u795e\u7ecf\u7f51\u7edc\u3002</li> <li>\u7279\u70b9\uff1aPyTorch \u4ee5\u5176\u52a8\u6001\u8ba1\u7b97\u56fe\uff08\u53c8\u79f0\u4e3a\u201c\u5373\u65f6\u6267\u884c\u201d\u6a21\u5f0f\uff09\u548c\u5f3a\u5927\u7684 GPU \u52a0\u901f\u529f\u80fd\u800c\u8457\u79f0\u3002\u8fd9\u4f7f\u5f97\u5b83\u5728\u5feb\u901f\u5b9e\u9a8c\u548c\u539f\u578b\u8bbe\u8ba1\u4e2d\u975e\u5e38\u53d7\u6b22\u8fce\u3002</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#2-transformers","title":"2. <code>transformers</code>","text":"<ul> <li>\u5e93\u540d\u79f0\uff1aTransformers\uff08\u7531 Hugging Face \u63d0\u4f9b\uff09</li> <li>\u4e3b\u8981\u7528\u9014\uff1a\u8fd9\u4e2a\u5e93\u63d0\u4f9b\u4e86\u8bb8\u591a\u9884\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u5982 BERT\u3001GPT-2\u3001T5 \u7b49\uff0c\u4e3b\u8981\u7528\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u4efb\u52a1\uff0c\u5982\u6587\u672c\u5206\u7c7b\u3001\u95ee\u7b54\u3001\u6587\u672c\u751f\u6210\u7b49\u3002</li> <li>\u7279\u70b9\uff1aTransformers \u5e93\u6613\u4e8e\u4f7f\u7528\uff0c\u652f\u6301\u591a\u79cd\u6a21\u578b\u7ed3\u6784\uff0c\u5e76\u4e14\u53ef\u4ee5\u8f7b\u677e\u5730\u4e0e PyTorch \u548c TensorFlow \u96c6\u6210\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u5de5\u5177\u6765\u5904\u7406\u6587\u672c\u6570\u636e\u3002</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#3-sentencepiece","title":"3. <code>sentencepiece</code>","text":"<ul> <li>\u5e93\u540d\u79f0\uff1aSentencePiece</li> <li>\u4e3b\u8981\u7528\u9014\uff1a\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u6587\u672c\u5206\u8bcd\u7684\u5e93\uff0c\u5c24\u5176\u5728\u5904\u7406\u975e\u7a7a\u683c\u5206\u9694\u8bed\u8a00\uff08\u5982\u4e2d\u6587\u3001\u65e5\u8bed\uff09\u65f6\u975e\u5e38\u6709\u6548\u3002\u5b83\u652f\u6301 BPE\uff08Byte Pair Encoding\uff09\u548c Unigram \u4e24\u79cd\u5206\u8bcd\u6a21\u578b\u3002</li> <li>\u7279\u70b9\uff1aSentencePiece \u7684\u4e00\u4e2a\u4e3b\u8981\u4f18\u70b9\u662f\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u9884\u5b9a\u4e49\u7684\u8bcd\u6c47\u8868\uff0c\u76f4\u63a5\u4ece\u539f\u59cb\u6587\u672c\u6570\u636e\u4e2d\u5b66\u4e60\u8bcd\u6c47\u3002\u8fd9\u4f7f\u5f97\u5b83\u9002\u7528\u4e8e\u591a\u79cd\u8bed\u8a00\u548c\u4efb\u52a1\u3002</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#4-protobuf","title":"4. <code>protobuf</code>","text":"<ul> <li>\u5e93\u540d\u79f0\uff1aProtocol Buffers\uff08protobuf\uff09</li> <li>\u4e3b\u8981\u7528\u9014\uff1a\u7531 Google \u5f00\u53d1\uff0c\u5b83\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u3001\u9ad8\u6548\u7684\u7ed3\u6784\u5316\u6570\u636e\u5b58\u50a8\u683c\u5f0f\uff0c\u901a\u5e38\u7528\u4e8e\u6570\u636e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002</li> <li>\u7279\u70b9\uff1aProtocol Buffers \u4f18\u4e8e XML \u548c JSON\uff0c\u56e0\u4e3a\u5b83\u66f4\u5c0f\u3001\u66f4\u5feb\u3001\u66f4\u7b80\u5355\u3002\u5b83\u5e7f\u6cdb\u7528\u4e8e\u7f51\u7edc\u901a\u4fe1\u548c\u6570\u636e\u5b58\u50a8\u3002</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#5-accelerate","title":"5. <code>accelerate</code>","text":"<ul> <li>\u5e93\u540d\u79f0\uff1aAccelerate\uff08\u7531 Hugging Face \u63d0\u4f9b\uff09</li> <li>\u4e3b\u8981\u7528\u9014\uff1a\u8fd9\u662f\u4e00\u4e2a\u7b80\u5316\u5e76\u52a0\u901f\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u5728 CPU \u548c GPU \u4e0a\u7684\u8bad\u7ec3\u7684\u5e93\u3002</li> <li>\u7279\u70b9\uff1aAccelerate \u5e93\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762\u6765\u8fd0\u884c\u5206\u5e03\u5f0f\uff08\u591a GPU \u548c TPU\uff09\u8bad\u7ec3\uff0c\u800c\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\u5e95\u5c42\u786c\u4ef6\u7684\u590d\u6742\u6027\u3002\u5b83\u4e0e PyTorch \u548c Transformers \u5e93\u7d27\u5bc6\u96c6\u6210\u3002</li> </ul> <p>\u200b                           </p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/Transformer%E5%88%9D%E6%8E%A2/#_2","title":"\u4ee3\u7801\u793a\u4f8b","text":"<p>\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a</p> Python<pre><code>import torch\nfrom transformers import AutoModelForCausalLM, AutoTokenizer\nimport logging\n\n# \u914d\u7f6e\u65e5\u5fd7\u8bb0\u5f55\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\ntokenizer = None\nmodel = None\n\ndef load_model():\n    global tokenizer, model\n    if tokenizer is None or model is None:\n        logger.info(\"Loading tokenizer and model...\")\n        tokenizer = AutoTokenizer.from_pretrained(\"./\")\n        model = AutoModelForCausalLM.from_pretrained(\n            \"./\", \n            torch_dtype=torch.float16, \n            device_map=\"auto\",\n        )\n        logger.info(\"Tokenizer and model loaded.\")\n\ndef alpaca(prompt):\n    load_model()\n\n    device = \"mps\" if torch.backends.mps.is_available() else \"cpu\"\n    model.to(device)\n\n    try:\n        logger.info(f\"Processing prompt: {prompt}\")\n        inputs = tokenizer(prompt, return_tensors=\"pt\").to(device)\n\n        logger.info(\"Generating response...\")\n        outputs = model.generate(**inputs, do_sample=True, max_length=50, temperature=0.7, top_k=50, top_p=0.95)\n\n        response = tokenizer.decode(outputs[0], skip_special_tokens=True)\n        logger.info(\"Response generated.\")\n        return response\n    except Exception as e:\n        logger.error(f\"Error in generating response: {e}\")\n        return str(e)\n\nif __name__ == \"__main__\":\n    test_prompt = \"\u4f60\u662f\u8c01\uff1f\"\n    print(alpaca(test_prompt))\n</code></pre> <p>flask\uff1a</p> Python<pre><code>from flask import Flask, request, jsonify\nfrom alpaca import alpaca\nfrom flask_cors import CORS\n\napp = Flask(__name__)\nCORS(app)\n\n@app.route(\"/alpaca\", methods=[\"POST\"])\ndef get_answer():\n    data = request.json  # \u83b7\u53d6 JSON \u6570\u636e\n    prompt = data.get(\"prompt\")  # \u63d0\u53d6 prompt \u5b57\u6bb5\n    if prompt:\n        try:\n            answer = alpaca(prompt)  # \u8c03\u7528\u4f60\u7684 alpaca \u51fd\u6570\n            return jsonify({\"answer\": answer})\n        except Exception as e:\n            return jsonify({\"error\": str(e)}), 500\n    else:\n        return jsonify({\"error\": \"No prompt provided\"}), 400\n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/","title":"\u5b89\u88c5python3","text":"<p>https://www.python.org/downloads/ \u4e0b\u8f7d\u5b89\u88c5\uff0c\u672c\u673a\u73af\u5883\uff1a Macbook Pro M3 Max  16 + 40 64GB Python 3.11.7</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#_1","title":"\u865a\u62df\u73af\u5883\u521b\u5efa","text":"Text Only<pre><code>python3 -m venv ./env  \n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#_2","title":"\u8fdb\u5165\u865a\u62df\u73af\u5883","text":"Text Only<pre><code>source .env/bin/activate\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#diffusers","title":"\u5b89\u88c5diffusers","text":"Bash<pre><code>pip3 install torch torchvision torchaudio           #torch       2.1.2\n                                                                                                #torchaudio     2.1.2\n                                                                                                #torchvision    0.16.2\n                                                                                                #\u5982\u679c\u7528cuda\uff0c\u8981\u4fdd\u8bc1\u7248\u672c\u517c\u5bb9\u6027\uff0c\u4f8b\u5982\uff1a\n                                                                                                #pip install torch==2.1.0+cu121 torchvision==0.16.0 -f \ngit clone https://github.com/huggingface/diffusers.git  #diffusers 0.25.0.devs0\ncd diffusers\npip3 install -e \".[torch]\"\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#sdxl","title":"SDXL","text":"Bash<pre><code>pip3 install transformers accelerate omegaconf invisible-watermark #PyWavelets-1.5.0 \n                                                                                                                                     #antlr4-python3-runtime-4.9.3 \n                                                                                                                                     #invisible-watermark-0.2.0 \n                                                                                                                                     #omegaconf-2.3.0 \n                                                                                                                                     #opencv-python-4.8.1.78 \n                                                                                                                                     #tokenizers-0.15.0 \n                                                                                                                                     #transformers-4.36.2\n</code></pre> Python<pre><code>from diffusers import DiffusionPipeline\nimport torch\n\npipe = DiffusionPipeline.from_pretrained(\"stabilityai/stable-diffusion-xl-base-1.0\", torch_dtype=torch.float16, use_safetensors=True, variant=\"fp16\")\npipe.to(\"mps\")\n\n# if using torch &lt; 2.0\n# pipe.enable_xformers_memory_efficient_attention()\n\nprompt = \"An astronaut riding a green horse\"\n\nimages = pipe(prompt=prompt).images[0]\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#anything","title":"Anything","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#omegaconf","title":"\u5b89\u88c5omegaconf","text":"Bash<pre><code>pip install omegaconf\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/diffusers%E5%88%9D%E6%8E%A2/#_3","title":"\u5f15\u5165\u672c\u5730\u6a21\u578b","text":"Python<pre><code>from diffusers import StableDiffusionPipeline\nimport torch\n\npipeline = StableDiffusionPipeline.from_single_file(\n    \"/Users/weisun/Documents/ML/Anything-ink-vivid.fp16.ckpt\",\n    torch_dtype=torch.float16,\n\n)\npipeline.to(\"mps\")\n\n# \u8bbe\u7f6e\u63d0\u793a\nprompt = \"masterpiece, earring, 1 girl, royal cloth\"\n\n# \u751f\u6210\u56fe\u50cf\nimages = pipeline(prompt=prompt,num_inference_steps=120).images[0]\nimages\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM%E6%9E%84%E5%BB%BA%E5%AF%BC%E8%AE%BA/","title":"\u524d\u8a00","text":"<p>2024\u5e74\uff0cAI\u53ef\u80fd\u4e0d\u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458\u4e13\u4e1a\u65b9\u5411\uff0c\u4f46\u9700\u8981\u662f\u5177\u5907\u7684\u4e00\u9879\u57fa\u672c\u6280\u80fd\u3002\u672c\u7bc7\u5c06\u4ece\u5de5\u7a0b\u7684\u89d2\u5ea6\uff0c\u6d45\u663e\u7684\u4ecb\u7ecd\u4e00\u4e0b\u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u6570\u636e\u81ea\u5df1\u7684AI\u52a9\u624b\u3002</p> <ul> <li>\u6a21\u578b\u83b7\u53d6\u3001\u8bad\u7ec3\u3001\u5fae\u8c03\u3001\u91cf\u5316</li> <li>\u670d\u52a1\u642d\u5efa  langchain \u524d\u7aef \u5ba2\u6237\u7aef</li> <li>\u90e8\u7f72 JetBrain Docker</li> <li>\u6d4b\u8bd5</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM%E6%9E%84%E5%BB%BA%E5%AF%BC%E8%AE%BA/#_2","title":"\u6a21\u578b","text":"<p>\u4ece\u5b8f\u89c2\u4e0a\u770b\uff0cAI\u7684\u57fa\u672c\u539f\u7406\u662f\uff1aAI\u7cfb\u7edf\u63a5\u6536\u8f93\u5165\u6570\u636e\uff0c\u7ecf\u8fc7\u6a21\u578b\u5904\u7406\u540e\u751f\u6210\u8f93\u51fa\u7ed3\u679c\u3002\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u5904\u7406\u6587\u672c\u7684\u6a21\u578b\u3002\u6a21\u578b\u662f\u6574\u4e2aAI\u5e94\u7528\u7684\u6838\u5fc3\u90e8\u5206\u3002</p> <p>\u6a21\u578b\u7684\u83b7\u53d6\u65b9\u5f0f\uff1a</p> <ul> <li>\u62ff\u6765\u4e3b\u4e49\uff1a\u9002\u5408\u7f16\u7a0b\u5c0f\u767d\u4e0e\u61d2\u72d7</li> <li>\u6a21\u578b\u5fae\u8c03\uff1a\u6240\u6709\u4eba\u90fd\u53ef\u4ee5\u5c1d\u8bd5\u7684\u5927\u4f17\u65b9\u6848</li> <li>\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\uff1a\u8d85\u9ad8\u6821\u7ea7\u6709\u94b1\u4eba\u7684\u73a9\u5177</li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM%E6%9E%84%E5%BB%BA%E5%AF%BC%E8%AE%BA/#_3","title":"\u6a21\u578b\u83b7\u53d6","text":"<p>\u6211\u63a8\u8350\u4e24\u79cd\u6a21\u578b\u83b7\u53d6\u65b9\u5f0f\uff1a</p> <ol> <li>\u62b1\u62b1\u8138\u793e\u533a</li> </ol> <p>\u63a8\u8350\u83b7\u53d6\u7f51\u7ad9\uff1ahttps://huggingface.co/models\uff0c\u4eba\u79f0\u62b1\u62b1\u8138\u3002\u62b1\u62b1\u8138\uff08Hugging Face\uff09\u662f\u4e00\u4e2a\u81f4\u529b\u4e8e\u81ea\u7136\u8bed\u8a00\u5904\u7406\uff08NLP\uff09\u548c\u673a\u5668\u5b66\u4e60\u7684\u5f00\u6e90\u793e\u533a\u5e73\u53f0\uff0c\u5c5e\u4e8e\u6a21\u578b\u754c\u7684GitHub\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u53d1\u73b0\u3001\u5206\u4eab\u548c\u4f7f\u7528\u6d77\u91cf\u7531\u4e2a\u4eba\u6216\u7ec4\u7ec7\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u3002</p> <ol> <li>Ollama</li> </ol> <p>Ollama\u662fGithub\u4e0a\u7684\u4e00\u4e2a\u5f00\u6e90\u9879\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7528\u4e00\u884c\u547d\u4ee4\u884c\u5f97\u5230Ollama\u53ef\u63d0\u4f9b\u7684\u6a21\u578b\uff1a</p> Text Only<pre><code>Ollama pull llama3\n</code></pre> <p>\u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\uff0c\u7b80\u5355\u7684\u4ee3\u4ef7\u662f\u9650\u5236\u3002\u4f7f\u7528Ollama\u7684\u6a21\u578b\u9700\u8981\u901a\u8fc7\u7279\u5b9a\u7684\u63a5\u53e3\uff1a</p> <ul> <li> <p>REST API</p> <p>Generate a response</p> Text Only<pre><code>curl http://localhost:11434/api/generate -d '{\n  \"model\": \"llama3\",\n  \"prompt\":\"Why is the sky blue?\"\n}'\n</code></pre> <p>Chat with a model</p> Text Only<pre><code>curl http://localhost:11434/api/chat -d '{\n  \"model\": \"llama3\",\n  \"messages\": [\n    { \"role\": \"user\", \"content\": \"why is the sky blue?\" }\n  ]\n}'\n</code></pre> </li> <li> <p>LangChain</p> Python<pre><code>from langchain_community.llms import Ollama\nllm = Ollama(model=\"llama3\")\nllm.invoke(\"Why is the sky blue?\")\n</code></pre> </li> <li> <p>LlamaIndex</p> Python<pre><code>from llama_index.llms.ollama import Ollama\nllm = Ollama(model=\"llama3\")\nllm.complete(\"Why is the sky blue?\")\n</code></pre> </li> </ul> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u76ee\u5f55<code>~/.*ollama*/models</code>\u91cc\u83b7\u5f97\u6a21\u578b\u6587\u4ef6\uff0c\u4f46\u7b14\u8005\u672a\u5c1d\u8bd5\u8fc7\u662f\u5426\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM%E6%9E%84%E5%BB%BA%E5%AF%BC%E8%AE%BA/#_4","title":"\u6a21\u578b\u8bad\u7ec3","text":"<p>\u6a21\u578b\u7684\u5b8c\u6574\u8bad\u7ec3\u8fc7\u7a0b\u5165\u95e8\u53c2\u8003\u4e4b\u524d\u7684\u535a\u5ba2\uff1a\u673a\u5668\u5b66\u4e60\u7684\u5b8c\u6574\u6d41\u7a0b\u2014\u2014\u7ebf\u6027\u56de\u5f52\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u7b80\u5355\u6765\u8bf4\u6a21\u578b\u8bad\u7ec3\u5206\u4e3a\uff1a</p> <p>1\u3001\u6570\u636e\u51c6\u5907</p> <p>2\u3001\u6a21\u578b\u6784\u5efa</p> <p>3\u3001\u5b9a\u4e49\u635f\u5931\u51fd\u6570</p> <p>4\u3001\u5b9a\u4e49\u4f18\u5316\u7b97\u6cd5</p> <p>5\u3001\u6267\u884c\u8bad\u7ec3</p> <p>6\u3001\u4f30\u91cf\u8bef\u5dee</p> <p>\u51e0\u4e2a\u6b65\u9aa4\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u6a21\u578b\uff0c</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E5%A4%A7%E6%A8%A1%E5%9E%8BLLM%E6%9E%84%E5%BB%BA%E5%AF%BC%E8%AE%BA/#_5","title":"\u524d\u540e\u7aef\u642d\u5efa","text":"<p>\u672c\u8282\u63a8\u8350\u642d\u5efa\u65b9\u5f0f\uff1aollama + langchain.</p> <p>\u5b89\u88c5\u4f9d\u8d56</p> Text Only<pre><code># pip install -r requirements.txt\nfastapi==0.110.2\nlangchain==0.1.16\nlangserve==0.1.0\nsse-starlette==2.1.0\npydantic==1.10.13\n</code></pre> <p>\u57fa\u7840\u642d\u5efa</p> Python<pre><code>from langchain_community.llms import Ollama                 # llm\nfrom langchain_core.prompts import ChatPromptTemplate       # prompt\nfrom langchain_core.output_parsers import StrOutputParser   # output_parser\n\nllm = Ollama(model=\"llama3\")\nprompt = ChatPromptTemplate.from_messages([\n    (\"system\", \"You are a world class technical documentation writer.\"),\n    (\"user\", \"{input}\")\n])\noutput_parser = StrOutputParser()\n\nchain = prompt | llm | output_parser\nchain.invoke({\"input\": \"how can langsmith help with testing?\"})\n</code></pre> <p>\u57fa\u4e8e\u5386\u53f2\u7684\u670d\u52a1\u7aef\u642d\u5efa</p> Python<pre><code>from typing import Tuple, List\n\nfrom langchain_community.llms import Ollama                                     # llm\n\nfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder      # prompts\nfrom langchain.prompts.prompt import PromptTemplate\n\nfrom langchain_core.output_parsers import StrOutputParser                       # output_parser\n\nfrom fastapi import FastAPI                                                     # fastapi\nfrom fastapi.middleware.cors import CORSMiddleware\n\nfrom langserve import add_routes                                                # langserve\nfrom langserve.pydantic_v1 import BaseModel, Field\n\nfrom langchain.schema.runnable import RunnableMap, RunnablePassthrough          # input\n\nllm = Ollama(model=\"llama3\")\noutput_parser = StrOutputParser()\n\n_TEMPLATE = \"\"\"\u9274\u4e8e\u4ee5\u4e0b\u5bf9\u8bdd\u548c\u540e\u7eed\u95ee\u9898\uff0c\u8bf7\u5c06\u540e\u7eed\u95ee\u9898\u91cd\u65b0\u8868\u8ff0\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u95ee\u9898\n\n\u5386\u53f2\u5bf9\u8bdd:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:\"\"\"\nCONDENSE_QUESTION_PROMPT = PromptTemplate.from_template(_TEMPLATE)\n\n\ndef _format_chat_history(chat_history: List[Tuple]) -&gt; str:\n    \"\"\"Format chat history into a string.\"\"\"\n    buffer = \"\"\n    for dialogue_turn in chat_history:\n        human = \"Human: \" + dialogue_turn[0]\n        ai = \"Assistant: \" + dialogue_turn[1]\n        buffer += \"\\n\" + \"\\n\".join([human, ai])\n    return buffer\n\n\nANSWER_TEMPLATE = \"\"\"\n\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0c\u90fd\u4f7f\u7528\u4e2d\u6587\u56de\u7b54\uff1a\n\nQuestion: {question}\n\"\"\"\nANSWER_PROMPT = ChatPromptTemplate.from_template(ANSWER_TEMPLATE)\n\n_question = {\n    \"question\": lambda x: x[\"standalone_question\"],\n}\n\n_inputs = RunnableMap(\n    standalone_question=RunnablePassthrough.assign(\n        chat_history=lambda x: _format_chat_history(x[\"chat_history\"])\n    )\n                        | CONDENSE_QUESTION_PROMPT\n                        | llm\n                        | StrOutputParser(),\n)\n\n\n# User input\nclass ChatHistory(BaseModel):\n    \"\"\"Chat history with the bot.\"\"\"\n\n    chat_history: List[Tuple[str, str]] = Field(\n        ...,\n        extra={\"widget\": {\"type\": \"chat\", \"input\": \"question\"}},\n    )\n    question: str\n\n\nconversational_qa_chain = (\n        _inputs | _question | ANSWER_PROMPT | llm | StrOutputParser()\n)\nchain = conversational_qa_chain.with_types(input_type=ChatHistory)\n\napp = FastAPI(\n    title=\"LangChain Server\",\n    version=\"1.0\",\n    description=\"A simple api server using Langchain's Runnable interfaces\",\n)\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n    expose_headers=[\"*\"],\n)\n\nadd_routes(\n    app,\n    chain,\n    path=\"/llama3\",\n)\n\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"localhost\", port=8000)\n</code></pre> <p>\u524d\u7aef\u8c03\u7528</p> Text Only<pre><code>// {\"input\": {\n//     \"chat_history\": [\n//         [\"user\", \"\u563b\u563b\u563b\"],\n//         [\"Assistant\",\"\u4e86\u89e3\"]\n//     ],\n//         \"question\": \"\u4f60\u597d\uff0c\u4eca\u5929\u611f\u89c9\u600e\u4e48\u6837\"\n// }}\n\n// setChatHistory(JSON.stringify([...JSON.parse(chatHistory), {Human: inputText}]))\n// setChatHistory(JSON.stringify([...JSON.parse(chatHistory), {Assistant: data.output}]))\n\nfetch(LLM_ADDRESS, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            \"input\": {\n                \"chat_history\": chat_history,\n                \"question\": inputText\n            }\n        })\n    }).then((res) =&gt; res.json())\n        .then((data) =&gt; {\n            setChatHistory((prevChatHistory) =&gt;\n                JSON.stringify([\n                    ...JSON.parse(prevChatHistory),\n                    {Assistant: data.output},\n                ])\n            );\n            setLoadingState(false);\n        });\n    setInputText('');\n};\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E7%82%BC%E4%B8%B9%E5%AF%BC%E8%AE%BA/","title":"\u524d\u8a00","text":"<p>\u672c\u6587\u5c06\u9762\u5411\u5c0f\u767d\u8bb2\u8ff0AI\u4f5c\u56fe\u7684\u65b9\u6cd5\uff0c\u4ece\u7b80\u5355\u7684\u539f\u7406\uff0c\u5230\u5de5\u5177\u7684\u4f7f\u7528\u3002</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5/%E7%82%BC%E4%B8%B9%E5%AF%BC%E8%AE%BA/#_2","title":"\u539f\u7406","text":"<p>\u5c3d\u7ba1\u76f4\u63a5\u4e0b\u8f7d\u5b89\u88c5\u4f7f\u7528\u662f\u6700\u7406\u60f3\u7684\u72b6\u6001\uff0c\u4f46\u662f\u7b14\u8005\u8ba4\u4e3a\u7b80\u5355\u53bb\u7406\u89e3\u5927\u65b9\u5411\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u7684\u4f7f\u7528\u5de5\u5177\u3002</p> <p>\u672c\u6587\u4ec5\u4ece\u5b8f\u89c2\u89d2\u5ea6\u8bb2\u89e3\u4e00\u4e0b\u539f\u7406\uff0c\u4e0d\u6d89\u53ca\u6570\u5b66\u516c\u5f0f\u548c\u4e13\u4e1a\u672f\u8bed\uff0c\u4f1a\u4ee5\u96f6\u57fa\u7840\u7684\u89d2\u5ea6\u53bb\u8bb2\u89e3\uff0c\u5efa\u8bae\u591a\u82b1\u4e94\u5206\u949f\u9605\u8bfb\u8fd9\u90e8\u5206\u5185\u5bb9\u3002</p> <p>\u8ba1\u7b97\u673a\u7684\u672c\u8d28\u662f\u6570\u5b66\uff0c\u6216\u8005\u8bf4\u662f\u5e94\u7528\u6570\u5b66\u3002\u800cMechine Learning\uff0c\u5219\u662f\u5e94\u7528\u6570\u5b66\u9b45\u529b\u7684\u5448\u73b0\u3002\u65e0\u8bba\u4f60\u662f\u67d0\u65b9\u9762\u7684\u4e13\u4e1a\u4eba\u5458\uff0c\u6216\u8005\u53ea\u662f\u5a31\u4e50\u73a9\u5bb6\uff0c\u90fd\u53ef\u4ee5\u5728\u53bb\u5e74\u706b\u70ed\u7684Chatgpt\u4e2d\u83b7\u5f97\u7075\u611f\u4e0e\u5feb\u4e50\u3002\u800c\u8fd9\u4e48\u5f3a\u7684\u73a9\u610f\u513f\u672c\u8d28\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u6570\u5b66\u3002</p> <p>\u65e0\u8bba\u662f\u4ec0\u4e48\u7a0b\u5e8f\uff0c\u90fd\u662f\u7ed9\u8f93\u5165\uff0c\u83b7\u5f97\u8f93\u51fa\uff0cAI\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u56fe\u7247\u4e5f\u662f\u6570\u5b57\u3002\u5c0f\u5b66\u7684\u65f6\u5019\uff0c\u7f8e\u672f\u8bfe\u8001\u5e08\u6559\u8fc7\u6211\u4eec\u539f\u6599\u7684\u4e09\u539f\u8272\uff1a\u7ea2\u9ec4\u84dd\uff0c\u4e09\u79cd\u989c\u8272\u7684\u539f\u6599\u8fdb\u884c\u4e0d\u540c\u7684\u914d\u6bd4\u5c31\u53ef\u4ee5\u7ec4\u6210\u4efb\u610f\u989c\u8272\u7684\u989c\u6599\u3002\u6211\u4eec\u770b\u5728\u663e\u793a\u5668\u4e0a\u7684\u56fe\u7247\u4e5f\u662f\u540c\u6837\u7684\u539f\u7406\uff0c\u4f46\u662f\u8272\u5f69\u7684\u4e09\u539f\u8272\u662f\u7ea2\u7eff\u84dd\u3002\u53ea\u8981\u4ed4\u7ec6\u89c2\u5bdf\u663e\u793a\u5668\uff0c\u5c31\u80fd\u770b\u51fa\u663e\u793a\u5668\u5c31\u662f\u7531\u4e00\u4e2a\u4e2a\u5f88\u5c0f\u5f88\u5c0f\u7684\u7ea2\u7eff\u84dd\u8272\u5757\u7ec4\u5c42\u7684\u3002\u6839\u636e\u4e0d\u540c\u8272\u5757\u7684\u53d1\u5149\u7a0b\u5ea6\u4e0d\u540c\uff0c\u5c31\u53ef\u4ee5\u7ec4\u5408\u51fa\u4efb\u610f\u7684\u989c\u8272\u4e86\u3002</p> <p>\u8fd9\u4e2a\u5c31\u53eb\u505aRGB\uff0c\u5bf9\u5e94\u7684\u6570\u5b57\u5c31\u662f(0-255, 0-255, 0-255)\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u4efb\u610f\u4e09\u4e2a\u6570\u5b57\u5c31\u53ef\u4ee5\u4ee3\u8868\u4e00\u4e2a\u989c\u8272\uff0c\u5728\u56fe\u7247\u4e2d\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u4e3a\u50cf\u7d20\u70b9\u3002\u800c\u4e00\u5f20\u56fe\u7247\uff0c\u5c31\u662f\u7531\u50cf\u7d20\u70b9\u7ec4\u5408\u800c\u6210\u7684\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u8981\u6709\u76f8\u5e94\u7684\u6570\u5b57\uff0c\u5c31\u53ef\u4ee5\u53bb\u4ee3\u8868\u4e00\u4e2a\u56fe\u7247\u4e86\u3002</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/transformers%E8%AE%AD%E7%BB%83%E7%A4%BA%E4%BE%8B/","title":"transformers\u8bad\u7ec3\u793a\u4f8b","text":"Python<pre><code>!pip install transformers[torch] -U\n!pip install torch torchvision torchaudio -U\n!pip install datasets\n#%%\nfrom datasets import load_dataset\nfrom transformers import AutoTokenizer, AutoModelForSequenceClassification, Trainer, TrainingArguments\nimport torch\nfrom accelerate import Accelerator\n#%%\n# \u68c0\u67e5CUDA\u6216MPS\u53ef\u7528\u6027\u5e76\u8bbe\u7f6e\u76f8\u5e94\u7684\u8bbe\u5907\nif torch.cuda.is_available():\n    device = torch.device(\"cuda\")\nelif torch.backends.mps.is_available():\n    device = torch.device(\"mps\")\nelse:\n    device = torch.device(\"cpu\")\n\nprint(f\"Using device: {device}\")\n#%%\n# \u52a0\u8f7dIMDb\u6570\u636e\u96c6\ndataset = load_dataset(\"imdb\")\n\n# \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684\u5206\u8bcd\u5668\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n\n# \u5b9a\u4e49\u9884\u5904\u7406\u51fd\u6570\ndef preprocess_function(examples):\n    return tokenizer(examples[\"text\"], padding=\"max_length\", truncation=True, max_length=512)\n\n# \u5e94\u7528\u9884\u5904\u7406\ntokenized_dataset = dataset.map(preprocess_function, batched=True)\n\n# \u52a0\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u5e76\u53d1\u9001\u5230\u8bbe\u5907\nmodel = AutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\", num_labels=2).to(device)\n\n# \u5b9a\u4e49\u8bad\u7ec3\u53c2\u6570\ntraining_args = TrainingArguments(\n    output_dir=\"./results\",\n    learning_rate=2e-5,\n    per_device_train_batch_size=16,\n    num_train_epochs=3,\n    weight_decay=0.01,\n)\n\n# \u521d\u59cb\u5316 Accelerator\naccelerator = Accelerator()\n\n# \u521b\u5efaTrainer\u5b9e\u4f8b\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=tokenized_dataset[\"train\"],\n    eval_dataset=tokenized_dataset[\"test\"],\n    tokenizer=tokenizer\n)\n#%%\n# \u4f7f\u7528 Accelerator \u8fdb\u884c\u8bad\u7ec3\ntrainer.model = accelerator.prepare(model)\n\n# \u8bad\u7ec3\u6a21\u578b\ntrainer.train()\n#%%\n# \u8bc4\u4f30\u6a21\u578b\ntrainer.evaluate()\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/","title":"\u5b9a\u4e49","text":"<p>\u673a\u5668\u5b66\u4e60 (ML) \u662f\u4eba\u5de5\u667a\u80fd (AI) \u7684\u4e00\u90e8\u5206\uff0c\u5c5e\u4e8e\u8ba1\u7b97\u79d1\u5b66\u9886\u57df\uff0c\u4e13\u95e8\u5206\u6790\u548c\u89e3\u91ca\u6570\u636e\u7684\u6a21\u5f0f\u53ca\u7ed3\u6784\uff0c\u4ee5\u5b9e\u73b0\u65e0\u9700\u4eba\u5de5\u4ea4\u4e92\u5373\u53ef\u5b8c\u6210\u5b66\u4e60\u3001\u63a8\u7406\u548c\u51b3\u7b56\u7b49\u884c\u4e3a\u7684\u76ee\u7684\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u673a\u5668\u5b66\u4e60\u5373\u652f\u6301\u7528\u6237\u5411\u8ba1\u7b97\u673a\u7b97\u6cd5\u9988\u9001\u5927\u91cf\u6570\u636e\uff0c\u7136\u540e\u8ba9\u8ba1\u7b97\u673a\u5206\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u5e76\u4ec5\u6839\u636e\u8f93\u5165\u6570\u636e\u7ed9\u51fa\u6570\u636e\u9a71\u52a8\u578b\u5efa\u8bae\u548c\u51b3\u7b56\u3002\u5982\u679c\u7b97\u6cd5\u8bc6\u522b\u51fa\u4efb\u4f55\u66f4\u6b63\uff0c\u5b83\u4f1a\u6574\u5408\u66f4\u6b63\u4fe1\u606f\uff0c\u6539\u8fdb\u672a\u6765\u51b3\u7b56\u3002</p> <p>\u6765\u6e90\uff1ahttps://www.netapp.com/zh-hans/artificial-intelligence/what-is-machine-learning/</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/#_2","title":"\u5206\u7c7b","text":"<ol> <li>\u76d1\u7763\u5b66\u4e60\uff08Supervised Learning\uff09\uff1a\u8fd9\u662f\u6700\u5e38\u89c1\u7684\u673a\u5668\u5b66\u4e60\u7c7b\u578b\u3002\u5728\u76d1\u7763\u5b66\u4e60\u4e2d\uff0c\u6211\u4eec\u6709\u8f93\u5165\u53d8\u91cf\uff08X\uff09\u548c\u8f93\u51fa\u53d8\u91cf\uff08Y\uff09\uff0c\u5e76\u4f7f\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u7b97\u6cd5\u6765\u5b66\u4e60\u4ece\u8f93\u5165\u6620\u5c04\u5230\u8f93\u51fa\u7684\u6620\u5c04\u51fd\u6570\u3002\u76ee\u7684\u662f\u4f7f\u7b97\u6cd5\u80fd\u591f\u5bf9\u65b0\u7684\u8f93\u5165\u6570\u636e\u505a\u51fa\u9884\u6d4b\u3002\u4f8b\u5982\uff0c\u7528\u623f\u5c4b\u7684\u7279\u5f81\u6765\u9884\u6d4b\u623f\u4ef7\u3002</li> <li>\u65e0\u76d1\u7763\u5b66\u4e60\uff08Unsupervised Learning\uff09\uff1a\u5728\u8fd9\u79cd\u5b66\u4e60\u4e2d\uff0c\u53ea\u6709\u8f93\u5165\u6570\u636e\uff08X\uff09\u800c\u6ca1\u6709\u76f8\u5e94\u7684\u8f93\u51fa\u53d8\u91cf\u3002\u65e0\u76d1\u7763\u5b66\u4e60\u7684\u76ee\u7684\u662f\u5bf9\u6570\u636e\u7684\u7ed3\u6784\u8fdb\u884c\u5efa\u6a21\uff0c\u4ee5\u4fbf\u66f4\u597d\u5730\u7406\u89e3\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5bf9\u987e\u5ba2\u8fdb\u884c\u5e02\u573a\u7ec6\u5206\u3002</li> <li>\u534a\u76d1\u7763\u5b66\u4e60\uff08Semi-supervised Learning\uff09\uff1a\u8fd9\u79cd\u65b9\u6cd5\u4ecb\u4e8e\u76d1\u7763\u5b66\u4e60\u548c\u65e0\u76d1\u7763\u5b66\u4e60\u4e4b\u95f4\u3002\u5b83\u4f7f\u7528\u5927\u91cf\u672a\u6807\u8bb0\u7684\u6570\u636e\u548c\u5c11\u91cf\u6807\u8bb0\u7684\u6570\u636e\u6765\u8bad\u7ec3\u6a21\u578b\u3002\u8fd9\u79cd\u65b9\u6cd5\u901a\u5e38\u7528\u4e8e\u6807\u8bb0\u6570\u636e\u6210\u672c\u8f83\u9ad8\u7684\u60c5\u51b5\u3002</li> <li>\u5f3a\u5316\u5b66\u4e60\uff08Reinforcement Learning\uff09\uff1a\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u7b97\u6cd5\u901a\u8fc7\u4e0e\u73af\u5883\u7684\u4e92\u52a8\u6765\u5b66\u4e60\u505a\u51fa\u51b3\u7b56\u3002\u5b83\u4e0d\u662f\u88ab\u544a\u77e5\u54ea\u4e9b\u884c\u4e3a\u662f\u6700\u597d\u7684\uff0c\u800c\u662f\u901a\u8fc7\u8bd5\u9519\u7684\u8fc7\u7a0b\u53d1\u73b0\u54ea\u4e9b\u884c\u4e3a\u4f1a\u83b7\u5f97\u6700\u5927\u7684\u5956\u52b1\u3002</li> <li>\u6df1\u5ea6\u5b66\u4e60\uff08Deep Learning\uff09\uff1a\u867d\u7136\u6df1\u5ea6\u5b66\u4e60\u901a\u5e38\u88ab\u89c6\u4e3a\u4e00\u79cd\u7b97\u6cd5\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u4e00\u79cd\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5b83\u4f7f\u7528\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\u6765\u5b66\u4e60\u6570\u636e\u3002\u6df1\u5ea6\u5b66\u4e60\u5728\u56fe\u50cf\u8bc6\u522b\u3001\u8bed\u97f3\u8bc6\u522b\u7b49\u9886\u57df\u8868\u73b0\u7a81\u51fa\u3002</li> <li>\u8fc1\u79fb\u5b66\u4e60\uff08Transfer Learning\uff09\uff1a\u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\uff0c\u6a21\u578b\u5728\u4e00\u4e2a\u4efb\u52a1\u4e0a\u8bad\u7ec3\uff0c\u5e76\u5728\u53e6\u4e00\u4e2a\u76f8\u5173\u4efb\u52a1\u4e0a\u8fdb\u884c\u518d\u8bad\u7ec3\u6216\u5fae\u8c03\u3002\u8fd9\u5728\u6570\u636e\u8f83\u5c11\u7684\u65b0\u4efb\u52a1\u4e0a\u7279\u522b\u6709\u7528\u3002</li> </ol>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/#_3","title":"\u7b97\u6cd5","text":"<ul> <li> <p>\u76d1\u7763\u5b66\u4e60(supervised learning)\uff08\u9884\u6d4b\uff09</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u8f93\u5165\u6570\u636e\u662f\u7531\u8f93\u5165\u7279\u5f81\u503c\u548c\u76ee\u6807\u503c\u6240\u7ec4\u6210\u3002\u51fd\u6570\u7684\u8f93\u51fa\u53ef\u4ee5\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u503c(\u79f0\u4e3a\u56de\u5f52\uff09\uff0c\u6216\u662f\u8f93\u51fa\u662f\u6709\u9650\u4e2a\u79bb\u6563\u503c\uff08\u79f0\u4f5c\u5206\u7c7b\uff09\u3002</p> </li> <li> <p>In\uff1a\u6709\u6807\u7b7e\uff0cOut\uff1a\u6709\u53cd\u9988</p> <p>\u76ee\u7684\uff1a\u9884\u6d4b\u7ed3\u679c</p> <p>\u6848\u4f8b\uff1a\u732b\u72d7\u5206\u7c7b\uff0c\u623f\u4ef7\u9884\u6d4b</p> </li> <li> <p>\u5206\u7c7b k-\u8fd1\u90bb\u7b97\u6cd5\u3001\u8d1d\u53f6\u65af\u5206\u7c7b\u3001\u51b3\u7b56\u6811\u4e0e\u968f\u673a\u68ee\u6797\u3001\u903b\u8f91\u56de\u5f52\u3001\u795e\u7ecf\u7f51\u7edc</p> </li> <li> <p>\u56de\u5f52 \u7ebf\u6027\u56de\u5f52\u3001\u5cad\u56de\u5f52</p> </li> <li> <p>\u65e0\u76d1\u7763\u5b66\u4e60(unsupervised learning)</p> </li> <li> <p>\u5b9a\u4e49\uff1a\u8f93\u5165\u6570\u636e\u662f\u7531\u8f93\u5165\u7279\u5f81\u503c\u6240\u7ec4\u6210\u3002</p> </li> <li> <p>In\uff1a\u65e0\u6807\u7b7e\uff0cOut\uff1a\u65e0\u53cd\u9988</p> <p>\u76ee\u7684\uff1a\u53d1\u73b0\u6f5c\u5728\u7ed3\u6784</p> <p>\u6848\u4f8b\uff1a\u201c\u7269\u4ee5\u7c7b\u805a\uff0c\u4eba\u4ee5\u7fa4\u5206\u201d</p> </li> <li> <p>\u805a\u7c7b k-means\uff0c\u964d\u7ef4</p> </li> <li> <p>\u534a\u76d1\u7763\u5b66\u4e60</p> </li> <li> <p>\u5df2\u77e5\uff1a\u8bad\u7ec3\u6837\u672cData\u548c\u5f85\u5206\u7c7b\u7684\u7c7b\u522b</p> <p>\u672a\u77e5\uff1a\u8bad\u7ec3\u6837\u672c\u6709\u65e0\u6807\u7b7e\u5747\u53ef</p> <p>\u5e94\u7528\uff08\u6848\u4f8b\uff09\uff1a\u8bad\u7ec3\u6570\u636e\u91cf\u8fc7\u591a\u65f6\uff0c\u76d1\u7763\u5b66\u4e60\u6548\u679c\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\uff0c\u56e0\u6b64\u7528\u6765\u589e\u5f3a\u6548\u679c\u3002</p> </li> <li> <p>\u5f3a\u5316\u5b66\u4e60</p> </li> <li> <p>In\uff1a\u51b3\u7b56\u6d41\u7a0b\u53ca\u6fc0\u52b1\u7cfb\u7edf\uff0cOut\uff1a\u4e00\u7cfb\u5217\u884c\u52a8</p> <p>\u76ee\u7684\uff1a\u957f\u671f\u5229\u76ca\u6700\u5927\u5316\uff0c\u56de\u62a5\u51fd\u6570\uff08\u53ea\u4f1a\u63d0\u793a\u4f60\u662f\u5426\u5728\u671d\u7740\u76ee\u6807\u65b9\u5411\u524d\u8fdb\u7684\u5ef6\u8fdf\u53cd\u6620\uff09</p> <p>\u6848\u4f8b\uff1a\u5b66\u4e0b\u68cb</p> <p>\u7b97\u6cd5\uff1a\u9a6c\u5c14\u79d1\u592b\u51b3\u7b56\uff0c\u52a8\u6001\u89c4\u5212</p> </li> </ul>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/#_4","title":"\u635f\u5931\u51fd\u6570","text":"<p>\u635f\u5931\u51fd\u6570\uff08loss function\uff09\u80fd\u591f\u91cf\u5316\u76ee\u6807\u7684\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 \u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u975e\u8d1f\u6570\u4f5c\u4e3a\u635f\u5931\uff0c\u4e14\u6570\u503c\u8d8a\u5c0f\u8868\u793a\u635f\u5931\u8d8a\u5c0f\uff0c\u5b8c\u7f8e\u9884\u6d4b\u65f6\u7684\u635f\u5931\u4e3a0\u3002</p> <p>\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u5305\u62ec\uff1a</p> <ol> <li> <p>\u5747\u65b9\u8bef\u5dee\uff08Mean Squared Error, MSE\uff09: \u7528\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u5dee\u7684\u5e73\u65b9\u7684\u5e73\u5747\u503c\u3002    $$     \\text{MSE} = \\frac{1}{n} \\sum_{i=1}^{n} (Y_i - \\hat{Y}_i)^2     $$    \u5176\u4e2d\uff0cYi\u662f\u7b2c i \u4e2a\u6837\u672c\u7684\u771f\u5b9e\u503c\uff0cY^i \u662f\u6a21\u578b\u5bf9\u7b2c i \u4e2a\u6837\u672c\u7684\u9884\u6d4b\u503c\uff0cn \u662f\u6837\u672c\u6570\u91cf\u3002</p> </li> <li> <p>\u4ea4\u53c9\u71b5\u635f\u5931\uff08Cross-Entropy Loss\uff09: \u7528\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u4e8c\u5206\u7c7b\u548c\u591a\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8861\u91cf\u5b9e\u9645\u7684\u8f93\u51fa\u5206\u5e03\u548c\u9884\u6d4b\u7684\u8f93\u51fa\u5206\u5e03\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> </li> <li> <p>\u4e8c\u5206\u7c7b\u95ee\u9898      $$      \\text{Cross-Entropy} = -\\sum_{i=1}^{n} [y_i \\log(\\hat{y}_i) + (1 - y_i) \\log(1 - \\hat{y}_i)]      $$      \u5176\u4e2d\uff0cyi \u662f\u771f\u5b9e\u6807\u7b7e\uff080 \u6216 1\uff09\uff0cy^i \u662f\u9884\u6d4b\u4e3a\u6b63\u7c7b\u7684\u6982\u7387\u3002</p> </li> <li> <p>\u591a\u5206\u7c7b\u95ee\u9898      $$      \\text{Cross-Entropy} = -\\sum_{i=1}^{n} \\sum_{c=1}^{C} y_{ic} \\log(\\hat{y}_{ic})      $$      \u5176\u4e2d\uff0cC \u662f\u7c7b\u522b\u603b\u6570\uff0cyic \u662f\u4e00\u4e2a\u6307\u793a\u5668\uff0c\u5982\u679c\u6837\u672c i \u5c5e\u4e8e\u7c7b c \u5219\u4e3a 1\uff0c\u5426\u5219\u4e3a 0\uff1by^ic \u662f\u6a21\u578b\u9884\u6d4b\u6837\u672c i\u5c5e\u4e8e\u7c7b c \u7684\u6982\u7387\u3002</p> </li> <li> <p>\u7edd\u5bf9\u503c\u8bef\u5dee\uff08Mean Absolute Error, MAE\uff09: \u4e5f\u7528\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u8ba1\u7b97\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u7684\u5e73\u5747\u3002    $$    \\text{MAE} = \\frac{1}{n} \\sum_{i=1}^{n} |Y_i - \\hat{Y}_i|    $$</p> </li> <li> <p>Hinge\u635f\u5931\uff08Hinge Loss\uff09: \u5e38\u7528\u4e8e\u652f\u6301\u5411\u91cf\u673a\uff08SVM\uff09\u4e2d\uff0c\u7279\u522b\u9002\u7528\u4e8e\u201c\u6700\u5927\u95f4\u9694\u201d\u5206\u7c7b\u3002    $$    \\text{Hinge Loss} = \\frac{1}{n} \\sum_{i=1}^{n} \\max(0, 1 - y_i \\cdot \\hat{y}_i)    $$</p> </li> <li> <p>\u5bf9\u6570\u635f\u5931\uff08Log Loss\uff09: \u5728\u4e00\u4e9b\u5206\u7c7b\u95ee\u9898\u4e2d\u4f7f\u7528\uff0c\u7279\u522b\u662f\u5728\u6982\u7387\u4f30\u8ba1\u65b9\u9762\u3002    $$    \\text{Log Loss} = -\\frac{1}{n} \\sum_{i=1}^{n} [y_i \\log(p_i) + (1 - y_i) \\log(1 - p_i)]    $$</p> </li> </ol>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/#_5","title":"\u68af\u5ea6\u4e0b\u964d","text":"<p>Todo..</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/","title":"\u7ebf\u6027\u56de\u5f52\u8bad\u7ec3\u5b9e\u4f8b","text":""},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_2","title":"\u6d41\u7a0b","text":"<p>\u521a\u8bfb\u7814\u90a3\u5e74\uff0c\u5927\u6570\u636e\u5f88\u706b\u3002</p> <p>\u6211\u662f\u4e00\u4e2a\u5f88\u7231\u8ba1\u7b97\u673a\u7684\u4eba\uff0c\u4ece\u6cb3\u5317\u4e8c\u672c\u7535\u6c14\u8003\u5165\u4e0a\u6d77985\u8f6f\u5de5\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u56fe\u8fd9\u4e2a\u884c\u4e1a\u7684\u9ad8\u85aa\u8d44\uff0c\u800c\u662f\u5728\u6211\u62ff\u5230iPhone4\u7684\u90a3\u4e00\u523b\uff0c\u6211\u662f\u771f\u7684\u60f3\u505a\u4e00\u540d\u53ef\u4ee5\u53c2\u4e0e\u6539\u53d8\u4e16\u754c\u7684\u5de5\u7a0b\u4e2d\u7684\u4e00\u9897\u87ba\u4e1d\u9489\u3002\u5bf9\u4e8e\u706b\u70ed\u7684\u5927\u6570\u636e\uff0c\u6211\u81ea\u7136\u4e0d\u60f3\u9519\u8fc7\u8fd9\u4e2a\u65b9\u5411\u3002</p> <p>\u6ca1\u6709\u4eba\u4f1a\u8981\u4e00\u4e2a\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u7684\u4eba\uff0c\u5f88\u5e78\u8fd0\uff0c\u6700\u540e\u88ab\u5f6d\u8001\u5e08\u6536\u7559\uff0c\u5e76\u59d4\u4efb\u4e86\u6211\u524d\u7aef\u7684\u5de5\u4f5c\uff0c\u8d1f\u8d23\u5b9e\u9a8c\u5ba4\u7684\u95e8\u9762\u3002\u524d\u7aef\u7684\u7f16\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u5f88\u5bb9\u6613\u4e0a\u624b\u3002JavaScript\u7684\u6027\u80fd\u5f88\u5dee\uff0c\u5728\u6570\u636e\u6d41\u6846\u67b6\u8fd8\u6ca1\u706b\u8d77\u6765\u65f6\uff0cjQuery\u8fd8\u662f\u9738\u4e3b\uff0c\u524d\u7aef\u7684\u65b9\u5411\u4e5f\u5f88\u7a84\uff1a\u6ca1\u6709\u540e\u7aef\u811a\u672c\uff0c\u6ca1\u6709\u5de5\u7a0b\u5316\uff0c\u6ca1\u6709\u6253\u5305\u5de5\u5177\u3002\u4f46\u662f\u4ed6\u6709\u4e00\u4e2a\u7279\u70b9\uff1a\u4ed6\u7684\u8bed\u6cd5\u548cPython\u592a\u50cf\u4e86\u3002</p> <p>\u5982\u4eca\u4ece\u4e1a\u8fd1\u4e24\u5e74\uff0cChatGPT\u5927\u706b\uff0c\u518d\u4e00\u6b21\u70b9\u71c3\u4e86\u6211\u7684\u6280\u672f\u70ed\u60c5\uff0c\u6070\u597d\uff0c\u524d\u7aef\u540e\u7aef\u5e95\u5c42\u4e0a\u5c42\u7cfb\u7edf\u5e94\u7528\u7f51\u7edc\u81ea\u5df1\u90fd\u7a0d\u5fae\u63a5\u89e6\u4e86\u4e00\u4e9b\uff0c\u5bf9\u7f16\u7801\u6709\u4e86\u66f4\u5b8f\u89c2\u7684\u7406\u89e3\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65f6\u673a\u53bb\u6df1\u5165\u4e86\u89e3\u4e00\u4e0b\u8fd9\u95e8\u5b66\u79d1\u3002</p> <p>\u672c\u6587\u65e8\u5728\u901a\u8fc7\u7ebf\u6027\u56de\u5f52\u7684\u5b9e\u4f8b\uff0c\u5b8c\u6574\u7684\u8bf4\u660e\u673a\u5668\u5b66\u4e60\u5b8c\u6574\u7684\u8fc7\u7a0b\u3002</p> <p>\u672c\u6587\u5185\u5bb9\u6765\u81ea\uff1a\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b3.2. \u7ebf\u6027\u56de\u5f52\u7684\u4ece\u96f6\u5f00\u59cb\u5b9e\u73b0</p> <p>\u673a\u5668\u5b66\u4e60\u7684\u6d41\u7a0b\u5305\u62ec\uff1a</p> <ol> <li>\u6570\u636e\u51c6\u5907\uff1a\u9996\u5148\u9700\u8981\u6536\u96c6\u5e76\u51c6\u5907\u8bad\u7ec3\u6570\u636e\u3002\u8fd9\u4e2a\u9636\u6bb5\u5305\u62ec\u6570\u636e\u6e05\u6d17\u3001\u5904\u7406\u7f3a\u5931\u503c\u3001\u7279\u5f81\u9009\u62e9\u548c\u8f6c\u6362\u7b49\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u7684\u8d28\u91cf\u548c\u9002\u7528\u6027\u3002\u9ad8\u8d28\u91cf\u7684\u6570\u636e\u662f\u5efa\u7acb\u6709\u6548\u6a21\u578b\u7684\u57fa\u7840\u3002</li> <li>\u6570\u5b66\u5efa\u6a21\uff1a\u9009\u62e9\u6216\u6784\u5efa\u4e00\u4e2a\u9002\u5408\u7279\u5b9a\u95ee\u9898\u7684\u6570\u5b66\u6a21\u578b\u3002\u672c\u4f8b\u5c06\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff1a\u6a21\u578b\u5047\u8bbe\u8f93\u51fa\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ebf\u6027\u7ec4\u5408\u3002\u6839\u636e\u5e94\u7528\u573a\u666f\u7684\u4e0d\u540c\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u51b3\u7b56\u6811\u3001\u795e\u7ecf\u7f51\u7edc\u7b49\u5176\u4ed6\u7c7b\u578b\u7684\u6a21\u578b\u3002</li> <li>\u635f\u5931\u51fd\u6570\uff1a\u5b9a\u4e49\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u6765\u8861\u91cf\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u5b9e\u9645\u503c\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u5bf9\u4e8e\u6a21\u578b\u8bad\u7ec3\u6548\u679c\u81f3\u5173\u91cd\u8981\uff0c\u56de\u5f52\u95ee\u9898\u5e38\u7528\u5747\u65b9\u8bef\u5dee\uff08MSE\uff09\u3002</li> <li>\u8bad\u7ec3\u6a21\u578b\uff1a\u91c7\u7528\u5982\u68af\u5ea6\u4e0b\u964d\u7b49\u4f18\u5316\u7b97\u6cd5\u8c03\u6574\u6a21\u578b\u53c2\u6570\uff0c\u76ee\u7684\u662f\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002\u901a\u8fc7\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u7684\u68af\u5ea6\u6765\u66f4\u65b0\u6a21\u578b\u53c2\u6570\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u51c6\u786e\u5ea6\u3002</li> <li>\u6a21\u578b\u8bc4\u4f30\uff1a\u6a21\u578b\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u9a8c\u8bc1\u96c6\u6216\u6d4b\u8bd5\u96c6\u5bf9\u5176\u6027\u80fd\u8fdb\u884c\u8bc4\u4f30\u3002\u5e38\u7528\u7684\u8bc4\u4f30\u6307\u6807\u5305\u62ec\u51c6\u786e\u5ea6\u3001\u53ec\u56de\u7387\u3001\u7cbe\u786e\u5ea6\u7b49\uff0c\u4ee5\u786e\u5b9a\u6a21\u578b\u7684\u6709\u6548\u6027\u548c\u53ef\u9760\u6027\u3002</li> <li>\u8d85\u53c2\u6570\u8c03\u4f18\uff1a\u6839\u636e\u6a21\u578b\u8bc4\u4f30\u7684\u7ed3\u679c\uff0c\u8c03\u6574\u6a21\u578b\u7684\u8d85\u53c2\u6570\uff08\u4f8b\u5982\u5b66\u4e60\u7387\u3001\u6b63\u5219\u5316\u7cfb\u6570\u7b49\uff09\uff0c\u4ee5\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\u548c\u51c6\u786e\u5ea6\u3002</li> <li>\u63a8\u7406\uff08\u9884\u6d4b\uff09\uff1a\u5728\u6a21\u578b\u7ecf\u8fc7\u8bad\u7ec3\u3001\u8bc4\u4f30\u548c\u8c03\u4f18\u4e4b\u540e\uff0c\u6700\u540e\u7684\u6b65\u9aa4\u662f\u4f7f\u7528\u8be5\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002\u8fd9\u5305\u62ec\u5c06\u65b0\u7684\u8f93\u5165\u6570\u636e\u8f93\u5165\u5230\u6a21\u578b\u4e2d\uff0c\u4ee5\u83b7\u5f97\u9884\u6d4b\u7ed3\u679c\u3002</li> </ol>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_3","title":"\u6570\u636e\u51c6\u5907","text":"<p>\u672c\u6587\u4e0d\u5bf9\u5b9e\u9645\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u4e2a\u51fd\u6570\u6765\u751f\u6210\u4e00\u7ec4\u7ebf\u6027\u6570\u636e\uff0c\u4f9b\u6211\u4eec\u540e\u7eed\u8bad\u7ec3\u4f7f\u7528\u3002</p> <p>\u7ebf\u6027\u56de\u5f52\u7684\u6a21\u578b\u4e3a\uff1a $$ y = \\mathbf{wX} + b $$ \u662f\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4e00\u6b21\u65b9\u7a0b\u3002\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e00\u6b21\uff0c\u4e0d\u4e00\u5b9a\u662f\u4e00\u5143\u3002\u8fd9\u91cc\u7684X\u662f\u4e00\u4e2a\u77e9\u9635\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u7279\u5f81\u503c\uff1a $$ y = \\begin{bmatrix}  x_1 &amp; x_2 &amp; \\cdots &amp; x_n  \\end{bmatrix}  \\begin{bmatrix}  w_1 \\ w_2 \\ \\vdots \\ w_n  \\end{bmatrix} + b $$ \u4e5f\u5c31\u662f\uff1a $$ y = w_1x_1 + w_2x_2 + w_3x_3 + \\cdots + b $$</p> <p>\u5bf9\u4e8e\u786e\u5b9a\u7684\u6570\u636e\uff0cw\u548cb\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6211\u4eec\u5047\u8bbe\u6709\u4e00\u7ec4\u786e\u5b9a\u7684w, b\uff1a</p> Python<pre><code># \u521d\u59cb\u5316\u771f\u5b9e\u7684\u6743\u91cd\u548c\u504f\u7f6e\ntrue_w = torch.tensor([[2], [-3.4]])  # \u771f\u5b9e\u7684\u6743\u91cd\ntrue_b = 4.2  # \u771f\u5b9e\u7684\u504f\u7f6e\n</code></pre> <p>\u6839\u636e\u4e0a\u9762\u7684\u5f0f\u5b50\uff0cw\u4ee3\u8868\u6a21\u578b\u6743\u91cd\uff0c\u6570\u91cf\u8981\u548cX\u662f\u4e00\u81f4\uff0c\u6b64\u5904\u521b\u5efa\u4e86\u4e00\u4e2aPyTorch\u5f20\u91cf\uff08Tensor\uff09\u7528\u6765\u4ee3\u8868\u6a21\u578b\u7684\u6743\u91cdw\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a PyTorch \u5f20\u91cf\u7406\u89e3\u6210\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ed6\u548c\u666e\u901a\u6570\u7ec4\u3001\u4ee5\u53ca NumPy \u6570\u7ec4\u90fd\u662f\u4e0d\u4e00\u6837\u7684\u3002PyTorch \u5f20\u91cf\u5177\u6709GPU \u652f\u6301\u4e0e\u81ea\u52a8\u5fae\u5206\u7684\u7279\u6027\u3002\u8fd9\u5728\u673a\u5668\u5b66\u4e60\u7684\u5904\u7406\u4e2d\u5341\u5206\u6709\u7528\u3002</p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6743\u91cdw\u662f\u4e00\u4e2a\u5305\u542b\u4e24\u4e2a\u5143\u7d20\u7684\u5217\u5411\u91cf\uff0c\u5206\u522b\u4e3a <code>2</code> \u548c <code>-3.4</code>\u3002</p> <p>\u800cb\u663e\u7136\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e\u6210\u4e864.2\u3002</p> <p>\u4e8e\u662f\uff0c\u6211\u4eec\u8fd9\u4e2a\u7528\u4e8e\u751f\u6210\u6570\u636e\u7684\u6a21\u578b\u4e3a\uff1a $$ y=2x_1\u22123.4x_2+4.2 $$ \u7136\u540e\uff0c\u6839\u636e\u8fd9\u4e24\u4e2a\u53c2\u6570\u5b9e\u73b0\u751f\u6210\u6570\u636e\u7684\u51fd\u6570\uff1a</p> Python<pre><code>def synthetic_data(w, b, num_examples):\n    # \u751f\u6210 `num_examples` \u4e2a\u6b63\u6001\u5206\u5e03\u7684\u968f\u673a\u8f93\u5165\u6570\u636e\uff08\u7279\u5f81\uff09\n    X = torch.normal(0, 1, (num_examples, len(w)))\n\n    # \u4f7f\u7528\u7ebf\u6027\u6a21\u578b\uff08y = wx + b\uff09\u8ba1\u7b97\u76f8\u5e94\u7684\u8f93\u51fa\u6570\u636e\uff08\u6807\u7b7e\uff09\n    y = torch.matmul(X, w) + b\n\n    # \u5411\u6807\u7b7e\u4e2d\u6dfb\u52a0\u6b63\u6001\u5206\u5e03\u7684\u566a\u58f0\n    y += torch.normal(0, 0.01, y.shape)\n    return X, y\n\n# \u751f\u6210\u5408\u6210\u7279\u5f81\u548c\u6807\u7b7e\nfeatures, labels = synthetic_data(true_w, true_b, 1000)\n</code></pre> <p>features \u5373 X\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u7279\u5f81\uff1b labels \u4e3a\u6bcf\u4e00\u7ec4\u7279\u5f81\u5bf9\u5e94\u7684 y\uff0c\u901a\u5e38\u79f0\u4e4b\u4e3a\u6807\u7b7e\u3002</p> <p>X\u662f\u5229\u7528torch.normal\u968f\u673a\u751f\u6210\u7684\u3002</p> <ul> <li> <p><code>torch.normal(mean, std, size)</code>\u662f PyTorch \u4e2d\u7528\u6765\u751f\u6210\u6b63\u6001\uff08\u9ad8\u65af\uff09\u5206\u5e03\u968f\u673a\u6570\u7684\u51fd\u6570\u3002</p> </li> <li> <p><code>mean</code> \u662f\u5206\u5e03\u7684\u5747\u503c\uff1b</p> </li> <li> <p><code>std</code> \u662f\u5206\u5e03\u7684\u6807\u51c6\u5dee\uff1b</p> </li> <li> <p><code>size = (num_examples, len(w))</code>\u6307\u5b9a\u751f\u6210\u7684\u5f20\u91cf\u7684\u5f62\u72b6\u3002<code>num_examples</code> \u662f\u8981\u751f\u6210\u7684\u6837\u672c\u6570\uff0c<code>len(w)</code> \u662f\u6bcf\u4e2a\u6837\u672c\u7684\u7279\u5f81\u6570\u91cf\u3002</p> <p>normal\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u7a7f\u7684\u662f\u4e00\u4e2aTorch.Size()\u7684\u53c2\u6570\uff0c\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5143\u7956\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7b80\u5355\u7684\u793a\u4f8b\u9a8c\u8bc1\u4e00\u4e0b\uff1a</p> Python<pre><code>import torch\n\ntensor = torch.tensor([[1, 2, 3], [4, 5, 6]])\nshape = tensor.shape\nprint(shape == (2,3))           # \u6253\u5370 True\n</code></pre> </li> <li> <p><code>torch.matmul</code> \u662f PyTorch \u4e2d\u7684\u77e9\u9635\u4e58\u6cd5\u51fd\u6570\uff0c\u7528\u4e8e\u8ba1\u7b97\u4e24\u4e2a\u5f20\u91cf\uff08Tensor\uff09\u7684\u4e58\u79ef\u3002</p> </li> <li> <p>\u4e3a\u4e86\u9632\u6b62\u6570\u636e\u8fc7\u4e8e\u7406\u60f3\u4e0e\u7eaf\u51c0\uff0c\u6700\u540e\u589e\u52a0\u4e00\u4e2a\u7b26\u5408\u6b63\u6001\u5206\u5e03\u7684\u566a\u58f0\uff0c\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u63d0\u9ad8\u6a21\u578b\u7684\u9c81\u68d2\u6027\u548c\u6cdb\u5316\u80fd\u529b\u3002</p> </li> </ul> <p>\u5728\u539f\u6587\u4e2d\uff0cw\u7684\u521d\u59cb\u503c\u4e3a\uff1atrue_w = torch.tensor([2, -3.4])\uff0c\u8fd9\u662f\u4e00\u4e2a\u6a2a\u5411\u91cf\uff0c\u548c\u4e0a\u9762\u7684\u5f0f\u5b50\u662f\u4e0d\u4e00\u81f4\u7684\u3002</p> <p>\u8fd9\u4e5f\u5bfc\u81f4 y = torch.matmul(X, w) + b \u7684\u7ed3\u679c\u88ab\u538b\u7f29\u6210\u4e86\u4e00\u7ef4\u884c\u5411\u91cf\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u5e94\u8be5\u5f97\u5230\u7684\u7ed3\u679c\u3002</p> <p>\u6700\u7ec8\u8fd4\u56de\u503c\u4e5f\u8fdb\u884c\u4e86\u53d8\u5f62 return X, y.reshape(-1, 1)</p> <p>\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u662f\u4e0d\u597d\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u505a\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u4f7f\u5176\u66f4\u76f4\u89c2\uff0c\u66f4\u7b26\u5408\u76f4\u89c9\u3002</p> <p>\u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5305\u542b\u4e00\u5343\u4e2a\u6570\u636e\u7684X\uff0cy\uff0c\u4ee5\u4f9b\u540e\u7eed\u8bad\u7ec3\u4f7f\u7528</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_4","title":"\u6570\u636e\u8bfb\u53d6","text":"<p>\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u4e00\u6b21\u5bf9\u5b8c\u6574\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\uff0c\u901a\u5e38\u6765\u8bf4\uff0c\u6211\u4eec\u8bad\u7ec3\u6a21\u578b\u65f6\u8981\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u904d\u5386\uff0c\u6bcf\u6b21\u62bd\u53d6\u4e00\u5c0f\u6279\u91cf\u6837\u672c\uff0c\u5e76\u7528\u4ed6\u4eec\u66f4\u65b0\u6a21\u578b\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u6253\u4e71\u6570\u636e\u96c6\u7684\u6837\u672c\u5e76\u8fdb\u884c\u5c0f\u6279\u91cf\u7684\u8bfb\u53d6\u3002</p> Python<pre><code># \u6570\u636e\u8fed\u4ee3\u7684\u6279\u91cf\u5927\u5c0f\nbatch_size = 10\n\n# \u6253\u4e71\u6570\u636e\u96c6\u5e76\u6279\u91cf\u8bfb\u53d6\u6570\u636e\ndef data_iter(batch_size, features, labels):\n    # \u793a\u4f8b\u7684\u6570\u91cf\n    num_examples = len(features)\n\n    # \u4e3a\u793a\u4f8b\u521b\u5efa\u7d22\u5f15\n    indices = list(range(num_examples))\n\n    # \u6253\u4e71\u7d22\u5f15\u4ee5\u968f\u673a\u5316\u6570\u636e\u987a\u5e8f\n    random.shuffle(indices)\n\n    # \u4ee5\u6279\u91cf\u5f62\u5f0f\u8fd4\u56de\u6570\u636e\n    for i in range(0, num_examples, batch_size):\n        # \u7d22\u5f15\u8981\u4f7f\u7528\u5f20\u91cf\u7d22\u5f15\n        batch_indices = torch.tensor(indices[i:min(i + batch_size, num_examples)])  \n        # \u5207\u7247\u7d22\u5f15\n        # yield\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u751f\u6210\u5668\uff08generator\uff09\u3002\u5141\u8bb8\u4f60\u6682\u505c\u51fd\u6570\u7684\u6267\u884c\u3002\u6bcf\u6b21\u8c03\u7528\u51fd\u6570\u65f6\u90fd\u4ece\u6682\u505c\u7684\u5730\u65b9\u7ee7\u7eed\u3002\n        yield features[batch_indices], labels[batch_indices]                                                \n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_5","title":"\u6570\u5b66\u5efa\u6a21","text":"<p>\u6709\u4e86\u6570\u636e\uff0c\u5c31\u53ef\u4ee5\u5bf9\u9700\u8981\u7684\u573a\u666f\u8fdb\u884c\u5efa\u6a21\uff0c\u6211\u4eec\u5fc5\u987b\u5b9a\u4e49\u6a21\u578b\uff0c\u5c06\u6a21\u578b\u7684\u8f93\u5165\u548c\u53c2\u6570\u540c\u6a21\u578b\u7684\u8f93\u51fa\u5173\u8054\u8d77\u6765\u3002 </p> <p>\u672c\u6587\u7684\u4f8b\u5b50\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff1a</p> Python<pre><code># \u7ebf\u6027\u56de\u5f52\u6a21\u578b\ndef liner_regression(X, w, b):\n    # torch.matmul(tensor1, tensor2), \u7528\u4e8e\u77e9\u9635\u4e58\u6cd5\n    return torch.matmul(X, w) + b\n</code></pre> <p>\u6709\u4e86\u6570\u5b66\u6a21\u578b\uff0c\u5728\u5f00\u59cb\u5bfb\u627e\u6700\u597d\u7684\u6a21\u578b\u53c2\u6570\uff08model parameters\uff09w\u548cb\u4e4b\u524d\uff0c \u6211\u4eec\u8fd8\u9700\u8981\u4e24\u4e2a\u4e1c\u897f\uff1a</p> <p>\uff081\uff09\u4e00\u79cd\u6a21\u578b\u8d28\u91cf\u7684\u5ea6\u91cf\u65b9\u5f0f\u2014\u2014\u635f\u5931\u51fd\u6570\uff1b </p> <p>\uff082\uff09\u4e00\u79cd\u80fd\u591f\u66f4\u65b0\u6a21\u578b\u4ee5\u63d0\u9ad8\u6a21\u578b\u9884\u6d4b\u8d28\u91cf\u7684\u65b9\u6cd5\u2014\u2014\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u51fd\u6570</p>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_6","title":"\u635f\u5931\u51fd\u6570","text":"<p>\u635f\u5931\u51fd\u6570\uff08loss function\uff09\u80fd\u591f\u91cf\u5316\u76ee\u6807\u7684\u5b9e\u9645\u503c\u4e0e\u9884\u6d4b\u503c\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u56de\u5f52\u95ee\u9898\u4e2d\u6700\u5e38\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\u5e73\u65b9\u8bef\u5dee\u51fd\u6570\uff1a $$ L(y, \\hat{y}) = \\frac{1}{2} \\sum (y - \\hat{y})^2 $$ \u5176\u4e2d\uff0cy'\u4e3a\u771f\u5b9e\u503c\uff0cy\u4e3a\u9884\u6d4b\u503c\u3002</p> Python<pre><code># \u635f\u5931\u51fd\u6570\uff08\u5747\u65b9\u8bef\u5dee\uff09\ndef loss_function(y_hat, y):\n    return (y_hat - y.reshape(y_hat.shape)) ** 2 / 2\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_7","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d","text":"<p>\u68af\u5ea6\u4e0b\u964d\uff08gradient descent\uff09\u7684\u65b9\u6cd5\u51e0\u4e4e\u53ef\u4ee5\u4f18\u5316\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u3002 \u5b83\u901a\u8fc7\u4e0d\u65ad\u5730\u5728\u635f\u5931\u51fd\u6570\u9012\u51cf\u7684\u65b9\u5411\u4e0a\u66f4\u65b0\u53c2\u6570\u6765\u964d\u4f4e\u8bef\u5dee\u3002\u8fd9\u91cc\u76f4\u63a5\u5957\u516c\u5f0f\uff08\u5177\u4f53\u539f\u7406\u6682\u65f6\u6ca1\u770b\u61c2\uff09\uff1a $$ w \\leftarrow w - \\frac{\\eta}{\\lvert B \\rvert} \\sum_{i \\in B} \\nabla_w l^{(i)}(w, b) = w - \\frac{\\eta}{\\lvert B \\rvert} \\sum_{i \\in B} x^{(i)} \\left( w^T x^{(i)} + b - y^{(i)} \\right), $$</p> \\[ b \\leftarrow b - \\frac{\\eta}{\\lvert B \\rvert} \\sum_{i \\in B} \\nabla_b l^{(i)}(w, b) = b - \\frac{\\eta}{\\lvert B \\rvert} \\sum_{i \\in B} \\left( w^T x^{(i)} + b - y^{(i)} \\right). \\] <p>\u4ee3\u7801\u5b9e\u73b0\uff1a</p> Python<pre><code># \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u51fd\u6570\ndef sgd(params, lr, batch_size):\n    with torch.no_grad():\n        for param in params:\n            # \u4f7f\u7528\u5176\u68af\u5ea6\u66f4\u65b0\u53c2\u6570\n            param -= lr * param.grad / batch_size\n            # \u66f4\u65b0\u540e\u5c06\u68af\u5ea6\u5f52\u96f6\n            param.grad.zero_()\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_8","title":"\u8bad\u7ec3","text":"<p>\u51c6\u5907\u597d\u5404\u79cd\u51fd\u6570\u540e\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u4e86\uff1a</p> Python<pre><code># \u521d\u59cb\u5316\u6a21\u578b\u53c2\u6570\nw = torch.normal(0, 0.01, size=(2,1), requires_grad=True)\nb = torch.zeros(1, requires_grad=True)\n\n# \u5b66\u4e60\u7387\nlr = 0.03\n\n# \u8bad\u7ec3\u5468\u671f\u7684\u6570\u91cf\nnum_epochs = 3\n\n# \u6307\u5b9a\u6a21\u578b\u548c\u635f\u5931\u51fd\u6570\nnet = liner_regression\nloss = loss_function\n\n# \u8bad\u7ec3\u5faa\u73af\nfor epoch in range(num_epochs):\n    # \u904d\u5386\u6570\u636e\u96c6\n    for X, y in data_iter(batch_size, features, labels):\n        # \u8ba1\u7b97\u635f\u5931\n        l = loss(net(X, w, b), y)\n        # \u8ba1\u7b97\u68af\u5ea6\n        l.sum().backward()\n        # \u66f4\u65b0\u53c2\u6570\n        sgd([w, b], lr, batch_size)\n    # \u8ba1\u7b97\u5e76\u6253\u5370\u6bcf\u4e2a\u5468\u671f\u540e\u7684\u635f\u5931\n    with torch.no_grad():\n        train_l = loss(net(features, w, b), labels)\n        print(f'epoch {epoch + 1}, loss {float(train_l.mean()):f}')\n\n# \u4f30\u91cf\u8bef\u5dee\nprint(f'w\u7684\u4f30\u8ba1\u8bef\u5dee: {true_w - w.reshape(true_w.shape)}')\nprint(f'b\u7684\u4f30\u8ba1\u8bef\u5dee: {true_b - b}')\n</code></pre>"},{"location":"%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E7%90%86%E8%AE%BA/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E2%80%94%E2%80%94%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BE%8B/#_9","title":"\u8fd0\u7528\u5e93\u51fd\u6570\u7684\u7b80\u6d01\u5b9e\u73b0","text":"Python<pre><code>import numpy as np\nimport torch\nfrom torch.utils import data\nfrom d2l import torch as d2l\nfrom torch import nn\n\n# \u8bbe\u7f6e\u7528\u4e8e\u5408\u6210\u6570\u636e\u7684\u771f\u5b9e\u6743\u91cd\u548c\u504f\u7f6e\ntrue_w = torch.tensor([2, -3.4])\ntrue_b = 4.2\n\n# \u4f7f\u7528\u771f\u5b9e\u7684\u6743\u91cd\u548c\u504f\u7f6e\u751f\u6210\u5408\u6210\u6570\u636e\uff08\u7279\u5f81\u548c\u6807\u7b7e\uff09\nfeatures, labels = d2l.synthetic_data(true_w, true_b, 1000)\n\n# \u7528\u4e8e\u5c06\u6570\u636e\u96c6\u52a0\u8f7d\u5230PyTorch DataLoader\u7684\u51fd\u6570\ndef load_array(data_arrays, batch_size, is_train=True):\n    \"\"\"\u6784\u5efa\u4e00\u4e2aPyTorch\u6570\u636e\u8fed\u4ee3\u5668\u3002\"\"\"\n    dataset = data.TensorDataset(*data_arrays)\n    return data.DataLoader(dataset, batch_size, shuffle=is_train)\n\n# \u8bbe\u7f6e\u6279\u5904\u7406\u5927\u5c0f\u5e76\u521b\u5efa\u6570\u636e\u8fed\u4ee3\u5668\nbatch_size = 10\ndata_iter = load_array((features, labels), batch_size)\n\n# \u83b7\u53d6\u4e00\u6279\u6570\u636e\nnext(iter(data_iter))\n\n# \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u5355\u4e2a\u7ebf\u6027\u5c42\nnet = nn.Sequential(nn.Linear(2, 1))\n\n# \u4f7f\u7528\u6b63\u6001\u5206\u5e03\u548c\u5e38\u6570\u503c\u521d\u59cb\u5316\u7f51\u7edc\u7684\u6743\u91cd\u548c\u504f\u7f6e\nnet[0].weight.data.normal_(0, 0.01)\nnet[0].bias.data.fill_(0)\n\n# \u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff08\u5747\u65b9\u8bef\u5dee\u635f\u5931\uff09\nloss = nn.MSELoss()\n\n# \u8bbe\u7f6e\u4f18\u5316\u5668\uff08\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff09\uff0c\u5b66\u4e60\u7387\u4e3a0.03\ntrainer = torch.optim.SGD(net.parameters(), lr=0.03)\n\n# \u8bad\u7ec3\u6a21\u578b\u7684\u8f6e\u6570\nnum_epochs = 3\n\n# \u8bad\u7ec3\u5faa\u73af\nfor epoch in range(num_epochs):\n    for X, y in data_iter:\n        l = loss(net(X), y)\n        trainer.zero_grad()  # \u6e05\u9664\u4e4b\u524d\u7684\u68af\u5ea6\n        l.backward()         # \u8ba1\u7b97\u68af\u5ea6\n        trainer.step()       # \u66f4\u65b0\u53c2\u6570\n    l = loss(net(features), labels)\n    print(f'epoch {epoch + 1}, loss {l:f}')\n\n# \u68c0\u7d22\u5e76\u6253\u5370\u8bad\u7ec3\u540e\u4f30\u8ba1\u7684\u6743\u91cd\u548c\u504f\u7f6e\u8bef\u5dee\nw = net[0].weight.data\nprint('w\u7684\u4f30\u8ba1\u8bef\u5dee\uff1a', true_w - w.reshape(true_w.shape))\nb = net[0].bias.data\nprint('b\u7684\u4f30\u8ba1\u8bef\u5dee\uff1a', true_b - b)\n</code></pre>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/CharacterController%E7%A7%BB%E5%8A%A8%E4%B8%8E%E8%B7%B3%E8%B7%83%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81/","title":"CharacterController\u79fb\u52a8\u4e0e\u8df3\u8dc3\u793a\u4f8b\u4ee3\u7801","text":"C#<pre><code>using UnityEngine;\n\npublic class MarchSevenController : MonoBehaviour\n{\n    private CharacterController playerController;\n    private Vector3 playerVelocity;\n    private bool groundedPlayer;\n    private float playerSpeed = 2.0f;\n    private float jumpHeight = 1.0f;\n    private float gravityValue = -9.81f;\n    private bool isStanding = true;\n\n    // Start is called before the first frame update\n    void Start()\n    {\n        playerController = GetComponent&lt;CharacterController&gt;();\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        // \u4f7f\u7528 CharacterController \u68c0\u67e5\u73a9\u5bb6\u662f\u5426\u5728\u5730\u9762\u4e0a\n        groundedPlayer = playerController.isGrounded;\n\n        // \u5982\u679c\u73a9\u5bb6\u5728\u5730\u9762\u4e0a\u4e14\u5782\u76f4\u901f\u5ea6\u5411\u4e0b\uff0c\u91cd\u7f6e y \u8f74\u901f\u5ea6\n        if (groundedPlayer &amp;&amp; playerVelocity.y &lt; 0)\n        {\n            playerVelocity.y = 0f;\n        }\n\n        // \u83b7\u53d6\u6c34\u5e73\u8f93\u5165\n        Vector3 move = new Vector3(Input.GetAxis(\"Horizontal\"), 0, Input.GetAxis(\"Vertical\")); // \u4f4d\u7f6e\u5411\u91cf\n        // unity\u4f7f\u7528\u7684\u662f\u5de6\u624b\u5750\u6807\u7cfb\n        // \u524d\u540e\u662fx\uff0c\u5de6\u53f3\u662fz\uff0c\u4e0a\u4e0b\u662fy\n\n        //\u82e5\u6709\u4f4d\u79fb\uff0c\u5219\u4e0d\u7ad9\u7acb\n        if (move != Vector3.zero)\n        {\n            isStanding = false;\n        }\n\n        //\u82e5\u65e0\u4f4d\u79fb\uff0c\u5219\u7ad9\u7acb\n        if (move == Vector3.zero &amp;&amp; playerVelocity.y == 0f)\n        {\n            isStanding = true;\n        }\n\n        // \u68c0\u67e5\u662f\u5426\u6709\u5782\u76f4\u8f93\u5165\uff08\u8df3\u8dc3\uff09\u53ca\u662f\u5426\u6ee1\u8db3\u89e6\u53d1\u6761\u4ef6\uff08\u5728\u5730\u4e0a\uff5c\u7ad9\u7acb\uff09\n        if (Input.GetButtonDown(\"Jump\") &amp;&amp; (groundedPlayer || isStanding))\n        {\n            // \u8ba1\u7b97\u5782\u76f4\u7684\u52a0\u901f\u5ea6\n            playerVelocity.y += Mathf.Sqrt(2 * jumpHeight * -gravityValue);\n            //\u4e0d\u7ad9\u7acb\u4e86\n            isStanding = false;\n        }\n\n        // \u6bcf\u5e27\u5e94\u7528\u91cd\u529b\u5230\u5782\u76f4\u901f\u5ea6\u5206\u91cf\n        playerVelocity.y += gravityValue * Time.deltaTime;\n\n        // \u901a\u8fc7\u8ba1\u7b97\u51fa\u7684\u79fb\u52a8\u5411\u91cf\u79fb\u52a8\u89d2\u8272\u63a7\u5236\u5668\n        // Move\u7528\u5230\u4e86y=a(t-t0)\u7684\u516c\u5f0f\uff0c\u8fd9\u91ccplayerSpeed\u4e0eplayerVelocity.y\u4ee3\u8868\u4e86a\uff0cTime.deltaTime\u4ee3\u8868\u4e86t-t0\u3002\n        // \u800cmove\u662f\u4e00\u4e2a(-1,1)\u7684\u53c2\u6570\uff0c\u63a7\u5236\u65b9\u5411\u548c\u529b\u5ea6\n        playerController.Move((move * playerSpeed + new Vector3(0, playerVelocity.y, 0)) * Time.deltaTime);\n    }\n}\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879</p> <p>1\u3001\u5782\u76f4\u52a0\u901f\u5ea6\u7528\u5230\u4e86\u7269\u7406\u516c\u5f0f</p> <p>\u539f\u59cb\u516c\u5f0f\u7528\u4e8e\u8ba1\u7b97\u8df3\u8dc3\u65f6\u6240\u9700\u7684\u521d\u901f\u5ea6\uff0c\u57fa\u4e8e\u52a8\u80fd\u548c\u52bf\u80fd\u7684\u7b49\u4ef7\u8f6c\u6362\u3002\u8fd9\u4e2a\u516c\u5f0f\u662f\u4ece\u57fa\u672c\u7684\u7269\u7406\u539f\u7406\u4e2d\u5f97\u51fa\u7684\uff0c\u7279\u522b\u662f\u8003\u8651\u5230\u5728\u8df3\u8dc3\u7684\u6700\u9ad8\u70b9\uff0c\u6240\u6709\u7684\u52a8\u80fd\uff08\u7531\u4e8e\u901f\u5ea6\u4ea7\u751f\uff09\u90fd\u8f6c\u5316\u4e3a\u52bf\u80fd\uff08\u7531\u4e8e\u9ad8\u5ea6\u4ea7\u751f\uff09\u3002\u8fd9\u4e2a\u5173\u7cfb\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u7b49\u5f0f\u8868\u793a\uff1a</p> \\[ \\frac{1}{2} mv^2 = mgh \\] <p>\u53d8\u6362\u540e\u5f97\u5230</p> \\[ v = \\sqrt{2gh} \\] <p>2\u3001\u5173\u4e8eisGrounded</p> <p>\u5b98\u65b9\u63cf\u8ff0\uff1aWas the CharacterController touching the ground during the last move\u3002</p> <p>\u8fd9\u610f\u5473\u7740 <code>CharacterController</code> \u7684 <code>isGrounded</code> \u72b6\u6001\u662f\u5728\u6700\u540e\u4e00\u6b21\u6267\u884c <code>Move</code> \u65b9\u6cd5\u540e\u66f4\u65b0\u7684\u3002</p> <p>\u8fd9\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5728\u5355\u4e2a <code>Update</code> \u5468\u671f\u5185\u6267\u884c\u4e86\u4e24\u6b21 <code>Move</code> \u65b9\u6cd5\uff0c\u6216\u8005\u89d2\u8272\u4fdd\u6301\u9759\u6b62\u800c\u6ca1\u6709\u8fdb\u884c\u79fb\u52a8\uff08\u5373\u6ca1\u6709\u8c03\u7528 <code>Move</code> \u65b9\u6cd5\uff09\uff0c\u5219<code>isGrounded</code>\u7684\u5224\u65ad\u53ef\u80fd\u4f1a\u51fa\u9519\u3002\u56e0\u6b64\uff0c<code>isGrounded</code>\u53ea\u80fd\u5224\u65ad\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u7684\u7ad9\u7acb\u72b6\u6001\uff0c\u5e76\u4e14\u8fd8\u8981\u6c42\u53ea\u6709\u4e00\u6b21Move\u7684\u8c03\u7528\u3002</p> <p>\u5728\u4ee3\u7801\u5904\u7406\u4e0a\uff1a</p> <ol> <li>\u5408\u5e76\u79fb\u52a8\u6307\u4ee4\uff1a \u5c06\u6c34\u5e73\u548c\u5782\u76f4\u79fb\u52a8\u7684\u903b\u8f91\u5408\u5e76\uff0c\u786e\u4fdd\u6bcf\u4e2a <code>Update</code> \u5faa\u73af\u4e2d\u53ea\u8c03\u7528\u4e00\u6b21 <code>Move</code> \u65b9\u6cd5\u3002</li> <li>\u589e\u52a0\u7ad9\u7acb\u72b6\u6001\u5224\u65ad\uff1a \u5f15\u5165\u4e00\u4e2a\u7ad9\u7acb\u72b6\u6001\u7684\u53d8\u91cf\u5224\u65ad\u89d2\u8272\u662f\u5426\u53ef\u4ee5\u8df3\u8dc3\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/","title":"\u539f\u751fUnity\u63d2\u4ef6\u5f00\u53d1\u6d41\u7a0b","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#_1","title":"\u80cc\u666f","text":"<p>Unity\u63d2\u4ef6\u7684\u5f00\u53d1\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684C++\u9879\u76ee\uff0c\u6db5\u76d6\u4e86\u4ece\u7f16\u7801\u3001\u7f16\u8bd1\u5230\u6253\u5305\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\u5982\u679c\u6709\u70b9\u8ffd\u6c42\uff0c\u8fd8\u53ef\u4ee5\u8003\u8651\u52a0\u5165\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u53d1\u5e03\u6d41\u7a0b\u3002</p> <p>\u672c\u6587\u5c06\u6df1\u5165\u63a2\u8ba8Unity\u63d2\u4ef6\u7684\u5f00\u53d1\u6d41\u7a0b\uff0c\u5185\u5bb9\u6d89\u53ca\u4e0a\u8ff0\u6240\u63d0\u5230\u7684\u4ee3\u7801\u7684\u7f16\u5199\u3001\u7f16\u8bd1\u3001\u6253\u5305\uff0c\u4ee5\u53ca\u4f7f\u7528Jetbrains\u8fdb\u884c\u6301\u7eed\u96c6\u6210\uff08\u76ee\u524d\u8fd8\u5728\u7814\u7a76\u9636\u6bb5\uff09\u7684\u76f8\u5173\u6b65\u9aa4\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#_2","title":"\u4ee3\u7801\u7f16\u5199","text":"<p>\u4e4b\u524d\u603b\u7ed3\u8fc7\u5916\u90e8\u5e93\u5f15\u7528\uff0c\u5f53\u65f6\u4fbf\u4ee5Unity\u63d2\u4ef6\u8fdb\u884c\u4e86\u4e3e\u4f8b\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#_3","title":"\u63d2\u4ef6\u6e90\u4ee3\u7801","text":"<p>\u539f\u751f\u63d2\u4ef6\u7684\u7528\u6cd5\u6765\u81eaUnity\u5b98\u65b9\u6587\u6863\uff1a</p> <p>https://docs.unity3d.com/cn/2022.3/Manual/LowLevelNativePluginProfiler.html</p> <p>\u6587\u6863\u4e2d\u4e3e\u4f8b\u4e86\u4e00\u4e2aProfiler\u63d2\u4ef6\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u6211\u4eec\u9700\u8981\u8c03\u7528\u5bf9\u5e94\u7684API \uff0c\u5e76\u8fdb\u884c\u5b9e\u73b0\u3002\u7136\u540e\u5728Unity\u9879\u76ee\u7684CS\u811a\u672c\u4e2d\u901a\u8fc7\u5916\u90e8\u5e93\u7684\u65b9\u5f0f\u5f15\u5165\u8fd9\u6bb5\u4ee3\u7801\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#1","title":"1. \u5934\u6587\u4ef6\u5f15\u7528","text":"<p>Unity\u63d2\u4ef6\u5b9e\u9645\u4e0a\u662f\u6839\u636e\u5176\u63d0\u4f9b\u7684API\u5c06\u81ea\u5b9a\u4e49\u4ee3\u7801\u63d2\u5165\u5230\u5176\u6e90\u7801\u7684\u67d0\u4e2a\u6a21\u5757\u4e2d\u3002</p> <p>\u4ee5Unity\u7684Profiler\u4e3a\u4f8b\uff1a</p> <p>ProfilerManager\u8d1f\u8d23\u7ba1\u7406\u6bcf\u4e2aProfiler\u6253\u6869\u70b9\uff08Marker\uff09\u53ca\u5176\u5bf9\u5e94\u7684Marker\u7c7b\u3002\u6bcf\u4e2aMarker\u7c7b\u90fd\u542b\u6709\u4e00\u7cfb\u5217\u7684\u56de\u8c03\u51fd\u6570\uff08Callback\uff09\u3002</p> <p>\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\uff0c\u9996\u5148\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u4f7f\u7528Unity\u63d0\u4f9b\u7684RegisterMarkerEventCallback\u63a5\u53e3\uff0c\u5c06\u8fd9\u4e2a\u81ea\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u52a0\u5165\u5230\u76f8\u5e94Marker\u7c7b\u7684\u56de\u8c03\u51fd\u6570\u5217\u8868\u4e2d\u3002</p> <p>\u5f53\u7a0b\u5e8f\u6267\u884c\u5230\u67d0\u4e2a\u6253\u6869\u70b9\u65f6\uff0c\u5b83\u4f1a\u904d\u5386\u8be5\u70b9\u6240\u6709\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u5305\u62ec\u6211\u4eec\u81ea\u5b9a\u4e49\u65b9\u6cd5\u5728\u5185\u7684\u8fd9\u4e9b\u51fd\u6570\u3002</p> <p>\u5728\u8fd9\u4e2a\u63d2\u4ef6\u7684\u5b9e\u73b0\u4e2d\uff0cCallback\u662f\u6211\u4eec\u81ea\u5df1\u5199\u7684\uff0c\u800c\u60f3\u8981\u8ba9Callback\u5728\u6e38\u620f\u91cc\u8fd0\u884c\uff0c\u5c31\u9700\u8981\u8c03\u7528Unity\u81ea\u8eab\u7684\u63a5\u53e3RegisterMarkerEventCallback\u4e86\u3002</p> <p>Unity\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u63a5\u53e3\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u63a5\u53e3\u653e\u5728Unity \u5b89\u88c5\u7684 <code>&lt;UnityInstallPath&gt;\\Editor\\Data\\PluginAPI</code> \u6587\u4ef6\u5939\u4e2d\u3002\u6211\u4eec\u5728\u5f00\u53d1\u63d2\u4ef6\u65f6\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u5934\u6587\u4ef6\u62ff\u51fa\u6765\u7528\u3002</p> <p>\u251c\u2500\u2500 PluginAPI/ \u2502   \u251c\u2500\u2500 IUnityEventQueue.h \u2502   \u251c\u2500\u2500 IUnityGraphics.h \u2502   \u251c\u2500\u2500 IUnityGraphicsD3D11.h \u2502   \u251c\u2500\u2500 IUnityGraphicsD3D12.h \u2502   \u251c\u2500\u2500 IUnityGraphicsMetal.h \u2502   \u251c\u2500\u2500 IUnityGraphicsVulkan.h \u2502   \u251c\u2500\u2500 IUnityInterface.h \u2502   \u251c\u2500\u2500 IUnityLog.h \u2502   \u251c\u2500\u2500 IUnityMemoryManager.h \u2502   \u251c\u2500\u2500 IUnityProfiler.h \u2502   \u251c\u2500\u2500 IUnityProfilerCallbacks.h \u2502   \u251c\u2500\u2500 IUnityRenderingExtensions.h \u2502   \u251c\u2500\u2500 IUnityShaderCompilerAccess.h \u2502   \u2514\u2500\u2500 LICENSE.md \u251c\u2500\u2500 CMakeLists.txt \u2514\u2500\u2500 PluginsForUnity.cpp</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#2","title":"2. \u63d2\u4ef6\u6e90\u4ee3\u7801","text":"<p>\u6211\u4eec\u5199\u597d\u81ea\u5df1\u7684\u539f\u751f\u4ee3\u7801\uff0c\u5982\uff1a</p> C++<pre><code>#include \"PluginAPI/IUnityInterface.h\"\n\nextern \"C\" {\n  UNITY_INTERFACE_EXPORT const char* UNITY_INTERFACE_API printHello() {\n     return \"Hello Plugin!\";\n  }\n}\n</code></pre> <p>\u7531\u4e8e\u662f\u539f\u751f\u5b9e\u73b0\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528<code>extern \"C\"</code>\u6307\u793a\u7f16\u8bd1\u5668\u4f7f\u7528C\u8bed\u8a00\u7684\u94fe\u63a5\u7ea6\u5b9a\uff0c\u786e\u4fdd\u539f\u751f\u5e93\u7684\u51fd\u6570\u53ef\u4ee5\u88ab\u6b63\u786e\u8bc6\u522b\u548c\u8c03\u7528\u3002</p> <p>UNITY_INTERFACE_EXPORT\u7528\u4e8e\u6807\u8bb0\u51fd\u6570\u4e3a\u516c\u5171API\uff0c\u4ee5\u4fbf\u4ece\u5916\u90e8\u5e93\u4e2d\u5bfc\u51fa\u3002</p> <p>UNITY_INTERFACE_API\u5b9a\u4e49\u4e86\u51fd\u6570\u7684\u8c03\u7528\u7ea6\u5b9a\u3002</p> <p>\u5728\u8fd9\u91cc\u6700\u597d\u4fdd\u6301\u987a\u5e8f\uff0c\u4ee5\u514d\u51fa\u9519\u3002</p> <p>\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5728Unity\u7684CS\u811a\u672c\u8c03\u7528printHello\u7684\u65f6\u5019\u6253\u5370Hello Plugin!</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#3-cs","title":"3. CS\u811a\u672c\u6587\u4ef6","text":"<p>\u63d2\u4ef6\u6e90\u4ee3\u7801\u9700\u8981\u7f16\u8bd1\u51fa\u4e00\u4e2aLib\u5e93\u6587\u4ef6\uff0c\u5728CS\u811a\u672c\u91cc\u5f15\u7528\u3002\u6211\u4eec\u8fd9\u91cc\u5b9e\u73b0CS\u811a\u672c\u6587\u4ef6\uff1a</p> C#<pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Runtime.InteropServices;\nusing UnityEngine.Rendering;\n\npublic class PluginsForUnity : MonoBehaviour\n{\n    // \u5bfc\u5165\u5728C++\u63d2\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\n    [DllImport(\"PluginsForUnity\")]\n    private static extern IntPtr printHello();\n\n    void Start() {\n        // \u5728\u6e38\u620f\u5f00\u59cb\u65f6\u6253\u5370\u6d88\u606f\n        Debug.Log(Marshal.PtrToStringAnsi(printHello()));\n    }\n\n    void Update() {\n        // \u6bcf\u5e27\u66f4\u65b0\u65f6\u518d\u6b21\u6253\u5370\u6d88\u606f\n        Debug.Log(Marshal.PtrToStringAnsi(printHello()));\n    }\n}\n</code></pre> <p>[DllImport(\"PluginsForUnity\")]\u4ee5\u5f15\u7528\u63d2\u4ef6\uff0c\u4e0b\u4e00\u884c\u7d27\u63a5\u4e00\u4e2a\u5f15\u7528\u7684\u51fd\u6570\u3002</p> <p>\u6ce8\u610f\u8fd9\u91cc\u7684\u8fd4\u56de\u7c7b\u578b\u9700\u8981\u4f7f\u7528IntPtr\uff0c\u4ee5\u8fd4\u56de\u6307\u9488\u7c7b\u578b\uff0c\u6ce8\u610f\u5173\u952e\u8bcd\u7684\u987a\u5e8f\uff0c\u907f\u514d\u51fa\u9519\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#_4","title":"\u5e93\u6587\u4ef6\u7f16\u8bd1","text":"<p>\u4e3a\u4e86\u5b9e\u73b0\u8de8\u5e73\u53f0\u7f16\u8bd1\uff0c\u6211\u4eec\u91c7\u7528CMake+Ninja\u7684\u7f16\u8bd1\u65b9\u6848\uff08\u6b64\u5904\u4ec5\u9488\u5bf9Windows\u7aef\uff09\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#1-cmakeliststxt","title":"1. \u7f16\u5199CMakeLists.txt","text":"CMake<pre><code>cmake_minimum_required(VERSION 3.26)\nproject(PluginsForUnity)\n\nset(CMAKE_CXX_STANDARD 11)\n\nadd_library(PluginsForUnity SHARED\n        PluginsForUnity.cpp)\n</code></pre> <p>PluginsForUnity\u4e3a\u63d2\u4ef6\u540d\uff0cPluginsForUnity.cpp\u4e3a\u6e90\u7801\u6587\u4ef6\u540d\u79f0\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#2-ninja","title":"2. \u4f7f\u7528ninja\u8fdb\u884c\u7f16\u8bd1\u6253\u5305","text":"Bash<pre><code>cmake -S . -B ./testBuild -G Ninja          # \u5728testBuild\u76ee\u5f55\u751f\u6210ninja\u914d\u7f6e\u6587\u4ef6\ncd testBuild                                # \u8fdb\u5165testBuild\u76ee\u5f55\nninja -C .                                  # ninja\u7f16\u8bd1\u6587\u4ef6\n</code></pre> <p>\u53ef\u4ee5\u5f97\u5230libPluginsForUnity.dll\u6587\u4ef6\uff0c\u5c06\u5176\u79fb\u52a8\u5230Unity\u9879\u76ee\u7684Asset\u6587\u4ef6\u5939\u4e2d\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#cs","title":"CS\u811a\u672c\u5f15\u5165","text":"<p>\u5c06\u63d2\u4ef6\u5f15\u5165\u5916\u90e8\u5e93\uff0c\u6211\u4eec\u9700\u8981\u5c06\u521a\u521a\u5199\u597d\u7684CS\u811a\u672c\u7ed1\u5b9a\u5728\u67d0\u4e2aObject\u4e0a\u3002</p> <p>1.\u521b\u5efaObject\uff1a \u5728Hierarchy\u7a97\u53e3\u53f3\u952e\uff0cCreate Empty\uff0c\u521b\u5efa\u4e00\u4e2a\u7a7a\u5bf9\u8c61\u3002</p> <p>2.\u7ed1\u5b9a\u811a\u672c\uff1a\u9009\u62e9\u8fd9\u4e2a\u7a7a\u5bf9\u8c61\uff0c\u5c06PluginsForUnity.cs\u62d6\u5230\u8be5\u5bf9\u8c61\u7684Inspector\u7684\u7a7a\u767d\u5904\u3002</p> <p>Unity\u4f1a\u81ea\u52a8\u7f16\u8bd1\u5f15\u5165\u7684\u811a\u672c\uff0c\u5982\u679c\u6709\u8bef\uff0c\u5728Console\u4f1a\u6709\u7ea2\u8272\u5b57\u4f53\u63d0\u793a\u3002</p> <p>\u53e6\u5916\uff0c\u70b9\u51fbAsset\u76ee\u5f55\u7684libPluginsForUnity.dll\u6587\u4ef6\uff0c\u53ef\u4ee5\u5bf9\u811a\u672c\u5f15\u7528\u7684\u5e73\u53f0\u8fdb\u884c\u6307\u5b9a\uff0c\u672c\u6587\u4ec5\u4f7f\u7528Windows\u5e73\u53f0\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#_5","title":"\u6253\u5305","text":"<p>\u4e3a\u4e86\u5c06\u811a\u672c\u4f9b\u5176\u4ed6Unity\u5e94\u7528\u5f00\u7bb1\u5373\u7528\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e2a\u7a7a\u5bf9\u8c61\u4ee5\u53ca\u811a\u672c\u6253\u5305\u6210unitypackage\u6587\u4ef6\u3002</p> <ol> <li> <p>\u5c06\u8fd9\u4e2a\u7a7a\u5bf9\u8c61\u8f6c\u4e3a\u9884\u5236\u4f53\uff1a\u5728Hierarchy\u7a97\u53e3\u62d6\u52a8\u8fd9\u4e2a\u7a7a\u5bf9\u8c61\u5230\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\uff0c\u5982Asset\u6587\u4ef6\u5939\u3002</p> </li> <li> <p>\u751f\u6210\u4e00\u4e2a\u6253\u5305CS\u811a\u672c\uff0c\u5199\u5165\u6253\u5305\u4ee3\u7801\uff1a</p> </li> </ol> C#<pre><code>using UnityEditor;\n\npublic class ExportUnityPackage\n{\n    static void Export()\n    {\n        string[] assetPaths = { \"Assets/EmptyObject.prefab\" }; // \u9884\u5236\u4f53\u7684\u8def\u5f84\n        string packagePath = \"Assets/PluginsForUnity.unitypackage\"; // \u751f\u6210\u7684\u5305\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d\n        AssetDatabase.ExportPackage(assetPaths, packagePath, ExportPackageOptions.Recurse);\n    }\n}\n</code></pre> <ol> <li>\u547d\u4ee4\u884c\u8fd0\u884cUnity\u7f16\u8f91\u5668\u8fdb\u884c\u7684\u6253\u5305\u547d\u4ee4</li> </ol> Bash<pre><code>/path/to/Unity -quit -batchmode -projectPath /path/to/your/project -executeMethod ExportUnityPackage.Export\n</code></pre> <p>\u200b   \u6253\u5305\u4f1a\u5728\u540e\u53f0\u8fdb\u884c\uff0c\u770b\u4e0d\u5230\u6253\u5305\u8fdb\u5ea6\uff0c\u6253\u5305\u6210\u529f\u4f1a\u751f\u6210PluginsForUnity.unitypackage\u6587\u4ef6\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%8E%9F%E7%94%9FUnity%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/#jetbrains","title":"Jetbrains\u6301\u7eed\u96c6\u6210","text":"<p>Todo..</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/","title":"\u5404\u6a21\u5757\u62c6\u89e3","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/#_2","title":"\u89d2\u8272","text":"<p>\u6a21\u578b</p> <p>\u6765\u6e90\uff1a\u8d44\u6e90\u5546\u5e97/blender\u8f6c\u6362</p> <p>shader</p> <p>\u6765\u6e90\uff1a\u5185\u7f6e/URP/HURP/\u7b2c\u4e09\u65b9/\u81ea\u5236</p> <p>\u8f6c\u6362\uff1a\u81ea\u52a8/\u624b\u52a8</p> <p>\u73a9\u5bb6\u89d2\u8272</p> <p>\u6a21\u578b\uff1a\u9aa8\u9abc/\u7f51\u683c/Camera</p> <p>\u52a8\u753b\uff1aAnimator\u2014\u2014controller/avatar</p> <p>\u63a7\u5236\u811a\u672c\uff1aCharacter\uff08\u53d8\u6362\u63a7\u5236\uff0c\u7b80\u5355\uff09/Rigidbody\uff08\u529b\u63a7\u5236\uff0c\u590d\u6742\uff09\uff0cPC\u7aef/\u79fb\u52a8\u7aef</p> <p>\u78b0\u649e\u4f53\uff1aCapsule Collider</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/#_3","title":"\u5149\u7ebf","text":"<p>\u989c\u8272</p> <p>\u5f3a\u5ea6</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/#ai","title":"AI","text":"<p>\u5bfc\u822a\u7f51\u7edc\uff1aNavMesh\u2014\u2014Bake</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/#_4","title":"\u8d44\u6e90","text":"<p>Resources.Load  Resources.LoadAync GameObject.Instantiate GameObject.Destroy AssetBundle.Load / LoadAll / mainAsset AssetBundle.LoadAsync / LoadAllAsync GameObject.SetActive(True)  GameObject.SetActive(False) AssetBundle.Unload(True) AssetBundle.Unload(False) Resouces.UnloadAsset New WWW WWW.LoadFromCacheOrDownload AssetBundle.CreateFromFile AssetBundle.LoadFromFile AssetBundle.CreateFromMemory AssetBundle.LoadFromMemory</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E5%90%84%E6%A8%A1%E5%9D%97%E6%8B%86%E8%A7%A3/#avater","title":"Avater","text":"<p>Generic</p> <p>\u65b0\u7684\u52a8\u753b\u7cfb\u7edf\uff0c\u652f\u6301\u975e\u4eba\u5f62\uff08\u602a\u7269\uff09\u52a8\u753b\uff0c\u4e5f\u652f\u6301\u4eba\u5f62\u52a8\u753b\uff0c\u65e0\u6cd5\u4f7f\u7528Humanoid\u52a8\u753b\u91cd\u5b9a\u5411\u529f\u80fd\u3002</p> <p>Humanoid</p> <p>\u4eba\u5f62\u52a8\u753b\uff0c\u4e0d\u652f\u6301\u975e\u4eba\u5f62\u52a8\u753b\uff0c\u53ef\u4f7f\u7528\u52a8\u753b\u91cd\u5b9a\u5411\u529f\u80fd\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E6%91%84%E5%83%8F%E6%9C%BA%E7%BB%84%E4%BB%B6CineMachine/","title":"\u6444\u50cf\u673a\u7ec4\u4ef6Cinemachine","text":"<p>\u5728Unity\u4e2d\uff0c\u4f20\u7edf\u7684\u6444\u50cf\u673a\u7ec4\u4ef6\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u811a\u672c\u8fdb\u884c\u63a7\u5236\u3002Unity\u6709\u4e00\u4e2a\u5148\u8fdb\u7684Unity\u6444\u50cf\u673a\u7cfb\u7edf\uff1aCinemachine\u2014\u2014\u5b83\u662f\u4e00\u4e2a\u514d\u8d39\u7684Unity\u63d2\u4ef6\uff0c\u5b83\u6781\u5927\u5730\u7b80\u5316\u4e86\u52a8\u6001\u548c\u7535\u5f71\u7ea7\u76f8\u673a\u6548\u679c\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u65e0\u9700\u5927\u91cf\u7f16\u7a0b\u5373\u53ef\u5b9e\u73b0\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E6%91%84%E5%83%8F%E6%9C%BA%E7%BB%84%E4%BB%B6CineMachine/#_1","title":"\u5b89\u88c5\u4e0e\u521b\u5efa","text":"<p>\u5b89\u88c5\uff1a</p> <ol> <li>\u5728Unity\u7f16\u8f91\u5668\u4e2d\uff0c\u70b9\u51fb<code>Window</code>\u83dc\u5355\u3002</li> <li>\u9009\u62e9<code>Package Manager</code>\u3002</li> <li>Packages: xxx\uff0c\u9009\u62e9<code>Unity Registry</code>\u3002</li> <li>\u641c\u7d22<code>Cinemachine</code>\u3002</li> <li>\u70b9\u51fb<code>Install</code>\u8fdb\u884c\u5b89\u88c5\u3002</li> </ol> <p>\u521b\u5efa\uff1a</p> <ol> <li>\u5728Hierarchy\u89c6\u56fe\u7684\u7a7a\u767d\u533a\u57df\u6216\u8005\u5bfc\u822a\u680f\u7684GameObject\u9879\u76ee\u9009\u62e9Cinemachine\u3002</li> <li>\u9009\u62e9\u9700\u8981\u7684\u76f8\u673a\u7c7b\u578b\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E6%91%84%E5%83%8F%E6%9C%BA%E7%BB%84%E4%BB%B6CineMachine/#_2","title":"\u7ec4\u4ef6\u4ecb\u7ecd","text":"<ol> <li>2D Camera</li> <li>\u4e13\u95e8\u4e3a2D\u6e38\u620f\u8bbe\u8ba1\u7684\u76f8\u673a\uff0c\u53ef\u4ee5\u5904\u7406\u5e73\u9762\u8ddf\u8e2a\u548c\u5e73\u6ed1\u79fb\u52a8\u3002</li> <li>Blend List Camera</li> <li>\u5141\u8bb8\u521b\u5efa\u4e00\u4e2a\u76f8\u673a\u5217\u8868\uff0c\u8fd9\u4e9b\u76f8\u673a\u53ef\u4ee5\u6839\u636e\u6307\u5b9a\u7684\u987a\u5e8f\u548c\u65f6\u95f4\u6df7\u5408\u5b83\u4eec\u7684\u955c\u5934\u3002\u8fd9\u5bf9\u4e8e\u521b\u5efa\u590d\u6742\u7684\u955c\u5934\u5207\u6362\u5e8f\u5217\u975e\u5e38\u6709\u7528\u3002</li> <li>ClearShot Camera</li> <li>\u8fd9\u662f\u4e00\u4e2a\u667a\u80fd\u76f8\u673a\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u76f8\u673a\u4e4b\u95f4\u9009\u62e9\u6700\u4f73\u7684\u955c\u5934\u3002\u5b83\u4f1a\u81ea\u52a8\u907f\u5f00\u906e\u6321\uff0c\u5e76\u5bfb\u627e\u6700\u6e05\u6670\u7684\u89c6\u89d2\u6765\u62cd\u6444\u76ee\u6807\u3002</li> <li>Dolly Camera with Track</li> <li>\u8be5\u76f8\u673a\u6cbf\u7740\u4e00\u4e2a\u9884\u5148\u8bbe\u5b9a\u7684\u8f68\u9053\u79fb\u52a8\uff0c\u7c7b\u4f3c\u4e8e\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u6444\u5f71\u673a\u8f68\u9053\u7cfb\u7edf\u3002\u5b83\u7528\u4e8e\u521b\u5efa\u5e73\u6ed1\u7684\u3001\u6709\u8f68\u9053\u7684\u955c\u5934\u79fb\u52a8\u6548\u679c\u3002</li> <li>Dolly Track with Cart</li> <li>\u7c7b\u4f3c\u4e8eDolly Camera with Track\uff0c\u4f46\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u8d2d\u7269\u8f66\u201d\uff08Cart\uff09\uff0c\u53ef\u4ee5\u5728\u8f68\u9053\u4e0a\u524d\u540e\u79fb\u52a8\uff0c\u4ee5\u8fbe\u5230\u66f4\u52a0\u7cbe\u7ec6\u7684\u63a7\u5236\u3002</li> <li>FreeLook Camera</li> <li>\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56f4\u7ed5\u76ee\u6807\u7684\u4e09\u4e2a\u8f74\u7684\u81ea\u7531\u89c6\u89d2\uff0c\u73a9\u5bb6\u53ef\u4ee5\u81ea\u7531\u65cb\u8f6c\u76f8\u673a\u6765\u89c2\u5bdf\u5468\u56f4\u73af\u5883\u3002</li> <li>Mixing Camera</li> <li>\u5141\u8bb8\u6df7\u5408\u4e24\u4e2a\u6216\u66f4\u591a\u76f8\u673a\u7684\u5c5e\u6027\uff0c\u5982\u4f4d\u7f6e\u548c\u65cb\u8f6c\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u4e0d\u540c\u76f8\u673a\u89c6\u89d2\u4e4b\u95f4\u521b\u5efa\u52a8\u6001\u8fc7\u6e21\u3002</li> <li>State-Driven Camera</li> <li>\u901a\u8fc7\u6e38\u620f\u5bf9\u8c61\u7684\u72b6\u6001\u6765\u9a71\u52a8\u76f8\u673a\u7684\u9009\u62e9\u548c\u884c\u4e3a\u3002\u8fd9\u901a\u5e38\u4e0e\u52a8\u753b\u72b6\u6001\u673a\u96c6\u6210\uff0c\u6839\u636e\u89d2\u8272\u6216\u6e38\u620f\u7684\u72b6\u6001\u6539\u53d8\u76f8\u673a\u3002</li> <li>Target Group Camera</li> <li>\u8fd9\u4e2a\u76f8\u673a\u53ef\u4ee5\u540c\u65f6\u5173\u6ce8\u591a\u4e2a\u76ee\u6807\uff0c\u5e76\u6839\u636e\u914d\u7f6e\u7684\u89c4\u5219\u5728\u5b83\u4eec\u4e4b\u95f4\u5e73\u8861\u89c6\u89d2\u548c\u7126\u70b9\u3002</li> <li>Virtual Camera<ul> <li>\u8fd9\u662fCinemachine\u7684\u57fa\u7840\u7ec4\u4ef6\uff0c\u4ee3\u8868\u4e00\u4e2a\u5355\u72ec\u7684\u76f8\u673a\u955c\u5934\u3002\u5b83\u53ef\u4ee5\u88ab\u914d\u7f6e\u4e3a\u8ddf\u8e2a\u4e00\u4e2a\u76ee\u6807\uff0c\u6216\u8005\u5b9e\u73b0\u7279\u5b9a\u7684\u76f8\u673a\u884c\u4e3a\uff0c\u5982\u79fb\u52a8\u3001\u65cb\u8f6c\u7b49\u3002</li> </ul> </li> </ol> <p>\u56fa\u5b9a\u89c6\u89d2\u7684\u5e38\u7528Virtual Camera\uff0c\u7b2c\u4e09\u4eba\u79f0\u5e38\u7528FreeLook Camera\uff0c\u7075\u6d3b\u53d6\u7528\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/Unity/%E6%91%84%E5%83%8F%E6%9C%BA%E7%BB%84%E4%BB%B6CineMachine/#freelook-camera","title":"FreeLook Camera","text":"<p>\u901a\u8fc7\u4e09\u7ec4\u76f8\u673a\u5b9e\u73b0\u7684\u81ea\u7531\u89c6\u89d2\uff0c\u9ed8\u8ba4\u5c31\u53ef\u4ee5\u901a\u8fc7\u9f20\u6807\u79fb\u52a8\u89c6\u89d2\u3002</p> <p>Hierarchy\u89c6\u56fe\u4e2d\u9009\u62e9FreeLook Camera\u5bf9\u8c61\uff0cSense\u754c\u9762\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u6876\u5f62\u7684\u8303\u56f4\u6307\u793a\u5668\uff0c\u5b83\u4ee3\u8868\u4e86\u76f8\u673a\u7684\u53ef\u79fb\u52a8\u8303\u56f4\u3002\u5c06\u4e2d\u95f4\u7684\u5706\u653e\u5728\u80a9\u8180\u4f4d\u7f6e\uff0c\u5934\u9876\u548c\u811a\u5e95\u7684\u5706\u534a\u5f84\u4e3a0.001\uff08\u9632\u6b62\u53cd\u8f6c\uff09\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u539f\u795e\u7684\u7b2c\u4e09\u4eba\u79f0\u89c6\u89d2\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/","title":"Character\u521b\u5efa","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_1","title":"\u5c42\u6b21\u7ed3\u6784","text":"<p>\u521b\u5efa\u4e00\u4e2aCharacter\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5934\u6587\u4ef6\u91cc\u58f0\u660e\u662f\u8fd9\u6837\u7684\uff1a</p> C++<pre><code>class PROJECTNAME_API ASCharacter : public ACharacter\n</code></pre> <p>\u6839\u636eUnreal\u7684\u89c4\u5219\uff0c\u7ee7\u627f\u81eaAActor\u7684\u7c7b\uff0c\u9700\u8981\u4ee5A\u5f00\u5934\u547d\u540d\u3002</p> <p>\u6211\u4eec\u4e00\u5c42\u5c42\u5f80\u4e0a\u627e\uff0c\u53ef\u4ee5\u627e\u5230\u4e00\u4e2aCharacter\u7684\u5c42\u6b21\u7ed3\u6784\uff1a</p> Text Only<pre><code>UObjectBase\n\u251c\u2500\u2500 UObjectBaseUtility\n\u2502       \u2514\u2500\u2500 UObject\n\u2502    \u2502       \u2514\u2500\u2500 AActor\n\u2502    \u2502       \u2502   \u251c\u2500\u2500 APawn\n\u2502    \u2502       \u2502   \u2502   \u2514\u2500\u2500 ACharacter\n</code></pre> <p>\u67e5\u8be2\u4ed6\u4eec\u7684\u6587\u6863\uff1a</p> <p>UObjectBase\uff1aUObject\u7684\u4f4e\u7ea7\u5b9e\u73b0\uff0c\u6839\u636e\u5b98\u65b9API\uff0c\u8fd9\u4e2a\u7c7b\u4e0d\u5e94\u76f4\u63a5\u5728\u6e38\u620f\u4ee3\u7801\u4e2d\u4f7f\u7528\uff0c\u6211\u4eec\u4e0d\u7528\u5173\u5fc3\u3002</p> <p>UObjectBaseUtility\uff1a\u63d0\u4f9bUObject\u7684\u5b9e\u7528\u529f\u80fd\uff0c\u540c\u6837\uff0c\u8fd9\u4e2a\u7c7b\u4e0d\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528\u3002</p> <p>UObject\uff1a\u4e0d\u96be\u7406\u89e3\uff0c\u6240\u6709UE\u5bf9\u8c61\u7684\u57fa\u7c7b\u3002\u5305\u542b\u4e868071\u4e2a\u5b50\u7c7b\uff085.3\uff09\uff0c\u602a\u4e0d\u5f97GPT\u65e0\u6cd5\u544a\u8bc9\u6211\u5168\u90e8\u7684\u5185\u5bb9\u3002</p> <p>AActor\uff1a\u6e38\u620f\u4e16\u754c\u4e2d\u6240\u6709\u53ef\u653e\u7f6e\u5bf9\u8c61\u7684\u57fa\u7c7b\u3002</p> <p>APawn\uff1a\u53ef\u4ee5\u88ab\u73a9\u5bb6\u6216AI\u64cd\u63a7\u7684\u89d2\u8272\u7684\u57fa\u7c7b\u3002</p> <p>ACharacter\uff1a\u5177\u6709\u7f51\u683c\uff08mesh\uff09\u3001\u78b0\u649e\uff08collision\uff09\u548c\u5185\u7f6e\u79fb\u52a8\u903b\u8f91\u7684Pawns\uff08\u89d2\u8272\uff09\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3Unreal\u7684\u8fd9\u4e9b\u5185\u5bb9\uff0c\u6211\u4eec\u901a\u8fc7\u5b98\u65b9\u6587\u6863Gameplay Framework\u8fdb\u884c\u8fdb\u4e00\u6b65\u4e86\u89e3\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#gameplay-framework","title":"Gameplay Framework","text":"<p>\u865a\u5e7b\u5f15\u64ce\u4e2d\u7684\u6e38\u620f\u6846\u67b6\u63d0\u4f9b\u4e86\u591a\u4e2a\u7c7b\u548c\u7ec4\u4ef6\uff0c\u53ef\u7528\u4f5c\u9879\u76ee\u7684\u6784\u5efa\u6a21\u5757\u3002</p> <ol> <li>Actors\uff08\u89d2\u8272\uff09\uff1aActor\u53ef\u80fd\u5305\u542b\u4e00\u7cfb\u5217Actor\u7ec4\u4ef6\u7684\u96c6\u5408\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u7528\u4e8e\u63a7\u5236Actor\u7684\u79fb\u52a8\u65b9\u5f0f\u548c\u6e32\u67d3\u65b9\u5f0f\u3002\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\uff0cActor\u652f\u6301\u8de8\u7f51\u7edc\u590d\u5236\u5c5e\u6027\u548c\u51fd\u6570\u8c03\u7528\u3002</li> <li>Cameras\uff08\u6444\u50cf\u673a\uff09\uff1a\u6444\u50cf\u673a\u4ee3\u8868\u73a9\u5bb6\u7684\u89c6\u89d2\uff0c\u5373\u73a9\u5bb6\u5982\u4f55\u770b\u4e16\u754c\u3002PlayerController\u6307\u5b9a\u4e86\u4e00\u4e2a\u6444\u50cf\u673a\u7c7b\u5e76\u5b9e\u4f8b\u5316\u4e00\u4e2aCamera Actor\uff0c\u7528\u4e8e\u8ba1\u7b97\u73a9\u5bb6\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u548c\u65b9\u5411\u770b\u4e16\u754c\u3002</li> <li>Pawn\uff08\u89d2\u8272\uff09\uff1aPawn\u7c7b\u662f\u53ef\u4ee5\u7531\u73a9\u5bb6\u6216\u4eba\u5de5\u667a\u80fd\u63a7\u5236\u7684\u6240\u6709\u89d2\u8272\u7684\u57fa\u7c7b\u3002Pawn\u662f\u73a9\u5bb6\u6216AI\u5b9e\u4f53\u5728\u4e16\u754c\u4e2d\u7684\u7269\u7406\u8868\u793a\u3002Character\u662fPawn\u7684\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\uff0c\u5177\u6709\u56db\u5904\u8d70\u52a8\u7684\u80fd\u529b\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u63a7\u5236\u5668\uff08Controller\uff09\u548cPawn\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u63a7\u5236\u5668\u4e00\u6b21\u53ea\u80fd\u63a7\u5236\u4e00\u4e2aPawn\u3002</li> <li>Controllers\uff08\u63a7\u5236\u5668\uff09\uff1aControllers\u662f\u975e\u7269\u7406\u7684Actors\uff0c\u53ef\u4ee5\u63a7\u5236Pawn\u6216Pawn\u6d3e\u751f\u7c7b\uff0c\u5982Character\u4ee5\u63a7\u5236\u5176\u52a8\u4f5c\u3002\u73a9\u5bb6\u63a7\u5236\u5668\u7528\u4e8e\u73a9\u5bb6\u63a7\u5236Pawn\uff0c\u800cAI\u63a7\u5236\u5668\u5b9e\u73b0\u4e86\u5b83\u4eec\u63a7\u5236\u7684Pawn\u7684\u4eba\u5de5\u667a\u80fd\u3002\u63a7\u5236\u5668\u4f7f\u7528Possess\u51fd\u6570\u6765\u63a7\u5236Pawn\uff0c\u5e76\u4f7f\u7528UnPossess\u51fd\u6570\u653e\u5f03\u5bf9Pawn\u7684\u63a7\u5236\u3002</li> <li>Gameplay Timers\uff08\u6e38\u620f\u65f6\u95f4\u5668\uff09\uff1aGameplay Timers\u521b\u5efa\u5f02\u6b65\u56de\u8c03\u5230\u7279\u5b9a\u7684\u51fd\u6570\u6307\u9488\uff0c\u89e6\u53d1\u5728\u5ef6\u8fdf\u540e\u6216\u4e00\u6bb5\u65f6\u95f4\u5185\u6267\u884c\u7684\u4e8b\u4ef6\u3002</li> <li>GameMode\uff08\u6e38\u620f\u6a21\u5f0f\uff09\uff1a\u6e38\u620f\u6846\u67b6\u7684\u57fa\u7840\u662fGameMode\u3002\u5728\u521d\u59cb\u5316\u5173\u5361\u8fdb\u884c\u6e38\u620f\u65f6\uff0c\u4f1a\u5b9e\u4f8b\u5316\u4e00\u4e2aAGameModeBase\u89d2\u8272\u3002GameMode\u8bbe\u7f6e\u4e86\u6e38\u620f\u7684\u89c4\u5219\uff0c\u5b83\u4ec5\u5728\u670d\u52a1\u5668\u4e0a\u5b9e\u4f8b\u5316\uff0c\u4e0d\u4f1a\u5b58\u5728\u4e8e\u5ba2\u6237\u7aef\u3002</li> <li>Game Features\u548cModular Gameplay\u63d2\u4ef6\uff1a\u8fd9\u4e9b\u63d2\u4ef6\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u4e3a\u5176\u9879\u76ee\u521b\u5efa\u72ec\u7acb\u7684\u529f\u80fd\u3002\u8fd9\u4e9b\u63d2\u4ef6\u4f7f\u9879\u76ee\u7684\u4ee3\u7801\u5e93\u4fdd\u6301\u5e72\u51c0\u53ef\u8bfb\uff0c\u907f\u514d\u4e0d\u76f8\u5173\u529f\u80fd\u4e4b\u95f4\u7684\u610f\u5916\u4ea4\u4e92\u6216\u4f9d\u8d56\u5173\u7cfb\u3002</li> <li>\u7528\u6237\u754c\u9762\uff08UI\uff09\u548c\u62ac\u5934\u663e\u793a\uff08HUD\uff09\uff1a\u8fd9\u662f\u5411\u73a9\u5bb6\u63d0\u4f9b\u5173\u4e8e\u6e38\u620f\u4fe1\u606f\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u6709\u65f6\u5141\u8bb8\u73a9\u5bb6\u4e0e\u6e38\u620f\u8fdb\u884c\u4ea4\u4e92\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#acter","title":"\u89d2\u8272\uff08Acter\u7684\u751f\u547d\u5468\u671f\uff09","text":"<p>\u53c2\u8003\u6587\u6863\uff1aActor Lifecycle</p> <p>\u672c\u8282\u5c06\u4ecb\u7ecd\uff1a</p> <p>\u89d2\u8272\u662f\u5982\u4f55\u88ab\u5b9e\u4f8b\u5316\u6216\u751f\u6210\u5230\u5173\u5361\u4e2d\u7684\uff0c\u5305\u62ec\u89d2\u8272\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u3002</p> <p>\u89d2\u8272\u5982\u4f55\u88ab\u6807\u8bb0\u4e3a\u5f85\u9500\u6bc1\uff08PendingKill\uff09\uff0c\u7136\u540e\u901a\u8fc7\u5783\u573e\u6536\u96c6\uff08Garbage Collection\uff09\u88ab\u79fb\u9664\u6216\u9500\u6bc1\u3002</p> <p></p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_2","title":"\u4ece\u78c1\u76d8\u52a0\u8f7d\uff08\u6df1\u84dd\u8272\uff09","text":"<ol> <li>UEngine::LoadMap \u6216 UWorld::AddToWorld\uff1a\u4ece\u78c1\u76d8\u52a0\u8f7d\u89d2\u8272</li> <li>PostLoad\uff1a\u52a0\u8f7d\u5bf9\u8c61\u540e\u7acb\u5373\u6267\u884c\uff0c\u91ca\u653e\u8d44\u6e90\u3001\u91cd\u7f6e\u72b6\u6001\u6216\u6267\u884c\u5176\u4ed6\u5fc5\u8981\u7684\u64cd\u4f5c\u3002\u53ea\u7528\u4e8e\u52a0\u8f7d\u540e\uff0c\u4e0d\u7528\u4e8e\u521b\u5efa\u540e\uff0c\u4e3b\u7ebf\u7a0b\u6267\u884c\u3002</li> <li>UAISystemBase::InitializeActorsForPlay\uff1a\u5728\u4e16\u754c\u521d\u59cb\u5316\u6240\u6709\u89d2\u8272\u5e76\u51c6\u5907\u5f00\u59cb\u6e38\u620f\u65f6\u8c03\u7528\u3002</li> <li>ULevel::RouteActorInitialize\uff1a\u6839\u636e\u4e0d\u540c\u7684RouteActorInitializationState\u72b6\u6001\uff0c\u904d\u5386Actors\u6267\u884c\u4ee5\u4e0b\u4e0d\u540c\u7684\u51fd\u6570\u3002</li> <li>AActor::PreInitializeComponents\uff1a\u5728\u7ec4\u4ef6\u521d\u59cb\u5316\u4e4b\u524d\u8c03\u7528\u3002</li> <li>UActorComponent::InitializeComponent\uff1a\u5728 BeginPlay\u4e4b\u524d\u521d\u59cb\u5316\u7ec4\u4ef6</li> <li>AActor::PostInitializeComponents \uff1a\u5728\u5176\u6240\u6709\u7ec4\u4ef6\u88ab\u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u521d\u59cb\u5316&lt;-\u6211\u7684\u7406\u89e3\u662f\u5c06\u914d\u7f6e\u4e0e\u81ea\u5b9a\u4e49\u5206\u5f00\uff0c\u907f\u514d\u51fa\u9519</li> <li>AActor::BeginPlay\uff1a\u53ef\u91cd\u5199\u7684\u672c\u5730\u4e8b\u4ef6\uff0c\u7528\u4e8e\u5f53\u8fd9\u4e2a\u89d2\u8272\u5f00\u59cb\u64ad\u653e\u65f6\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_3","title":"\u7f16\u8f91\u5668\u5185\u64ad\u653e\uff08\u9ec4\u8272\uff09","text":"<p>\u5728\u7f16\u8f91\u5668\u4e2d\u64ad\u653e\u8def\u5f84\u4e2d\uff0c\u89d2\u8272\u662f\u4ece\u7f16\u8f91\u5668\u4e2d\u590d\u5236\u800c\u4e0d\u662f\u4ece\u78c1\u76d8\u52a0\u8f7d\u7684\u3002\u590d\u5236\u7684\u89d2\u8272\u4ee5\u7c7b\u4f3c\u4e8e\u201c\u4ece\u78c1\u76d8\u52a0\u8f7d\u8def\u5f84\u201d\u4e2d\u63cf\u8ff0\u7684\u6d41\u7a0b\u8fdb\u884c\u521d\u59cb\u5316\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#scharacterh","title":"SCharacter.h","text":"C++<pre><code>//\u4ee5\u5f00\u6e90\u9879\u76eeActionRoguelike\u7684\u89d2\u8272\u4ee3\u7801\u4e3a\u4f8b\u8bf4\u660e\uff0c\u5305\u542b\u89d2\u8272\u79fb\u52a8\u3001\u89c6\u89d2\u63a7\u5236\u3001\u5c5e\u6027\u8bbe\u7f6e\u4e0e\u4ea4\u4e92\u7b49\u529f\u80fd\n//\u540c\u65f6\u4e0e\u521d\u59cb\u6587\u4ef6\u5bf9\u6bd4\uff0c\u5bf9\u9ed8\u8ba4\u4ee3\u7801\u4e0e\u65b0\u589e\u4ee3\u7801\u4f5c\u51fa\u8bf4\u660e\n#pragma once                                    // \u9632\u6b62\u91cd\u590d\u5305\u542b\uff0c\u9ed8\u8ba4\n\n#include \"CoreMinimal.h\"                        // \u5f15\u5165\u6838\u5fc3\u6700\u5c0f\u4f9d\u8d56\uff0c\u9ed8\u8ba4\n#include \"GameFramework/Character.h\"            // Character\u7c7b\uff0c\u9ed8\u8ba4\n\n// Included for struct FInputActionInstance (Enhanced Input)\n#include \"InputAction.h\"                        // \u5f15\u5165\u589e\u5f3a\u8f93\u5165\u7cfb\u7edf\uff0c\u65b0\u589e\n#include \"SCharacter.generated.h\"               // \u81ea\u52a8\u751f\u6210\u7684UClass\u5934\u6587\u4ef6\uff0c\u9ed8\u8ba4\n\n//\u5f15\u5165Unreal\u6807\u51c6\u7c7b\uff0c\u65b0\u589e\nclass UInputMappingContext;                     // \u8f93\u5165\u6620\u5c04\nclass UCameraComponent;                         // \u6444\u50cf\u673a\nclass USpringArmComponent;                      // \u5f39\u7c27\u81c2\nclass USInteractionComponent;                   // \u4ea4\u4e92\nclass UAnimMontage;                             // \u52a8\u753b\u8499\u592a\u5947\nclass USAttributeComponent;                     // \u5c5e\u6027\nclass UParticleSystem;                          // \u7c92\u5b50\u7cfb\u7edf\nclass USActionComponent;                        // \u52a8\u4f5c\u7cfb\u7edf\n\nUCLASS()                                        // \u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684UClass\uff0cASCharacter\uff0c\u7ee7\u627f\u81eaACharacter\uff0c\u9ed8\u8ba4\nclass ACTIONROGUELIKE_API ASCharacter : public ACharacter\n{\n    GENERATED_BODY()                            // \u5b8f\uff0c\u7528\u4e8e\u751f\u6210\u6807\u51c6\u6784\u9020\u51fd\u6570\u548c\u5e8f\u5217\u5316\u4ee3\u7801\uff0c\u6682\u65f6\u672a\u627e\u5230\u5b98\u65b9\u8bf4\u660e\u4e0e\u6e90\u7801\uff0c\u9ed8\u8ba4\n\nprotected:\n\n    // \u5b9a\u4e49\u8f93\u5165\u6620\u5c04\u548c\u76f8\u5173\u8f93\u5165\u52a8\u4f5c\uff0c\u65b0\u589e\n\n    /* EditDefaultsOnly \u8868\u793a\u8be5\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u4fee\u6539\u9ed8\u8ba4\u503c\uff0c\u4f46\u5728\u6e38\u620f\u8fd0\u884c\u65f6\u65e0\u6cd5\u4fee\u6539\u3002 */\n    // \u9ed8\u8ba4\u8f93\u5165\u6620\u5c04\u4e0a\u4e0b\u6587\u5bf9\u8c61\uff0c\u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u67d0\u4e9b\u8f93\u5165\u4e8b\u4ef6\u5e94\u8be5\u88ab\u89e6\u53d1\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")         //UPROPERTY\uff1a\u5c5e\u6027\u6210\u5458\u53d8\u91cf\uff1bEditDefaultsOnly\uff1a\u5728\u7f16\u8f91\u5668\u4e2d\u4fee\u6539\u9ed8\u8ba4\u503c\n    TObjectPtr&lt;UInputMappingContext&gt; DefaultInputMapping;   //\u6307\u5411 UInputMappingContext \u7c7b\u578b\u7684\u667a\u80fd\u6307\u9488\uff08smart pointer\uff09\u53d8\u91cf\u3002\n\n    // \u7528\u4e8e\u5904\u7406\u89d2\u8272\u79fb\u52a8\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_Move;\n\n    // \u7528\u4e8e\u5904\u7406\u9f20\u6807\u89c6\u89d2\u63a7\u5236\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_LookMouse;\n\n    // \u7528\u4e8e\u5904\u7406\u624b\u67c4\uff08\u6e38\u620f\u624b\u67c4\uff09\u89c6\u89d2\u63a7\u5236\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_LookStick;\n\n    // \u89d2\u8272\u8df3\u8dc3\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_Jump;\n\n    // \u4e0e\u7269\u4f53\u4e92\u52a8\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_Interact;\n\n    // \u89d2\u8272\u5954\u8dd1\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_Sprint;\n\n    // \u89d2\u8272\u51b2\u523a\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_Dash;\n\n    // \u89d2\u8272\u4e3b\u8981\u653b\u51fb\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_PrimaryAttack;\n\n    // \u89d2\u8272\u6b21\u8981\u653b\u51fb\u7684\u8f93\u5165\u52a8\u4f5c\u5bf9\u8c61\n    UPROPERTY(EditDefaultsOnly, Category = \"Input\")\n    TObjectPtr&lt;UInputAction&gt; Input_SecondaryAttack;\n\n    /* VisibleAnywhere \u8868\u793a\u8be5\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u67e5\u770b\uff0c\u4f46\u4e0d\u53ef\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u4fee\u6539\u3002 */\n    //UPROPERTY(VisibleAnywhere, Category = \"Effects\")\n    //FName TimeToHitParamName;\n\n    /* \u8986\u76d6\u6750\u8d28\uff08Overlay material\uff09\u901a\u5e38\u7528\u4e8e\u5728\u5bf9\u8c61\u4e0a\u6dfb\u52a0\u989d\u5916\u7684\u6548\u679c\uff0c\u6bd4\u5982\u4f24\u5bb3\u95ea\u70c1\u6216\u9ad8\u4eae\u3002\u8fd9\u4e9b\u6548\u679c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u6570\u636e\uff0c\u4f8b\u5982\u989c\u8272\u6216\u900f\u660e\u5ea6\u503c\u3002 */\n    /* \u8fd9\u4e9b\u989d\u5916\u7684\u6570\u636e\u901a\u5e38\u5b58\u50a8\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u4f8b\u5982\u4e00\u4e2a\u6570\u7ec4\u6216\u5217\u8868\u3002\u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7d22\u5f15\uff0c\u7528\u6765\u6807\u8bc6\u5b83\u5728\u96c6\u5408\u4e2d\u7684\u4f4d\u7f6e\u3002 */\n    /* \u5728\u4ee3\u7801\u4e2d\u6216\u6750\u8d28\u4e2d\u4f7f\u7528\u7684\u7d22\u5f15\u503c\u5fc5\u987b\u4e0e\u8986\u76d6\u6750\u8d28\u4e2d\u4f7f\u7528\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7684\u7d22\u5f15\u76f8\u5339\u914d\u3002 */\n    // \u89d2\u8272\u53d7\u51fb\u65f6\u7684\u89c6\u89c9\u6548\u679c\u7d22\u5f15\uff0c\u53ef\u5728\u7f16\u8f91\u5668\u4e2d\u67e5\u770b\n    UPROPERTY(VisibleAnywhere, Category = \"Effects\")\n    int32 HitFlash_CustomPrimitiveIndex;\n\n    // \u6444\u50cf\u673a\u5f39\u7c27\u81c2\u7ec4\u4ef6\u7684\u6307\u9488\n    UPROPERTY(VisibleAnywhere)\n    TObjectPtr&lt;USpringArmComponent&gt; SpringArmComp;\n\n    // \u6444\u50cf\u673a\u7ec4\u4ef6\u7684\u6307\u9488\n    UPROPERTY(VisibleAnywhere)\n    TObjectPtr&lt;UCameraComponent&gt; CameraComp;\n\n    // \u4e0e\u4e92\u52a8\u76f8\u5173\u7684\u7ec4\u4ef6\u7684\u6307\u9488\n    UPROPERTY(VisibleAnywhere)\n    TObjectPtr&lt;USInteractionComponent&gt; InteractionComp;\n\n    // \u89d2\u8272\u5c5e\u6027\u7ec4\u4ef6\u7684\u6307\u9488\n    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = \"Components\")\n    TObjectPtr&lt;USAttributeComponent&gt; AttributeComp;\n\n    // \u89d2\u8272\u52a8\u4f5c\u7ec4\u4ef6\u7684\u6307\u9488\n    UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = \"Components\")\n    TObjectPtr&lt;USActionComponent&gt; ActionComp;\n\n    // Enhanced Input\n    // Three parameter options available (FInputActionInstance, FInputActionValue, or none)\n\n    // \u5b9a\u4e49\u79fb\u52a8\u548c\u67e5\u770b\u76f8\u5173\u7684\u65b9\u6cd5\uff0c\u65b0\u589e\n\n    // \u5904\u7406\u89d2\u8272\u79fb\u52a8\u7684\u65b9\u6cd5\n    void Move(const FInputActionInstance&amp; Instance);            //FInputActionInstance\u8868\u793a\u8f93\u5165\u52a8\u4f5c\uff08Input Action\uff09\u7684\u5b9e\u4f8b\uff0c\u5305\u542b\uff1a\n                                                                //\u8f93\u5165\u52a8\u4f5c\u7684\u540d\u79f0\u6216\u6807\u8bc6\u7b26\uff0c\u4ee5\u6307\u793a\u662f\u54ea\u4e2a\u52a8\u4f5c\u88ab\u89e6\u53d1\u3002\n                                                                //\u8f93\u5165\u52a8\u4f5c\u7684\u72b6\u6001\uff0c\u4f8b\u5982\u6309\u4e0b\u3001\u91ca\u653e\u3001\u6301\u7eed\u6309\u4e0b\u7b49\u3002\n                                                                //\u89e6\u53d1\u8f93\u5165\u52a8\u4f5c\u7684\u73a9\u5bb6\u63a7\u5236\u5668\u6216\u8bbe\u5907\u3002\n                                                                //\u8f93\u5165\u52a8\u4f5c\u7684\u65f6\u95f4\u6233\uff0c\u4ee5\u786e\u5b9a\u52a8\u4f5c\u4f55\u65f6\u89e6\u53d1\u3002\n\n    // \u5904\u7406\u9f20\u6807\u89c6\u89d2\u63a7\u5236\u7684\u65b9\u6cd5\n    void LookMouse(const FInputActionValue&amp; InputValue);        //FInputActionValue\u8868\u793a\u8f93\u5165\u4e8b\u4ef6\u7684\u503c\n\n    // \u5904\u7406\u624b\u67c4\u89c6\u89d2\u63a7\u5236\u7684\u65b9\u6cd5\n    void LookStick(const FInputActionValue&amp; InputValue);\n\n    // \u89d2\u8272\u5f00\u59cb\u5954\u8dd1\u7684\u65b9\u6cd5\n    void SprintStart();\n\n    // \u89d2\u8272\u505c\u6b62\u5954\u8dd1\u7684\u65b9\u6cd5\n    void SprintStop();\n\n    // \u89d2\u8272\u8fdb\u884c\u4e3b\u8981\u653b\u51fb\u7684\u65b9\u6cd5\n    void PrimaryAttack();\n\n    // \u89d2\u8272\u8fdb\u884c\u9ed1\u6d1e\u653b\u51fb\u7684\u65b9\u6cd5\n    void BlackHoleAttack();\n\n    // \u89d2\u8272\u8fdb\u884c\u51b2\u523a\u7684\u65b9\u6cd5\n    void Dash();\n\n    // \u89d2\u8272\u8fdb\u884c\u4e3b\u8981\u4e92\u52a8\u7684\u65b9\u6cd5\n    void PrimaryInteract();\n\n    // \u5b9a\u4e49\u5065\u5eb7\u53d8\u5316\u65f6\u7684\u56de\u8c03\u51fd\u6570\uff0c\u65b0\u589e\n    UFUNCTION()                                                 //\u58f0\u660e\u53ef\u5728\u84dd\u56fe\u4e2d\u8c03\u7528\u3002\n    void OnHealthChanged(AActor* InstigatorActor, USAttributeComponent* OwningComp, float NewHealth, float Delta);\n\n    // \u91cd\u5199PostInitializeComponents\u65b9\u6cd5\uff0c\u65b0\u589e\n    virtual void PostInitializeComponents() override;           //\u865a\u51fd\u6570\uff0c\u7528\u4e8e\u5728 Actor \u7684\u7ec4\u4ef6\u521d\u59cb\u5316\u4e4b\u540e\u6267\u884c\u4e00\u4e9b\u989d\u5916\u7684\u81ea\u5b9a\u4e49\u521d\u59cb\u5316\u5de5\u4f5c\u3002\n\n    // \u91cd\u5199GetPawnViewLocation\u65b9\u6cd5\uff0c\u65b0\u589e\n    virtual FVector GetPawnViewLocation() const override;       //\u865a\u51fd\u6570\uff0c\u7528\u4e8e\u83b7\u53d6\u89d2\u8272\uff08Pawn\uff09\u7684\u89c2\u5bdf\u4f4d\u7f6e\uff08View Location\uff09\u3002\n\n    // \u5b9a\u4e49\u5bfb\u627e\u51c6\u661f\u76ee\u6807\u7684\u65b9\u6cd5\uff0c\u65b0\u589e\n    void FindCrosshairTarget();\n\n    // \u5b9a\u4e49\u5b8c\u6210\u51c6\u661f\u8ffd\u8e2a\u7684\u56de\u8c03\u51fd\u6570\uff0c\u65b0\u589e\uff0c\u9700\u8981\u6ce8\u610f\u7684\u65f6\u5019\uff0cCharacter\u9ed8\u8ba4\u6307\u6325\u8986\u5199BeginPlay()\uff0c\u672c\u7c7b\u6ca1\u6709\u6b64\u8986\u5199\u3002\n    void CrosshairTraceComplete(const FTraceHandle&amp; InTraceHandle, FTraceDatum&amp; InTraceDatum);\n\n    // \u5b9a\u4e49\u8ffd\u8e2a\u53e5\u67c4\uff0c\u65b0\u589e\n    FTraceHandle TraceHandle;\n\npublic: \n\n    // \u6784\u9020\u51fd\u6570\uff0c\u9ed8\u8ba4\n    ASCharacter();\n\n    // \u91cd\u5199SetupPlayerInputComponent\u65b9\u6cd5\uff0c\u9ed8\u8ba4\uff0c\u7528\u4e8e\u8bbe\u7f6e\u73a9\u5bb6\u8f93\u5165\u63a7\u5236\u5668\uff08Player Input Controller\uff09\u7684\u8f93\u5165\u6620\u5c04\n    virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override; //\n\n    // \u91cd\u5199Tick\u65b9\u6cd5\uff0c\u9ed8\u8ba4\uff0c\u6bcf\u4e00\u5e27\u6267\u884c\n    virtual void Tick(float DeltaSeconds) override;\n\n    // \u5b9a\u4e49\u81ea\u6211\u6cbb\u7597\u7684\u65b9\u6cd5\uff0c\u65b0\u589e\n    UFUNCTION(Exec)\n    void HealSelf(float Amount = 100);\n\nprivate:\n    // \u5b9a\u4e49\u662f\u5426\u6709\u51c6\u661f\u76ee\u6807\u7684\u6807\u5fd7\uff0c\u65b0\u589e\n    bool bHasPawnTarget;\n};\n</code></pre>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#uproperty","title":"UPROPERTY\u8bf4\u660e","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_4","title":"\u5b9a\u4e49\u548c\u53c2\u6570","text":"<p><code>UPROPERTY</code> \u662f Unreal Engine \u4e2d\u7684\u4e00\u4e2a\u5b8f\uff0c\u7528\u4e8e\u5728 C++ \u4e2d\u58f0\u660e\u7c7b\u7684\u5c5e\u6027\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5728\u5f15\u64ce\u7684\u7f16\u8f91\u5668\u4e2d\u66b4\u9732\u8fd9\u4e9b\u5c5e\u6027\uff0c\u5e76\u63d0\u4f9b\u5e8f\u5217\u5316\u3001\u7f51\u7edc\u590d\u5236\u7b49\u529f\u80fd\u3002\u901a\u8fc7\u4f7f\u7528 <code>UPROPERTY</code>\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u7f16\u8f91\u5668\u4e2d\u8f7b\u677e\u5730\u4fee\u6539\u8fd9\u4e9b\u5c5e\u6027\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1\u4ee3\u7801\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u80fd\u786e\u4fdd\u5c5e\u6027\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\u7684\u6301\u4e45\u6027\u4ee5\u53ca\u5728\u591a\u73a9\u5bb6\u6e38\u620f\u4e2d\u7684\u6b63\u786e\u540c\u6b65\u3002</p> <p><code>UPROPERTY</code> \u5b8f\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff1a</p> <ol> <li>\u53ef\u89c1\u6027\u548c\u7f16\u8f91</li> <li><code>VisibleAnywhere</code>\uff1a\u5c5e\u6027\u5728\u5c5e\u6027\u7a97\u53e3\u4e2d\u53ef\u89c1\uff0c\u4f46\u4e0d\u53ef\u7f16\u8f91\u3002</li> <li><code>VisibleInstanceOnly</code>\uff1a\u53ea\u5728\u5b9e\u4f8b\u4e2d\u53ef\u89c1\u3002</li> <li><code>VisibleDefaultsOnly</code>\uff1a\u53ea\u5728\u9ed8\u8ba4\u503c\u4e2d\u53ef\u89c1\u3002</li> <li><code>EditAnywhere</code>\uff1a\u5c5e\u6027\u5728\u5c5e\u6027\u7a97\u53e3\u4e2d\u53ef\u89c1\u5e76\u4e14\u53ef\u7f16\u8f91\u3002</li> <li><code>EditInstanceOnly</code>\uff1a\u53ea\u5728\u5b9e\u4f8b\u4e2d\u53ef\u7f16\u8f91\u3002</li> <li><code>EditDefaultsOnly</code>\uff1a\u53ea\u5728\u9ed8\u8ba4\u503c\u4e2d\u53ef\u7f16\u8f91\u3002</li> <li>\u5206\u7c7b</li> <li><code>Category=\"\u5206\u7c7b\u540d\"</code>\uff1a\u6307\u5b9a\u5c5e\u6027\u5728\u7f16\u8f91\u5668\u4e2d\u7684\u5206\u7c7b\u3002</li> <li>\u7f51\u7edc</li> <li><code>Replicated</code>\uff1a\u4f7f\u5c5e\u6027\u5728\u7f51\u7edc\u6e38\u620f\u4e2d\u88ab\u590d\u5236\u3002</li> <li><code>ReplicatedUsing=\u51fd\u6570\u540d</code>\uff1a\u6307\u5b9a\u5f53\u5c5e\u6027\u901a\u8fc7\u7f51\u7edc\u66f4\u65b0\u65f6\u8981\u8c03\u7528\u7684\u51fd\u6570\u3002</li> <li>\u5e8f\u5217\u5316\u548c\u4fdd\u5b58</li> <li><code>Transient</code>\uff1a\u5c5e\u6027\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\uff0c\u6bcf\u6b21\u6e38\u620f\u542f\u52a8\u65f6\u90fd\u4f1a\u91cd\u7f6e\u3002</li> <li><code>BlueprintReadOnly</code>\uff1a\u5c5e\u6027\u5728\u84dd\u56fe\u4e2d\u53ea\u8bfb\u3002</li> <li><code>BlueprintReadWrite</code>\uff1a\u5c5e\u6027\u5728\u84dd\u56fe\u4e2d\u53ef\u8bfb\u5199\u3002</li> <li><code>SaveGame</code>\uff1a\u5c5e\u6027\u4f1a\u88ab\u5305\u542b\u5728\u4fdd\u5b58\u6e38\u620f\u6570\u636e\u4e2d\u3002</li> <li>\u9ad8\u7ea7</li> <li><code>AdvancedDisplay</code>\uff1a\u5c5e\u6027\u5728\u7f16\u8f91\u5668\u4e2d\u9ed8\u8ba4\u6298\u53e0\uff0c\u9700\u8981\u5c55\u5f00\u624d\u80fd\u770b\u5230\u3002</li> <li><code>NoClear</code>\uff1a\u5728\u7f16\u8f91\u5668\u4e2d\u963b\u6b62\u5c06\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u201c\u65e0\u201d\u6216\u201cnull\u201d\u3002</li> <li>\u5143\u6570\u636e</li> <li><code>meta=(\u5173\u952e\u5b57=\"\u503c\")</code>\uff1a\u4e3a\u5c5e\u6027\u63d0\u4f9b\u989d\u5916\u7684\u5143\u6570\u636e\uff0c\u5982\u5de5\u5177\u63d0\u793a\u3001\u8303\u56f4\u9650\u5236\u7b49\u3002</li> <li>\u6570\u7ec4\u76f8\u5173</li> <li><code>ArrayClamp=\u53d8\u91cf\u540d</code>\uff1a\u4f7f\u7528\u53e6\u4e00\u4e2a\u5c5e\u6027\u7684\u503c\u6765\u9650\u5236\u6570\u7ec4\u7684\u5927\u5c0f\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#catergory","title":"Catergory\u53c2\u6570","text":"Text Only<pre><code>    /** UPROPERTY\u7684Category\u7c7b\u578b\uff1a\n     * Input\uff08\u8f93\u5165\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u8f93\u5165\u4e8b\u4ef6\u3001\u63a7\u5236\u548c\u7528\u6237\u4ea4\u4e92\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u8f93\u5165\u52a8\u4f5c\u3001\u6309\u952e\u6620\u5c04\u7b49\u3002\n     * Movement\uff08\u79fb\u52a8\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u89d2\u8272\u3001\u7269\u4f53\u6216\u8005\u79fb\u52a8\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u901f\u5ea6\u3001\u65b9\u5411\u3001\u52a0\u901f\u5ea6\u7b49\u3002\n     * Combat\uff08\u6218\u6597\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u6218\u6597\u3001\u653b\u51fb\u3001\u4f24\u5bb3\u548c\u6b66\u5668\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u653b\u51fb\u529b\u3001\u751f\u547d\u503c\u3001\u4f24\u5bb3\u51fd\u6570\u7b49\u3002\n     * UI\uff08\u7528\u6237\u754c\u9762\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u7528\u6237\u754c\u9762\u3001HUD\uff08\u5934\u9876\u663e\u793a\uff09\u548c\u83dc\u5355\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u5206\u6570\u3001\u8ba1\u65f6\u5668\u3001\u6309\u94ae\u7b49\u3002\n     * Physics\uff08\u7269\u7406\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u7269\u7406\u6a21\u62df\u3001\u78b0\u649e\u68c0\u6d4b\u548c\u521a\u4f53\u52a8\u529b\u5b66\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u8d28\u91cf\u3001\u78b0\u649e\u6846\u3001\u529b\u548c\u91cd\u529b\u7b49\u3002\n     * Sound\uff08\u58f0\u97f3\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u58f0\u97f3\u6548\u679c\u3001\u97f3\u4e50\u3001\u97f3\u9891\u548c\u97f3\u6548\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u97f3\u9891\u526a\u8f91\u3001\u97f3\u91cf\u3001\u58f0\u97f3\u6548\u679c\u7b49\u3002\n     * Effects\uff08\u6548\u679c\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u89c6\u89c9\u6548\u679c\u3001\u7279\u6548\u548c\u7c92\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u7c92\u5b50\u6548\u679c\u3001\u5149\u7167\u3001\u6750\u8d28\u7b49\u3002\n     * Components\uff08\u7ec4\u4ef6\uff09\uff1a\u7528\u4e8e\u5305\u542b\u4e0e\u7c7b\u7684\u7ec4\u4ef6\u3001\u5b50\u5bf9\u8c61\u6216\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6210\u5458\uff0c\u4f8b\u5982\u6444\u50cf\u673a\u7ec4\u4ef6\u3001\u5149\u6e90\u7ec4\u4ef6\u3001\u78b0\u649e\u4f53\u7ec4\u4ef6\u7b49\u3002\n     * Debug\uff08\u8c03\u8bd5\uff09\uff1a\u7528\u4e8e\u5305\u542b\u7528\u4e8e\u8c03\u8bd5\u548c\u5f00\u53d1\u7684\u6210\u5458\uff0c\u4f8b\u5982\u65e5\u5fd7\u3001\u8c03\u8bd5\u6807\u5fd7\u3001\u6027\u80fd\u5206\u6790\u7b49\u3002\n     * Settings\uff08\u8bbe\u7f6e\uff09\uff1a\u7528\u4e8e\u5305\u542b\u7528\u4e8e\u914d\u7f6e\u6e38\u620f\u6216\u89d2\u8272\u7684\u8bbe\u7f6e\u548c\u9009\u9879\uff0c\u4f8b\u5982\u753b\u9762\u8bbe\u7f6e\u3001\u97f3\u6548\u8bbe\u7f6e\u3001\u63a7\u5236\u8bbe\u7f6e\u7b49\u3002\n     */\n</code></pre> <p>\u6bcf\u79cd <code>UPROPERTY</code> \u7c7b\u522b\u7684\u7b80\u5355\u573a\u666f\uff1a</p> <ol> <li>Input\uff08\u8f93\u5165\uff09</li> </ol> C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Input\")\nfloat TurnRate;\n\nvoid TurnAtRate(float Rate)\n{\n    // \u4f7f\u7528TurnRate\u6765\u5904\u7406\u89d2\u8272\u7684\u65cb\u8f6c\n    AddControllerYawInput(Rate * TurnRate * GetWorld()-&gt;GetDeltaSeconds());\n}\n</code></pre> <ol> <li> <p>Movement\uff08\u79fb\u52a8\uff09 C++<pre><code>UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=\"Movement\")\nFVector CurrentVelocity;\n\nvoid MoveForward(float Value)\n{\n    // \u66f4\u65b0CurrentVelocity\u57fa\u4e8e\u524d\u8fdb\u65b9\u5411\u548c\u8f93\u5165\u503c\n    FVector Direction = GetActorForwardVector();\n    CurrentVelocity = Direction * Value;\n}\n</code></pre></p> </li> <li> <p>Combat\uff08\u6218\u6597\uff09 C++<pre><code>UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category=\"Combat\")\nint Health;\n\nvoid ReceiveDamage(int DamageAmount)\n{\n    // \u6839\u636e\u53d7\u5230\u7684\u4f24\u5bb3\u51cf\u5c11Health\n    Health -= DamageAmount;\n}\n</code></pre></p> </li> <li> <p>UI\uff08\u7528\u6237\u754c\u9762\uff09 C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"UI\")\nFString PlayerName;\n\nvoid UpdatePlayerNameUI()\n{\n    // \u66f4\u65b0UI\u663e\u793a\u73a9\u5bb6\u540d\u5b57\n    MyPlayerHUD-&gt;SetPlayerNameText(PlayerName);\n}\n</code></pre></p> </li> <li> <p>Physics\uff08\u7269\u7406\uff09 C++<pre><code>UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=\"Physics\")\nfloat Mass;\n\nvoid CalculateForce(FVector Direction, float ForceMagnitude)\n{\n    // \u6839\u636e\u7269\u4f53\u7684\u8d28\u91cf\u8ba1\u7b97\u4f5c\u7528\u529b\n    FVector Force = Direction * ForceMagnitude / Mass;\n    AddForce(Force);\n}\n</code></pre></p> </li> <li> <p>Sound\uff08\u58f0\u97f3\uff09 C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Sound\")\nUSoundBase* FireSound;\n\nvoid PlayFireSound()\n{\n    // \u64ad\u653e\u5c04\u51fb\u58f0\u97f3\n    UGameplayStatics::PlaySoundAtLocation(this, FireSound, GetActorLocation());\n}\n</code></pre></p> </li> <li> <p>Effects\uff08\u6548\u679c\uff09 C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Effects\")\nUParticleSystem* ExplosionEffect;\n\nvoid TriggerExplosion()\n{\n    // \u89e6\u53d1\u7206\u70b8\u6548\u679c\n    UGameplayStatics::SpawnEmitterAtLocation(GetWorld(), ExplosionEffect, GetActorLocation());\n}\n</code></pre></p> </li> <li> <p>Components\uff08\u7ec4\u4ef6\uff09 C++<pre><code>UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=\"Components\")\nUCameraComponent* CameraComponent;\n\nvoid ZoomIn()\n{\n    // \u4f7f\u7528\u6444\u50cf\u673a\u7ec4\u4ef6\u8fdb\u884c\u7f29\u653e\n    CameraComponent-&gt;SetFieldOfView(45.0f);\n}\n</code></pre></p> </li> <li> <p>Debug\uff08\u8c03\u8bd5\uff09 C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Debug\")\nbool bShowDebugInfo;\n\nvoid ToggleDebugDisplay()\n{\n    // \u5207\u6362\u8c03\u8bd5\u4fe1\u606f\u7684\u663e\u793a\n    bShowDebugInfo = !bShowDebugInfo;\n}\n</code></pre></p> </li> <li> <p>Settings\uff08\u8bbe\u7f6e\uff09 C++<pre><code>UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=\"Settings\")\nfloat SoundVolume;\n\nvoid AdjustSoundVolume(float Volume)\n{\n    // \u6839\u636e\u7528\u6237\u8bbe\u7f6e\u8c03\u6574\u58f0\u97f3\u97f3\u91cf\n    SoundVolume = Volume;\n    AudioComponent-&gt;SetVolumeMultiplier(SoundVolume);\n}\n</code></pre></p> </li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#scharactercpp","title":"SCharacter.cpp","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_5","title":"\u5934\u6587\u4ef6","text":"C++<pre><code>#include \"SCharacter.h\"                                 // \u5305\u542b SCharacter \u7c7b\u7684\u5934\u6587\u4ef6\n\n#include \"GameFramework/SpringArmComponent.h\"           // \u5305\u542b\u5f39\u7c27\u81c2\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\n#include \"Camera/CameraComponent.h\"                     // \u5305\u542b\u6444\u50cf\u673a\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\n#include \"DrawDebugHelpers.h\"                           // \u5305\u542b\u8c03\u8bd5\u5e2e\u52a9\u51fd\u6570\u7684\u5934\u6587\u4ef6\n#include \"GameFramework/CharacterMovementComponent.h\"   // \u5305\u542b\u89d2\u8272\u79fb\u52a8\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\n#include \"SInteractionComponent.h\"                      // \u5305\u542b\u4ea4\u4e92\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\n#include \"SAttributeComponent.h\"                        // \u5305\u542b\u5c5e\u6027\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\n#include \"SActionComponent.h\"                           // \u5305\u542b\u52a8\u4f5c\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\n#include \"Components/CapsuleComponent.h\"                // \u5305\u542b\u80f6\u56ca\u78b0\u649e\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\n#include \"SharedGameplayTags.h\"                         // \u5305\u542b\u5171\u4eab\u6e38\u620f\u6807\u7b7e\u7684\u5934\u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\n\n// Enhanced Input\n#include \"EnhancedInputComponent.h\"                     // \u5305\u542b\u589e\u5f3a\u8f93\u5165\u7ec4\u4ef6\u7684\u5934\u6587\u4ef6\n#include \"EnhancedInputSubsystems.h\"                    // \u5305\u542b\u589e\u5f3a\u8f93\u5165\u5b50\u7cfb\u7edf\u7684\u5934\u6587\u4ef6\n#include \"SPlayerController.h\"                          // \u5305\u542b SPlayerController \u7c7b\u7684\u5934\u6587\u4ef6\uff0c\u81ea\u5b9a\u4e49\n\n#include UE_INLINE_GENERATED_CPP_BY_NAME(SCharacter)    // \u5c06\u7c7b\u7684\u5b9e\u73b0\u5d4c\u5165\u5230\u5934\u6587\u4ef6\u4e2d\uff0c\u63d0\u5347\u7f16\u8bd1\u901f\u5ea6\n</code></pre>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#_6","title":"\u6784\u9020\u51fd\u6570","text":"<p>\u89d2\u8272\u7684\u6784\u9020\u51fd\u6570\u662f\u5728\u521b\u5efa\u89d2\u8272\u5bf9\u8c61\u65f6\u9996\u5148\u88ab\u8c03\u7528\u7684\u51fd\u6570\uff0c\u5b83\u7528\u4e8e\u8fdb\u884c\u89d2\u8272\u5bf9\u8c61\u7684\u57fa\u672c\u521d\u59cb\u5316\u5de5\u4f5c\u3002\u901a\u5e38\uff0c\u89d2\u8272\u7684\u6784\u9020\u51fd\u6570\u4f1a\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a</p> <ol> <li>\u7ec4\u4ef6\u7684\u521b\u5efa\u548c\u521d\u59cb\u5316\uff1a \u521b\u5efa\u5e76\u521d\u59cb\u5316\u89d2\u8272\u6240\u9700\u7684\u7ec4\u4ef6\uff0c\u4f8b\u5982\u6444\u50cf\u673a\u7ec4\u4ef6\u3001\u78b0\u649e\u7ec4\u4ef6\u3001\u52a8\u753b\u7ec4\u4ef6\u7b49\u3002</li> <li>\u5c5e\u6027\u548c\u72b6\u6001\u7684\u8bbe\u7f6e\uff1a \u521d\u59cb\u5316\u89d2\u8272\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u751f\u547d\u503c\u3001\u80fd\u91cf\u3001\u901f\u5ea6\u7b49\u3002</li> <li>\u7ed1\u5b9a\u8f93\u5165\u548c\u52a8\u4f5c\uff1a \u7ed1\u5b9a\u8f93\u5165\u548c\u52a8\u4f5c\u4e8b\u4ef6\u3002  </li> <li>\u52a0\u8f7d\u8d44\u6e90\u548c\u8bbe\u7f6e\u5916\u89c2\uff1a \u52a0\u8f7d\u6e38\u620f\u8d44\u6e90\uff0c\u4f8b\u5982\u6a21\u578b\u3001\u7eb9\u7406\u3001\u58f0\u97f3\u7b49\u3002</li> <li>\u521d\u59cb\u5316\u6e38\u620f\u903b\u8f91\uff1a \u521d\u59cb\u5316\u4e2d\u8bbe\u7f6e\u548c\u542f\u52a8\u7279\u5b9a\u7684\u6e38\u620f\u903b\u8f91\u6216\u884c\u4e3a\u3002</li> <li>\u4e0e\u5176\u4ed6\u7cfb\u7edf\u7684\u4ea4\u4e92\uff1a \u4e0e\u5176\u4ed6\u6e38\u620f\u7cfb\u7edf\u7684\u8fde\u63a5\u548c\u914d\u7f6e\u3002</li> </ol> C++<pre><code>ASCharacter::ASCharacter()\n{\n    // \u542f\u7528\u89d2\u8272\u7684\u4e3b\u5faa\u73af\uff08Tick\uff09\u529f\u80fd\uff0c\u4f7f\u5176\u53ef\u4ee5\u5728\u6bcf\u4e00\u5e27\u4e2d\u6267\u884c\u903b\u8f91\n    PrimaryActorTick.bCanEverTick = true;\n\n    // \u521b\u5efa\u5e76\u521d\u59cb\u5316 SpringArm \u7ec4\u4ef6\n    SpringArmComp = CreateDefaultSubobject&lt;USpringArmComponent&gt;(\"SpringArmComp\");   \n                                                    // CreateDefaultSubobject \u7528\u4e8e\u5728\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\u548c\u521d\u59cb\u5316\u9ed8\u8ba4\u5b50\u5bf9\u8c61\u3002\n    SpringArmComp-&gt;bUsePawnControlRotation = true;  // \u662f\u5426\u8ddf\u968f\u89d2\u8272\u65cb\u8f6c\n    SpringArmComp-&gt;SetupAttachment(RootComponent);  // SetupAttachment \u901a\u5e38\u7528\u4e8e\u5c06\u4e00\u4e2a\u7ec4\u4ef6\u9644\u52a0\uff08\u8fde\u63a5\uff09\u5230\u53e6\u4e00\u4e2a\u7ec4\u4ef6\u4e0a\uff0c\u4ee5\u6784\u5efa\u6e38\u620f\u5bf9\u8c61\u7684\u5c42\u6b21\u7ed3\u6784\n    SpringArmComp-&gt;SetUsingAbsoluteRotation(true);  // \u4f7f\u7528\u7edd\u5bf9\u65cb\u8f6c\uff0c\u800c\u4e0d\u53d7\u89d2\u8272\u65cb\u8f6c\u7684\u5f71\u54cd\n                                                    // \u5f39\u7c27\u81c2\u7684\u9009\u62e9\u5df2\u7ecf\u901a\u8fc7bUsePawnControlRotation\u8bbe\u7f6e\u4e3a\u89d2\u8272\u8ddf\u968f\n                                                    // \u4f46\u662f\uff0c\u89d2\u8272\u7684 CapsuleComponent \u65cb\u8f6c\u65f6\uff0c\u8fd9\u79cd\u65cb\u8f6c\u4f1a\u6682\u65f6\u5f71\u54cd\u5f39\u7c27\u81c2\uff0c\u76f4\u5230\u7a0d\u540e\u81ea\u6211\u7ea0\u6b63\n                                                    // \u7981\u7528\u76f8\u5bf9\u65cb\u8f6c\uff0c\u4ee5\u4fdd\u8bc1\u72b6\u6001\u7a33\u5b9a\n\n    // \u521b\u5efa\u5e76\u521d\u59cb\u5316 Camera \u7ec4\u4ef6\uff0c\u5c06\u5176\u9644\u52a0\u5230 SpringArm\n    CameraComp = CreateDefaultSubobject&lt;UCameraComponent&gt;(\"CameraComp\");\n    CameraComp-&gt;SetupAttachment(SpringArmComp);\n\n    // \u521b\u5efa\u5e76\u521d\u59cb\u5316 Interaction \u7ec4\u4ef6\n    InteractionComp = CreateDefaultSubobject&lt;USInteractionComponent&gt;(\"InteractionComp\");\n\n    // \u521b\u5efa\u5e76\u521d\u59cb\u5316 Attribute \u7ec4\u4ef6\n    AttributeComp = CreateDefaultSubobject&lt;USAttributeComponent&gt;(\"AttributeComp\");\n\n    // \u521b\u5efa\u5e76\u521d\u59cb\u5316 Action \u7ec4\u4ef6\n    ActionComp = CreateDefaultSubobject&lt;USActionComponent&gt;(\"ActionComp\");\n\n    // \u8bbe\u7f6e\u89d2\u8272\u7684\u79fb\u52a8\u884c\u4e3a\uff1a\u4f7f\u89d2\u8272\u671d\u5411\u79fb\u52a8\u65b9\u5411\uff0c\u5e76\u7981\u7528\u89d2\u8272\u63a7\u5236\u5668\u7684\u65cb\u8f6c\n    GetCharacterMovement()-&gt;bOrientRotationToMovement = true;   // \u89d2\u8272\u79fb\u52a8\u65f6\u81ea\u52a8\u671d\u5411\u79fb\u52a8\u65b9\u5411\n    bUseControllerRotationYaw = false;                          // \u7981\u7528\u63a7\u5236\u5668\u65cb\u8f6c\u5bf9\u89d2\u8272\u504f\u822a\u65b9\u5411\u7684\u63a7\u5236\n\n    // \u5728\u52a8\u753b\u5b8c\u6210\u540e\u7981\u7528 Physics Asset \u4e0a\u7684\u91cd\u53e0\u67e5\u8be2\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\n    GetMesh()-&gt;bUpdateOverlapsOnAnimationFinalize = false;\n\n    // \u5141\u8bb8\u89d2\u8272\u7684 Mesh \u5bf9\u8c61\u54cd\u5e94\u8fdb\u5165\u7684\u6295\u5c04\u7269\u7b49\n    GetMesh()-&gt;SetGenerateOverlapEvents(true);\n\n    // \u5728\u80f6\u56ca\u78b0\u649e\u4f53\u4e0a\u7981\u7528\u91cd\u53e0\u67e5\u8be2\uff0c\u907f\u514d\u91cd\u53e0\u67e5\u8be2\u7684\u91cd\u590d\n    GetCapsuleComponent()-&gt;SetGenerateOverlapEvents(false);\n\n    // \u8bbe\u7f6e HitFlash_CustomPrimitiveIndex \u521d\u59cb\u503c\u4e3a 0\n    HitFlash_CustomPrimitiveIndex = 0;\n}\n</code></pre>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Character%E5%88%9B%E5%BB%BA/#postinitializecomponents","title":"PostInitializeComponents","text":"<p><code>PostInitializeComponents</code> \u662f Unreal Engine \u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u865a\u62df\u51fd\u6570\uff0c\u5b83\u5c5e\u4e8e <code>AActor</code> \u7c7b\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u4e2a\u51fd\u6570\u901a\u5e38\u7528\u4e8e\u5728\u89d2\u8272\uff08\u6216\u8005\u5176\u4ed6\u7ee7\u627f\u81ea <code>AActor</code> \u7684\u7c7b\uff09\u7684\u7ec4\u4ef6\u521d\u59cb\u5316\u5b8c\u6210\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u3002</p> C++<pre><code>void ASCharacter::PostInitializeComponents()\n{\n    Super::PostInitializeComponents();                  //\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570 Super::PostInitializeComponents()\n\n    AttributeComp-&gt;OnHealthChanged.AddDynamic(this, &amp;ASCharacter::OnHealthChanged);     //\u52a8\u6001\u6dfb\u52a0\u4e8b\u4ef6\u7ed1\u5b9a\n}\n</code></pre>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"Unreal Engine \u73af\u5883\u642d\u5efa\u6307\u5357","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_1","title":"\u80cc\u666f","text":"<p>\u73af\u5883\u642d\u5efa\u4e00\u76f4\u90fd\u662f\u4e00\u4e2a\u5341\u5206\u607c\u4eba\u7684\u95ee\u9898\u3002\u5c24\u5176\u662f\u5b98\u7f51\u6587\u6863\u5199\u7684\u4e0d\u591f\u8be6\u7ec6\uff0c\u53c8\u5f88\u96be\u627e\u5230\u6559\u7a0b\u7684\u60c5\u51b5\u4e0b\u3002\u672c\u6587\u5c06\u6307\u5bfcUnreal Engine 5.3\u7684\u73af\u5883\u642d\u5efa\uff0c\u5343\u91cc\u4e4b\u884c\u59cb\u4e8e\u8db3\u4e0b\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_2","title":"\u8f6f\u4ef6\u4e0b\u8f7d","text":"<p>Windows\u4e0b\u8f7dvisualstudio\uff0c\u672c\u6587\u662f2022\u7684\u7248\u672c\u3002</p> <p>Mac\u4e0b\u8f7dXcode\uff0c\u76f4\u63a5\u901a\u8fc7App Store\u4e0b\u8f7d\u3002</p> <p>Unreal\u662f\u4e00\u6b3e\u901a\u8fc7C++\u7f16\u8bd1\u4e0e\u7a0b\u5e8f\u7f16\u5199\u7684\u6e38\u620f\u5f15\u64ce\uff0c\u56e0\u6b64\u9700\u8981C++\u7f16\u8bd1\u5668\u3002\u666e\u904d\u6765\u8bf4\uff0c\u5728Windows\u7cfb\u7edf\u4e2d\uff0c\u5e38\u7528\u7684C++\u7f16\u8bd1\u65b9\u5f0f\u5305\u62ecVisual Studio\u548cmingw\uff0c\u4f46Unreal Engine\u53ea\u652f\u6301\u524d\u8005\u3002\u5bf9\u4e8eMac\u7528\u6237\uff0cXcode\u662f\u552f\u4e00\u7684\u9009\u62e9\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#ide","title":"IDE\u9009\u62e9","text":"<p>\u672c\u6587\u9009\u62e9Rider\u4f5c\u4e3aIDE\u3002</p> <p>\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528VS\u6216\u8005Xcode\uff0c\u751a\u81f3\u53ef\u4ee5\u914d\u7f6eVSCode\u3002\u4f46\u662f\u6211\u9009\u62e9\u4e86Rider\uff0c\u5b9e\u9645\u4f53\u9a8c\u4e0d\u4ec5\u597d\u7528\uff0c\u8de8\u5e73\u53f0\u4f53\u9a8c\u4e5f\u5f88\u597d\uff0c\u8fdb\u884c\u76f8\u540c\u7684\u914d\u7f6e\u5373\u53ef\u3002</p> <p>\u514d\u8d23\u8bf4\u660e\uff1a</p> <p>\u672c\u6587\u4ec5\u4f9b\u5b66\u4e60\u4f7f\u7528\uff0c\u5207\u52ff\u8fdb\u884c\u4efb\u4f55\u5546\u4e1a\u7528\u9014\uff01</p> <p>\u5982\u679c\u6709\u8d44\u91d1\uff0c\u8bf7\u4e00\u5b9a\u8d2d\u4e70\u6b63\u7248\uff01</p> <p>\u5b66\u4e60\u7248</p> <p>\u622a\u6b62\u76ee\u524d\uff0c\u5b66\u4e60\u7248\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u5df2\u7ecf\u6302\u6389\u7684github\u4ed3\u5e93\u7834\u89e3\uff1a</p> <p>1\u3001\u6253\u5f00\u7f51\u5740\uff1ahttps://3.jetbra.in\uff0c\u8fd9\u91cc\u4f1a\u68c0\u7d22\u53ef\u8bbf\u95ee\u7684\u7834\u89e3\u5bc6\u94a5\u5730\u5740\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u8fdb\u53bb\u5373\u53ef\u3002</p> <p>2\u3001\u4e0b\u8f7d\u7834\u89e3\u6587\u4ef6\uff1ajetbra.zip\u3002</p> <p>3\u3001\u89e3\u538b\u5230\u67d0\u4e2a\u4f4d\u7f6e\u3002</p> <p>4\u3001\u5bf9\u4e8eWindows\uff0c\u76f4\u63a5\u6267\u884cjetbra/script/install-all-users.vbs\u5373\u53ef\uff1b</p> <p>5\u3001\u5bf9\u4e8eMac\uff0c\u7ec8\u7aef\u8fd0\u884csudo sh install.sh\u3002\u7ecf\u6211\u6d4b\u8bd5mac\u8fd8\u9700\u8981\u5728\u6267\u884c\u540e\uff0c\u5c06jetbra/vmoptions/rider.vmoptions\u62f7\u8d1d\u5230rider\u7684\u76ee\u5f55\u53bb\uff0c\u5982\uff1a~/Library/Application Support/JetBrains/Rider2023.2/\uff0c\u5176\u4ed6jetbrain\u7684\u5b66\u4e60\u7248\u7406\u8bba\u4e0a\u540c\u7406\u3002</p> <p>5\u3001\u62f7\u8d1d\u521a\u521a\u5bc6\u94a5\u5730\u5740\u7684\u5bc6\u94a5\uff0c\u8f93\u5165\u5230Rider\u6fc0\u6d3b\u65f6\u5230Activation Code\u91cc\u53bb\u3002</p> <p>6\u3001\u6fc0\u6d3b\u6210\u529f\u3002</p>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#character","title":"\u9879\u76ee\u7f16\u8bd1\u9a8c\u8bc1\u2014\u2014\u521b\u5efaCharacter\u5e76\u6dfb\u52a0\u6444\u50cf\u673a","text":""},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_3","title":"\u5b89\u88c5\u548c\u521d\u59cb\u5316","text":"<ol> <li>\u5b89\u88c5Epic Games Launcher\u548cUnreal Engine\uff1a</li> <li>\u4e0b\u8f7d\u5e76\u5b89\u88c5Epic Games Launcher\u3002</li> <li>\u901a\u8fc7Launcher\u5b89\u88c5Unreal Engine\u3002\u672c\u6559\u7a0b\u4ee55.3\u7248\u672c\u4e3a\u4f8b\u3002</li> <li>\u521b\u5efa\u65b0\u9879\u76ee\uff1a</li> <li>\u542f\u52a8Unreal Engine\uff0c\u9009\u62e9\u201c\u521b\u5efa\u7a7a\u767d\u9879\u76ee\u201d\u3002</li> <li>\u4e3a\u9879\u76ee\u547d\u540d\u65f6\u907f\u514d\u4f7f\u7528\u201ctest\u201d\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u4fdd\u7559\u5173\u952e\u5b57\uff0c\u53ef\u80fd\u5bfc\u81f4\u7f16\u8bd1\u9519\u8bef\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#c","title":"\u8bbe\u7f6eC++\u7c7b","text":"<ol> <li>\u521b\u5efaC++ Character\u7c7b\uff1a</li> <li>\u5728\u9879\u76ee\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684C++\u7c7b\u3002</li> <li>\u9009\u62e9\u201c\u89d2\u8272\uff08Character\uff09\u201d\u4f5c\u4e3a\u7236\u7c7b\u3002</li> <li>\u5c06\u7c7b\u547d\u540d\u4e3a\u201cMyCharacter\u201d\u3002</li> <li>\u6dfb\u52a0\u84dd\u56fe\u7c7b\uff1a</li> <li>\u5728\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u84dd\u56fe\u7c7b\u3002</li> <li>\u9009\u62e9\u521a\u521b\u5efa\u7684\u201cMyCharacter\u201d\u4f5c\u4e3a\u7236\u7c7b\u3002</li> <li>\u5c06\u84dd\u56fe\u7c7b\u547d\u540d\u4e3a\u201cPlayerCharacter\u201d\uff0c\u5e76\u4fdd\u5b58\u3002</li> <li>\u914d\u7f6e\u573a\u666f\uff1a</li> <li>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u767d\u573a\u666f\u3002</li> <li>\u5c06\u201cPlayerCharacter\u201d\u84dd\u56fe\u62d6\u62fd\u5230\u573a\u666f\u4e2d\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_4","title":"\u7f16\u5199\u548c\u914d\u7f6e\u4ee3\u7801","text":"<ol> <li>\u5728MyCharacter.h\u4e2d\u6dfb\u52a0\u6444\u50cf\u673a\u652f\u6301\uff1a</li> </ol> C++<pre><code>#include ...\nclass UCameraComponent;\nclass USpringArmComponent;\n\nUCLASS()\n...\n\nprotected:\n // Called when the game starts or when spawned\n virtual void BeginPlay() override;\n UCameraComponent *CameraComp;\n USpringArmComponent *SpringArmComp;\n\n...\n</code></pre> <ol> <li>\u5728MyCharacter.cpp\u4e2d\u521d\u59cb\u5316\u6444\u50cf\u673a\u7ec4\u4ef6\uff1a</li> </ol> C++<pre><code>#include \"FirstCharacter.h\"\n\n#include \"Camera/CameraComponent.h\"\n#include \"GameFramework/SpringArmComponent.h\"\n\n// Sets default values\nAFirstCharacter::AFirstCharacter()\n{\n     // Set this character to call Tick() every frame.  You can turn this off to improve performance if you don't need it.\n PrimaryActorTick.bCanEverTick = true;\n CameraComp = CreateDefaultSubobject&lt;UCameraComponent&gt;(\"CameraComp\");\n SpringArmComp = CreateDefaultSubobject&lt;USpringArmComponent&gt;(\"SpringArmComp\");\n\n}\n...\n</code></pre> <ol> <li> <p>\u7f16\u8bd1\u5e76\u9a8c\u8bc1\uff1a</p> </li> <li> <p>\u5728Rider\u4e2d\uff0c\u70b9\u51fb\u5de5\u5177\u680f\u4e2d\u7684\u201cBuild and Reload\u201d\u9524\u5b50\u56fe\u6807\u3002</p> </li> <li>\u5207\u6362\u56deUnreal Editor\uff0c\u9009\u62e9\u521a\u624d\u7684\u84dd\u56fe\u7c7b\u3002</li> <li>\u5982\u679c\u573a\u666f\u4e2d\u51fa\u73b0\u4e86\u6444\u50cf\u673a\u89c6\u56fe\uff0c\u5219\u8868\u793a\u4ee3\u7801\u7f16\u8bd1\u6210\u529f\uff0c\u73af\u5883\u642d\u5efa\u5b8c\u6210\u3002</li> </ol>"},{"location":"%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/UnrealEngine/Unreal%20Engine%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#_5","title":"\u547d\u540d\u89c4\u8303","text":"<ul> <li> <p>\u6240\u6709\u4ee3\u7801\u548c\u6ce8\u91ca\u90fd\u5e94\u91c7\u7528\u7f8e\u5f0f\u6807\u51c6\u82f1\u8bed\u7684\u62fc\u5199\u548c\u8bed\u6cd5\u3002</p> </li> <li> <p>\u547d\u540d\uff08\u5982\u7c7b\u578b\u6216\u53d8\u91cf\uff09\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\u9700\u5927\u5199\u9996\u5b57\u6bcd\uff0c\u5355\u8bcd\u95f4\u901a\u5e38\u65e0\u4e0b\u5212\u7ebf\u3002\u4f8b\u5982\uff1a<code>Health</code> \u548c <code>UPrimitiveComponent</code>\uff0c\u800c\u975e <code>lastMouseCoordinates</code> \u6216 <code>delta_coordinates</code>\u3002</p> </li> <li> <p>\u7c7b\u578b\u540d\u524d\u7f00\u9700\u4f7f\u7528\u989d\u5916\u7684\u5927\u5199\u5b57\u6bcd\uff0c\u7528\u4e8e\u533a\u5206\u5176\u548c\u53d8\u91cf\u547d\u540d\u3002\u4f8b\u5982\uff1a<code>FSkin</code> \u4e3a\u7c7b\u578b\u540d\uff0c\u800c <code>Skin</code> \u5219\u662f <code>FSkin</code> \u7684\u5b9e\u4f8b\u3002</p> </li> <li> <p>\u6a21\u677f\u7c7b\u7684\u524d\u7f00\u4e3aT\u3002</p> </li> <li> <p>\u7ee7\u627f\u81ea <code>UObject</code> \u7684\u7c7b\u524d\u7f00\u4e3aU\u3002</p> </li> <li> <p>\u7ee7\u627f\u81ea <code>AActor</code> \u7684\u7c7b\u524d\u7f00\u4e3aA\u3002</p> </li> <li> <p>\u7ee7\u627f\u81ea <code>SWidget</code> \u7684\u7c7b\u524d\u7f00\u4e3aS\u3002</p> </li> <li> <p>\u62bd\u8c61\u754c\u9762\u7c7b\u7684\u524d\u7f00\u4e3aI\u3002</p> </li> <li> <p>\u5217\u4e3e\u7684\u524d\u7f00\u4e3aE\u3002</p> </li> <li> <p>\u5e03\u5c14\u53d8\u91cf\u5fc5\u987b\u4ee5b\u4e3a\u524d\u7f00\uff08\u4f8b\u5982 <code>bPendingDestruction</code> \u6216 <code>bHasFadedIn</code>\uff09\u3002</p> </li> <li> <p>\u5176\u4ed6\u591a\u6570\u7c7b\u5747\u4ee5F\u4e3a\u524d\u7f00\uff0c\u800c\u90e8\u5206\u5b50\u7cfb\u7edf\u5219\u4ee5\u5176\u4ed6\u5b57\u6bcd\u4e3a\u524d\u7f00\u3002</p> </li> <li> <p>Typedefs\u5e94\u4ee5\u4efb\u4f55\u4e0e\u5176\u7c7b\u578b\u76f8\u7b26\u7684\u5b57\u6bcd\u4e3a\u524d\u7f00\uff1a\u82e5\u4e3a\u7ed3\u6784\u4f53\u7684Typedefs\uff0c\u5219\u4f7f\u7528F\uff1b\u82e5\u4e3a <code>Uobject</code> \u7684Typedefs\uff0c\u5219\u4f7f\u7528U\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <ul> <li>\u7279\u522b\u6a21\u677f\u5b9e\u4f8b\u5316\u7684Typedef\u4e0d\u518d\u662f\u6a21\u677f\uff0c\u5e76\u5e94\u52a0\u4e0a\u76f8\u5e94\u524d\u7f00\uff0c\u4f8b\u5982\uff1a</li> </ul> Text Only<pre><code>typedef TArray&lt;FMytype&gt; FArrayOfMyTypes;\n</code></pre> </li> <li> <p>C#\u4e2d\u7701\u7565\u524d\u7f00\u3002</p> </li> <li> <p>\u591a\u6570\u60c5\u51b5\u4e0b\uff0cUnrealHeaderTool\u9700\u8981\u6b63\u786e\u7684\u524d\u7f00\uff0c\u56e0\u6b64\u6dfb\u52a0\u524d\u7f00\u81f3\u5173\u91cd\u8981\u3002</p> </li> <li> <p>\u7c7b\u578b\u548c\u53d8\u91cf\u7684\u547d\u540d\u4e3a\u540d\u8bcd\u3002</p> </li> <li> <p>\u65b9\u6cd5\u540d\u662f\u52a8\u8bcd\uff0c\u4ee5\u63cf\u8ff0\u65b9\u6cd5\u7684\u6548\u679c\u6216\u672a\u88ab\u65b9\u6cd5\u5f71\u54cd\u7684\u8fd4\u56de\u503c\u3002</p> </li> </ul>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/","title":"\u7b2c\u4e09\u65b9\u8bfb\u7269","text":"<p>\u5206\u4eab\u6709\u4ef7\u503c\u7684\u7b2c\u4e09\u65b9\u8bfb\u7269</p> <p>CSS \u52a8\u753b\u5165\u95e8\u79d8\u7c4d</p> <p>\u8ddf\u6211\u4e00\u8d77\u5199Makefile</p> <p>NSIS \u4ece\u5165\u95e8\u5230\u7f16\u5199\u5b8c\u6574\u6253\u5305\u811a\u672c</p> <p>\u4ece\u5934\u5f00\u59cb\u7684llama3\u6559\u7a0b</p> <p>\u5b89\u5353\u6027\u80fd\u5206\u6790\u5de5\u5177Simpleperf\u8be6\u89e3\u4e0e\u5e94\u7528</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/","title":"C++","text":"<p>concurrentqueue\uff1a\u9ad8\u6027\u80fd\u65e0\u9501\u5e76\u53d1\u961f\u5217</p> <p>spdlog\uff1a\u9ad8\u6027\u80fdLog\u5e93</p> <p>xxHash\uff1a\u9ad8\u6027\u80fd\u54c8\u5e0c\u7b97\u6cd5</p> <p>googletest\uff1aC++\u6d4b\u8bd5\u6846\u67b6</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#python","title":"Python","text":"<p>rich\uff1a\u597d\u770b\u7684\u63a7\u5236\u53f0\u8f93\u51fa</p> <p>fastapi\uff1a\u5feb\u901f\u7684\u524d\u540e\u7aef\u63a5\u53e3</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#javascript","title":"JavaScript","text":"<p>uppy\uff1a\u6587\u4ef6\u4e0a\u4f20\u7cfb\u7edf</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#ml","title":"ML","text":"<p>LLaMA-Factory\uff1a\u8bed\u8a00\u5fae\u8c03\u811a\u672c</p> <p>ollama\uff1a\u8bed\u8a00\u6a21\u578b\u63d0\u4f9b</p> <p>LangChain \uff1a\u8bed\u8a00\u6a21\u578b\u6846\u67b6</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#unity","title":"Unity","text":"<p>UniversalRenderingExamples\uff1a\u6e32\u67d3demo</p> <p>Skinner\uff1a\u7279\u6b8aMesh\u6548\u679c</p> <p>crest\uff1a\u6c34\u7cfb\u7edf</p> <p>LearnUnityShader\uff1a\u4e00\u4e9bUnity Shader demo</p> <p>UnityURPToonLitShaderExample\uff1a\u4e8c\u6b21\u5143\u6e32\u67d3</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#ue","title":"UE","text":"<p>GASDocumentation\uff1aRPG\u80fd\u529b\u7cfb\u7edf</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E5%AE%9E%E7%94%A8%E7%9A%84Github%E4%BB%93/#_1","title":"\u5de5\u5177","text":"<p>xiaoju-survey\uff1a\u5feb\u901f\u95ee\u5377\u7cfb\u7edf</p> <p>ghidra\uff1a\u7f8e\u56fd\u56fd\u5b89\u5c40\u5f00\u6e90\u7684\u9006\u5411\u5206\u6790\u5e93</p> <p>scrcpy\uff1a\u63a7\u5236\u5b89\u5353\u8bbe\u5907</p> <p>frp\uff1a\u5185\u7f51\u7a7f\u900f\u5de5\u5177</p> <p>python-miio\uff1a\u57fa\u4e8ePython\u7684\u5c0f\u7c73\u7269\u8054\u7f51\u63a7\u5236</p>"},{"location":"%E7%AC%AC%E4%B8%89%E6%96%B9%E8%AF%BB%E7%89%A9/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/llama.cpp/CMakeList/","title":"CMakeList","text":"<p>\u8bbe\u7f6ecmake\u7248\u672c\u4e0e\u9879\u76ee</p> CMake<pre><code>cmake_minimum_required(VERSION 3.14)    # for add_link_options and implicit target directories.\nproject(\"llama.cpp\" C CXX)\ninclude(CheckIncludeFileCXX)            # \u68c0\u67e5\u662f\u5426\u5305\u542b\u5934\u6587\u4ef6\n</code></pre> <p>\u7f16\u8bd1\u914d\u7f6e</p> CMake<pre><code>set(CMAKE_EXPORT_COMPILE_COMMANDS ON)   # \u7f16\u8bd1\u8fc7\u7a0b\u751f\u6210 compile_commands.json\n</code></pre> <p>\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u4e00\u4e9b\u5de5\u5177\u7684\u4ee3\u7801\u8df3\u8f6c\u3001\u8865\u5168\u7b49\u529f\u80fd\u3002</p> <p>\u8bbe\u7f6e\u6784\u5efa\u7c7b\u578b</p> CMake<pre><code>if (NOT XCODE AND NOT MSVC AND NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type\" FORCE)\n    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS \"Debug\" \"Release\" \"MinSizeRel\" \"RelWithDebInfo\")\nendif()\n</code></pre> <p><code>set(CMAKE_BUILD_TYPE Release)</code>\uff1a\u5c06<code>CMAKE_BUILD_TYPE</code>\u8bbe\u7f6e\u4e3a\"Release\"\u3002</p> <p><code>CACHE STRING \"Build type\"</code>\uff1a\u5c06\u6784\u5efa\u7c7b\u578b\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7f13\u5b58\u53d8\u91cf\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63cf\u8ff0\u6027\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u5982\u679c\u6ca1\u6709<code>XCODE</code>\u3001<code>MSVC</code>\u548c<code>CMAKE_BUILD_TYPE</code>\u914d\u7f6e\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u6784\u5efa\u914d\u7f6e\u6784\u5efa\u7c7b\u578b\uff08Build Type\uff09\uff1a\u9ed8\u8ba4Release\uff0c\u53ef\u9009Debug\u3001Release\u3001MinSizeRel\u3001RelWithDebInfo\u3002</p> <p>CMake\u63d0\u4f9b\u4e86\u51e0\u79cd\u9ed8\u8ba4\u7684\u6784\u5efa\u7c7b\u578b\uff1a</p> <ul> <li>Debug\uff1a\u6ca1\u6709\u4f18\u5316\u5e76\u9644\u5e26\u5b8c\u6574\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u901a\u5e38\u5728\u5f00\u53d1\u548c\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u3002</li> <li>Release\uff1a\u6ca1\u6709\u8c03\u8bd5\u4fe1\u606f\uff0c\u63d0\u4f9b\u5168\u9762\u7684\u901f\u5ea6\u4f18\u5316\u3002</li> <li>RelWithDebInfo\uff1a\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u662f\u524d\u4e24\u8005\u7684\u59a5\u534f\uff0c\u5b83\u7684\u76ee\u7684\u662f\u4f7f\u6027\u80fd\u63a5\u8fd1\u4e8e\u53d1\u5e03\u7248\uff0c\u4f46\u4ecd\u5141\u8bb8\u67d0\u79cd\u7a0b\u5ea6\u7684\u8c03\u8bd5\u3002\u901a\u5e38\u4f1a\u5bf9\u901f\u5ea6\u8fdb\u884c\u5927\u90e8\u5206\u4f18\u5316\uff0c\u4f46\u4e5f\u4f1a\u542f\u7528\u5927\u90e8\u5206\u8c03\u8bd5\u529f\u80fd\u3002\u9ed8\u8ba4\u7981\u7528\u65ad\u8a00\u3002</li> <li>MinSizeRel\uff1a\u901a\u5e38\u53ea\u7528\u4e8e\u6709\u9650\u7684\u8d44\u6e90\u73af\u5883\uff0c\u5982\u5d4c\u5165\u5f0f\u8bbe\u5907\u3002\u4ee3\u7801\u662f\u9488\u5bf9\u5927\u5c0f\u800c\u4e0d\u662f\u901f\u5ea6\u8fdb\u884c\u4f18\u5316\u7684\uff0c\u5e76\u4e14\u4e0d\u521b\u5efa\u8c03\u8bd5\u4fe1\u606f\u3002</li> </ul> <p>\u53d8\u91cf\u8d4b\u503c</p> CMake<pre><code>set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n</code></pre> CMake<pre><code>if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)\n    set(LLAMA_STANDALONE ON)\n\n    # configure project version\n    # TODO\nelse()\n    set(LLAMA_STANDALONE OFF)\nendif()\n</code></pre> CMake<pre><code>if (EMSCRIPTEN)\n    set(BUILD_SHARED_LIBS_DEFAULT OFF)\n\n    option(LLAMA_WASM_SINGLE_FILE \"llama: embed WASM inside the generated llama.js\" ON)\nelse()\n    if (MINGW)\n        set(BUILD_SHARED_LIBS_DEFAULT OFF)\n    else()\n        set(BUILD_SHARED_LIBS_DEFAULT ON)\n    endif()\nendif()\n</code></pre> CMake<pre><code>#\n# Option list\n#\n\nif (APPLE)\n    set(LLAMA_METAL_DEFAULT ON)\nelse()\n    set(LLAMA_METAL_DEFAULT OFF)\nendif()\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","title":"22\u79cd\u8bbe\u8ba1\u6a21\u5f0f","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_1","title":"\u80cc\u666f","text":"<p>\u5f00\u53d1\u3001\u8003\u8bd5\u3001\u8bfb\u4ee3\u7801\uff0c\u90fd\u4f1a\u63a5\u89e6\u5230\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u8bbe\u8ba1\u6a21\u5f0f\uff08design pattern\uff09\u662f\u5bf9\u8f6f\u4ef6\u8bbe\u8ba1\u4e2d\u666e\u904d\u5b58\u5728\uff08\u53cd\u590d\u51fa\u73b0\uff09\u7684\u5404\u79cd\u95ee\u9898\uff0c\u6240\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6848[\u7ef4\u57fa\u767e\u79d1]\u3002</p> <p>\u8bbe\u8ba1\u6a21\u5f0f\u901a\u5e38\u88ab\u5206\u4e3a\u4e09\u4e2a\u4e3b\u8981\u7c7b\u522b\uff1a\u521b\u5efa\u578b\u6a21\u5f0f\u3001\u7ed3\u6784\u578b\u6a21\u5f0f\u548c\u884c\u4e3a\u6a21\u5f0f\u3002\u672c\u6587\u5c06\u8be6\u5c3d\u4e3e\u4f8b\u6bcf\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7528\u6cd5\u3002</p> <p>\u672c\u6587\u4ee3\u7801\u793a\u4f8b\u6765\u81ea\uff1ahttps://refactoringguru.cn/design-patterns</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_2","title":"\u521b\u5efa\u578b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_3","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<p>\u5355\u4f8b\u6a21\u5f0f\u662f\u4e00\u4e2a\u786e\u4fdd\u7c7b\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u7684\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u70b9\u6765\u83b7\u53d6\u8be5\u5b9e\u4f8b\u3002</p> <p>\u5b83\u9002\u7528\u4e8e\u63a7\u5236\u5bf9\u67d0\u4e9b\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u4f8b\u5982\u6570\u636e\u5e93\u8fde\u63a5\u6216\u6587\u4ef6\u7cfb\u7edf\u3002\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u901a\u8fc7\u8be5\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u90fd\u8bbf\u95ee\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\u7684\u5355\u4e2a\u5b9e\u4f8b\u3002</p> <p>\u95ee\u9898\u573a\u666f</p> <p>\u63a7\u5236\u67d0\u4e9b\u5171\u4eab\u8d44\u6e90 \uff0c\u5982\u6570\u636e\u5e93\u8bbf\u95ee\u3001\u6587\u4ef6\u8bfb\u5199\u4ee5\u53ca\u4e00\u4e9b\u81ea\u5b9a\u4e49\u7684\u573a\u666f\u3002</p> <p>\u5b9e\u73b0\u65b9\u5f0f</p> <ol> <li>\u5728\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u79c1\u6709\u9759\u6001\u6210\u5458\u53d8\u91cf\u7528\u4e8e\u4fdd\u5b58\u5355\u4f8b\u5b9e\u4f8b\u3002</li> <li>\u58f0\u660e\u4e00\u4e2a\u516c\u6709\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5355\u4f8b\u5b9e\u4f8b\u3002</li> <li>\u5728\u9759\u6001\u65b9\u6cd5\u4e2d\u5b9e\u73b0\"\u5ef6\u8fdf\u521d\u59cb\u5316\"\u3002 \u8be5\u65b9\u6cd5\u4f1a\u5728\u9996\u6b21\u88ab\u8c03\u7528\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c \u5e76\u5c06\u5176\u5b58\u50a8\u5728\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e2d\u3002 \u6b64\u540e\u8be5\u65b9\u6cd5\u6bcf\u6b21\u88ab\u8c03\u7528\u65f6\u90fd\u8fd4\u56de\u8be5\u5b9e\u4f8b\u3002</li> <li>\u5c06\u7c7b\u7684\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\u3002 \u7c7b\u7684\u9759\u6001\u65b9\u6cd5\u4ecd\u80fd\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c \u4f46\u662f\u5176\u4ed6\u5bf9\u8c61\u4e0d\u80fd\u8c03\u7528\u3002</li> </ol> <p>C++\uff1a</p> C++<pre><code>#include \"iostream\"\n#include \"NoCopyClass.h\"        // \u5355\u4f8b\u7c7b\u662f\u975e\u62f7\u8d1d\u7c7b\n\nclass Singleton : NoCopyClass{\nprivate:\n    // \u5b9e\u73b0\u65b9\u5f0f1\uff1a\u5728\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\u7528\u4e8e\u4fdd\u5b58\u552f\u4e00\u5b9e\u4f8b\n    // \u6307\u9488\u6307\u5411\u552f\u4e00\u5b9e\u4f8b\n    static Singleton *instance;\n\n    //\u5b9e\u73b0\u65b9\u5f0f4\uff1a\u5c06\u7c7b\u7684\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709\u3002\n    Singleton() {\n        std::cout &lt;&lt; \"Singleton constructor\" &lt;&lt; std::endl;\n    };\n\npublic:\n    // \u5b9e\u73b0\u65b9\u5f0f2\uff1a\u58f0\u660e\u4e00\u4e2a\u516c\u6709\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u552f\u4e00\u5b9e\u4f8b\n    static Singleton *getInstance();\n\n};\n\n// \u5b9e\u73b0\u65b9\u6cd52\uff1a\u58f0\u660e\u4e00\u4e2a\u516c\u6709\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u552f\u4e00\u5b9e\u4f8b \u2014\u2014 \u5177\u4f53\u5b9e\u73b0\nSingleton *Singleton::getInstance() {\n    // \u5b9e\u73b0\u65b9\u6cd53\uff1a\u9996\u6b21\u8c03\u7528\u65f6\u521b\u5efa\u552f\u4e00\u5b9e\u4f8b\n    if (instance == nullptr) {\n        instance = new Singleton();\n    }\n\n    // \u82e5\u5df2\u7ecf\u5b58\u5728\u5b9e\u4f8b\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\n    return instance;\n}\n\n// \u5728C++\u4e2d\uff0c\u5728\u7c7b\u4e2d\u58f0\u660e\u4e86\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u8fd8\u9700\u8981\u5728\u7c7b\u7684\u5916\u90e8\u63d0\u4f9b\u8fd9\u4e2a\u53d8\u91cf\u7684\u5b9a\u4e49\u3002\u5426\u8005\u4f1a\u5bfc\u81f4\u94fe\u63a5\u9519\u8bef\u3002\nSingleton* Singleton::instance = nullptr;\n\nvoid SingletonTest() {\n    // \u5bf9\u5355\u4f8b\u7684\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u66ff\u6362\u4e3a\u5bf9\u5176\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u7684\u8c03\u7528\u3002\n    Singleton *singleton1 = Singleton::getInstance();\n    Singleton *singleton2 = Singleton::getInstance();\n\n    if (singleton1 == singleton2) {\n        std::cout &lt;&lt; \"singleton success\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <p>Python\uff1a</p> Python<pre><code>class SingletonMeta(type):\n    \"\"\"\n    \u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u5728 Python \u4e2d\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002\u4e00\u4e9b\u53ef\u80fd\u7684\u65b9\u6cd5\u5305\u62ec\uff1a\u57fa\u7c7b\u3001\u88c5\u9970\u5668\u3001\u5143\u7c7b\u3002\n    \u6211\u4eec\u5c06\u4f7f\u7528\u5143\u7c7b\uff0c\u56e0\u4e3a\u5b83\u6700\u9002\u5408\u8fd9\u4e2a\u76ee\u7684\u3002\n    \"\"\"\n\n    _instances = {}\n\n    def __call__(cls, *args, **kwargs):\n        \"\"\"\n        \u5bf9 `__init__` \u53c2\u6570\u503c\u7684\u53ef\u80fd\u66f4\u6539\u4e0d\u4f1a\u5f71\u54cd\u8fd4\u56de\u7684\u5b9e\u4f8b\u3002\n        \"\"\"\n        if cls not in cls._instances:\n            instance = super().__call__(*args, **kwargs)\n            cls._instances[cls] = instance\n        return cls._instances[cls]\n\n\nclass Singleton(metaclass=SingletonMeta):\n    def some_business_logic(self):\n        \"\"\"\n        \u6700\u540e\uff0c\u4efb\u4f55\u5355\u4f8b\u90fd\u5e94\u8be5\u5b9a\u4e49\u4e00\u4e9b\u4e1a\u52a1\u903b\u8f91\uff0c\u5728\u5176\u5b9e\u4f8b\u4e0a\u53ef\u4ee5\u6267\u884c\u3002\n        \"\"\"\n        # ...\n\n\nif __name__ == \"__main__\":\n    # \u5ba2\u6237\u7aef\u4ee3\u7801\u3002\n\n    s1 = Singleton()\n    s2 = Singleton()\n\n    if id(s1) == id(s2):\n        print(\"\u5355\u4f8b\u6a21\u5f0f\u751f\u6548\uff0c\u4e24\u4e2a\u53d8\u91cf\u5305\u542b\u76f8\u540c\u7684\u5b9e\u4f8b\u3002\")\n    else:\n        print(\"\u5355\u4f8b\u6a21\u5f0f\u5931\u8d25\uff0c\u53d8\u91cf\u5305\u542b\u4e0d\u540c\u7684\u5b9e\u4f8b\u3002\")\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_4","title":"\u539f\u578b\u6a21\u5f0f","text":"<p>\u539f\u578b\u6a21\u5f0f\u5141\u8bb8\u901a\u8fc7\u590d\u5236\u73b0\u6709\u5bf9\u8c61\u6765\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8e\u5176\u5177\u4f53\u7c7b\u3002</p> <p>\u4f7f\u7528\u539f\u578b\u5b9e\u4f8b\u6307\u5b9a\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u7136\u540e\u901a\u8fc7\u590d\u5236\u8fd9\u4e2a\u539f\u578b\u6765\u751f\u6210\u65b0\u7684\u5bf9\u8c61\u3002\u8fd9\u5728\u9700\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u6210\u672c\u8f83\u9ad8\u65f6\u7279\u522b\u6709\u7528\uff0c\u6216\u8005\u5f53\u7cfb\u7edf\u9700\u8981\u72ec\u7acb\u4e8e\u5176\u4ea7\u54c1\u7684\u521b\u5efa\u548c\u8868\u793a\u65f6\uff0c\u901a\u8fc7\u514b\u9686\u64cd\u4f5c\u6765\u907f\u514d\u8fd9\u79cd\u6210\u672c\u3002</p> <p>\u95ee\u9898\u573a\u666f</p> <p>\u6df1\u62f7\u8d1d\u2014\u2014\u8fd9\u8981\u6c42\u65e2\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u7684\u79c1\u6709\u53d8\u91cf\uff0c\u53c8\u9700\u8981\u77e5\u9053\u5bf9\u8c61\u7684\u7c7b\u3002</p> <p>\u5b9e\u73b0\u65b9\u5f0f</p> <ol> <li> <p>\u521b\u5efa\u539f\u578b\u63a5\u53e3\uff0c \u5e76\u5728\u5176\u4e2d\u58f0\u660e <code>\u514b\u9686</code>\u65b9\u6cd5\u3002 \u5982\u679c\u4f60\u5df2\u6709\u7c7b\u5c42\u6b21\u7ed3\u6784\uff0c \u5219\u53ea\u9700\u5728\u5176\u6240\u6709\u7c7b\u4e2d\u6dfb\u52a0\u8be5\u65b9\u6cd5\u5373\u53ef\u3002</p> </li> <li> <p>\u539f\u578b\u7c7b\u53e6\u884c\u5b9a\u4e49\u4e00\u4e2a\u4ee5\u8be5\u7c7b\u5bf9\u8c61\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f9b\u62f7\u8d1d\u3002</p> </li> <li> <p>\u514b\u9686\u65b9\u6cd5\u901a\u5e38\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff1a \u4f7f\u7528 <code>new</code>\u8fd0\u7b97\u7b26\u8c03\u7528\u539f\u578b\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002 \u6ce8\u610f\uff0c \u6bcf\u4e2a\u7c7b\u90fd\u5fc5\u987b\u663e\u5f0f\u91cd\u5199\u514b\u9686\u65b9\u6cd5\u5e76\u4f7f\u7528\u81ea\u8eab\u7c7b\u540d\u8c03\u7528 <code>new</code>\u8fd0\u7b97\u7b26\u3002 \u5426\u5219\uff0c \u514b\u9686\u65b9\u6cd5\u53ef\u80fd\u4f1a\u751f\u6210\u7236\u7c7b\u7684\u5bf9\u8c61\u3002</p> </li> <li> <p>\u4f60\u8fd8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e2d\u5fc3\u5316\u539f\u578b\u6ce8\u518c\u8868\uff0c \u7528\u4e8e\u5b58\u50a8\u5e38\u7528\u539f\u578b\u3002</p> </li> </ol> <p>\u4f60\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u5de5\u5382\u7c7b\u6765\u5b9e\u73b0\u6ce8\u518c\u8868\uff0c \u6216\u8005\u5728\u539f\u578b\u57fa\u7c7b\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u83b7\u53d6\u539f\u578b\u7684\u9759\u6001\u65b9\u6cd5\u3002 \u8be5\u65b9\u6cd5\u5fc5\u987b\u80fd\u591f\u6839\u636e\u5ba2\u6237\u7aef\u4ee3\u7801\u8bbe\u5b9a\u7684\u6761\u4ef6\u8fdb\u884c\u641c\u7d22\u3002 \u641c\u7d22\u6761\u4ef6\u53ef\u4ee5\u662f\u7b80\u5355\u7684\u5b57\u7b26\u4e32\uff0c \u6216\u8005\u662f\u4e00\u7ec4\u590d\u6742\u7684\u641c\u7d22\u53c2\u6570\u3002 \u627e\u5230\u5408\u9002\u7684\u539f\u578b\u540e\uff0c \u6ce8\u518c\u8868\u5e94\u5bf9\u539f\u578b\u8fdb\u884c\u514b\u9686\uff0c \u5e76\u5c06\u590d\u5236\u751f\u6210\u7684\u5bf9\u8c61\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002</p> <p>\u6700\u540e\u8fd8\u8981\u5c06\u5bf9\u5b50\u7c7b\u6784\u9020\u51fd\u6570\u7684\u76f4\u63a5\u8c03\u7528\u66ff\u6362\u4e3a\u5bf9\u539f\u578b\u6ce8\u518c\u8868\u5de5\u5382\u65b9\u6cd5\u7684\u8c03\u7528\u3002</p> <p>\u4f8b\u5b50\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;unordered_map&gt;\n\nusing std::string;\n// \u539f\u578b\u8bbe\u8ba1\u6a21\u5f0f\n//\n// \u76ee\u7684\uff1a\u5141\u8bb8\u4f60\u590d\u5236\u73b0\u6709\u5bf9\u8c61\uff0c\u800c\u4e0d\u4f7f\u4f60\u7684\u4ee3\u7801\u4f9d\u8d56\u4e8e\u5b83\u4eec\u7684\u7c7b\u3002\n\nenum Type {\n    PROTOTYPE_1 = 0,\n    PROTOTYPE_2\n};\n\n// \u5b9e\u73b0\u65b9\u5f0f1\uff1a \u521b\u5efa\u539f\u578b\u63a5\u53e3\nclass Prototype {\nprivate:\n    string prototype_name;\n    float prototype_field;\npublic:\n    Prototype();\n\n    Prototype(string prototype_name) : prototype_name(prototype_name) {\n    }\n\n    virtual ~Prototype() {}\n\n    virtual void Method(float prototype_field) {\n        this-&gt;prototype_field = prototype_field;\n        std::cout &lt;&lt; \"Call Method from \" &lt;&lt; prototype_name &lt;&lt; \" with field : \" &lt;&lt; prototype_field &lt;&lt; std::endl;\n    }\n\n    // \u5b9e\u73b0\u65b9\u5f0f1\uff1a \u6dfb\u52a0\u514b\u9686\u65b9\u6cd5\n    virtual Prototype *clone() const = 0;\n};\n\n// \u539f\u578b\u7c7b1\nclass ConcretePrototype1 : public Prototype {\nprivate:\n    float concrete_prototype_field1;\n\npublic:\n    // \u5b9e\u73b0\u65b9\u5f0f2\uff1a \u539f\u578b\u7c7b\u5b9a\u4e49\u4e00\u4e2a\u4ee5\u8be5\u7c7b\u5bf9\u8c61\u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u590d\u5236\u53c2\u6570\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u6210\u5458\u53d8\u91cf\u503c\u5230\u65b0\u5efa\u5b9e\u4f53\u4e2d\u3002\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff0c \u8ba9\u7236\u7c7b\u590d\u5236\u5176\u79c1\u6709\u6210\u5458\u53d8\u91cf\u503c\u3002\n    ConcretePrototype1(string prototype_name, float concrete_prototype_field)\n            : Prototype(prototype_name), concrete_prototype_field1(concrete_prototype_field) {\n    }\n\n    // \u5b9e\u73b0\u65b9\u5f0f3\uff1a \u514b\u9686\u65b9\u6cd5\u901a\u5e38\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff1a \u4f7f\u7528 new \u8fd0\u7b97\u7b26\u8c03\u7528\u539f\u578b\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\u3002\n    Prototype *clone() const override {\n        return new ConcretePrototype1(*this);\n    }\n};\n\n// \u539f\u578b\u7c7b2\nclass ConcretePrototype2 : public Prototype {\nprivate:\n    float concrete_prototype_field2;\n\npublic:\n    ConcretePrototype2(string prototype_name, float concrete_prototype_field)\n            : Prototype(prototype_name), concrete_prototype_field2(concrete_prototype_field) {\n    }\n\n    Prototype *clone() const override {\n        return new ConcretePrototype2(*this);\n    }\n};\n\n// \u5b9e\u73b0\u65b9\u5f0f4\uff1a \u521b\u5efa\u539f\u578b\u5de5\u5382\uff0c \u7528\u4e8e\u5b58\u50a8\u5e38\u7528\u539f\u578b\u3002\nclass PrototypeFactory {\nprivate:\n    std::unordered_map&lt;Type, Prototype *, std::hash&lt;int&gt;&gt; prototypes;\n\n    public:\n    PrototypeFactory() {\n        prototypes[Type::PROTOTYPE_1] = new ConcretePrototype1(\"PROTOTYPE_1 \", 50.f);\n        prototypes[Type::PROTOTYPE_2] = new ConcretePrototype2(\"PROTOTYPE_2 \", 60.f);\n    }\n\n    ~PrototypeFactory() {\n        delete prototypes[Type::PROTOTYPE_1];\n        delete prototypes[Type::PROTOTYPE_2];\n    }\n\n    Prototype *CreatePrototype(Type type) {\n        return prototypes[type]-&gt;clone();\n    }\n};\n\nvoid Client(PrototypeFactory &amp;prototype_factory) {\n    std::cout &lt;&lt; \"Let's create a Prototype 1\\n\";\n\n    Prototype *prototype = prototype_factory.CreatePrototype(Type::PROTOTYPE_1);\n    prototype-&gt;Method(90);\n    delete prototype;\n\n    std::cout &lt;&lt; \"\\n\";\n\n    std::cout &lt;&lt; \"Let's create a Prototype 2 \\n\";\n\n    prototype = prototype_factory.CreatePrototype(Type::PROTOTYPE_2);\n    prototype-&gt;Method(10);\n\n    delete prototype;\n}\n\nvoid PrototypeTest() {\n    PrototypeFactory *prototype_factory = new PrototypeFactory();\n    Client(*prototype_factory);\n    delete prototype_factory;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ul> <li>\u539f\u578b\u63a5\u53e3\uff1a</li> <li>\u62bd\u8c61\u539f\u578b\u7c7b\uff1a\u5b9a\u4e49\u4e00\u4e2a\u514b\u9686\u81ea\u8eab\u7684\u63a5\u53e3\uff0c\u8ba9\u5177\u4f53\u7684\u539f\u578b\u7c7b\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002</li> <li><code>clone</code> \u65b9\u6cd5\uff1a\u5b9e\u73b0\u590d\u5236\u529f\u80fd\uff0c\u8fd4\u56de\u65b0\u7684\u72ec\u7acb\u5bf9\u8c61\u3002</li> <li>\u5177\u4f53\u539f\u578b\uff1a\u5b9e\u73b0\u62bd\u8c61\u539f\u578b\u7c7b\u7684\u63a5\u53e3\uff0c\u63d0\u4f9b\u514b\u9686\uff08\u6216\u590d\u5236\uff09\u64cd\u4f5c\uff0c\u8fd4\u56de\u81ea\u8eab\u7684\u4e00\u4e2a\u526f\u672c\u3002</li> </ul> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u6df1\u62f7\u8d1d\u4e0e\u6d45\u62f7\u8d1d\uff1a\u6839\u636e\u9700\u8981\u590d\u5236\u5bf9\u8c61\u5c5e\u6027\u7684\u590d\u6742\u6027\u9009\u62e9\u9002\u5f53\u7684\u62f7\u8d1d\u7b56\u7565\u3002\u672c\u4f8b\u91c7\u7528\u4e86\u6d45\u62f7\u8d1d\u3002</li> <li>\u5faa\u73af\u5f15\u7528\uff1a\u5728\u590d\u5236\u8fc7\u7a0b\u4e2d\u907f\u514d\u5faa\u73af\u5f15\u7528\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u81ea\u5f15\u7528\u7684\u5bf9\u8c61\u3002</li> <li>\u6ce8\u518c\u539f\u578b\uff1a\u5728\u9700\u8981\u65f6\uff0c\u53ef\u4ee5\u5c06\u539f\u578b\u5bf9\u8c61\u6ce8\u518c\u5230\u4e00\u4e2a\u7ba1\u7406\u5b83\u4eec\u7684\u6ce8\u518c\u8868\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u6765\u8bbf\u95ee\u5177\u4f53\u539f\u578b\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_5","title":"\u5efa\u9020\u8005\u6a21\u5f0f","text":"<p>\u5efa\u9020\u8005\u6a21\u5f0f\u662f\u7528\u6765\u6784\u5efa\u590d\u6742\u5bf9\u8c61\u7684\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u5141\u8bb8\u5c06\u5bf9\u8c61\u7684\u6784\u9020\u8fc7\u7a0b\u548c\u5b83\u7684\u8868\u793a\u5206\u79bb\u5f00\u6765\uff0c\u4f7f\u5f97\u540c\u6837\u7684\u6784\u5efa\u8fc7\u7a0b\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u7684\u8868\u793a\u3002</p> <p>\u8fd9\u4e2a\u6a21\u5f0f\u7279\u522b\u9002\u5408\u4e8e\u90a3\u4e9b\u9700\u8981\u751f\u6210\u7684\u5bf9\u8c61\u5177\u6709\u5927\u91cf\u914d\u7f6e\u9009\u9879\u7684\u60c5\u51b5\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u63a7\u5236\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u6700\u7ec8\u5bf9\u8c61\u7684\u5f62\u6001\u3002</p> <p>\u5047\u8bbe\u751f\u4ea7\u4e00\u8f86\u6c7d\u8f66\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\n// \u4ea7\u54c1\uff1aCar\nclass Car {\nprivate:\n    std::string engine;\n    std::string seats;\n    std::string infotainment;\n\npublic:\n    void setEngine(const std::string&amp; eng) { engine = eng; }\n    void setSeats(const std::string&amp; sts) { seats = sts; }\n    void setInfotainment(const std::string&amp; info) { infotainment = info; }\n    void specifications() const {\n        std::cout &lt;&lt; \"Car with Engine: \" &lt;&lt; engine\n                  &lt;&lt; \", Seats: \" &lt;&lt; seats\n                  &lt;&lt; \", Infotainment: \" &lt;&lt; infotainment\n                  &lt;&lt; std::endl;\n    }\n};\n\n// \u62bd\u8c61\u5efa\u9020\u8005\uff1aCarBuilder\nclass CarBuilder {\npublic:\n    virtual ~CarBuilder() {}\n    virtual void buildEngine() = 0;\n    virtual void buildSeats() = 0;\n    virtual void buildInfotainment() = 0;\n    virtual std::unique_ptr&lt;Car&gt; getCar() = 0;\n};\n\n// \u5177\u4f53\u5efa\u9020\u8005\uff1aSedanCarBuilder\nclass SedanCarBuilder : public CarBuilder {\nprivate:\n    std::unique_ptr&lt;Car&gt; car;\n\npublic:\n    SedanCarBuilder() { car = std::make_unique&lt;Car&gt;(); }\n    void buildEngine() override { car-&gt;setEngine(\"Sedan Engine\"); }\n    void buildSeats() override { car-&gt;setSeats(\"Sedan Seats\"); }\n    void buildInfotainment() override { car-&gt;setInfotainment(\"Basic Infotainment\"); }\n    std::unique_ptr&lt;Car&gt; getCar() override { return std::move(car); }\n};\n\n// \u5177\u4f53\u5efa\u9020\u8005\uff1aSportsCarBuilder\nclass SportsCarBuilder : public CarBuilder {\nprivate:\n    std::unique_ptr&lt;Car&gt; car;\n\npublic:\n    SportsCarBuilder() { car = std::make_unique&lt;Car&gt;(); }\n    void buildEngine() override { car-&gt;setEngine(\"Sports Engine\"); }\n    void buildSeats() override { car-&gt;setSeats(\"Sports Seats\"); }\n    void buildInfotainment() override { car-&gt;setInfotainment(\"Advanced Infotainment\"); }\n    std::unique_ptr&lt;Car&gt; getCar() override { return std::move(car); }\n};\n\n// \u6307\u6325\u8005\uff1aDirector\nclass Director {\npublic:\n    void constructSportsCar(CarBuilder&amp; builder) {\n        builder.buildEngine();\n        builder.buildSeats();\n        builder.buildInfotainment();\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    Director director;\n\n    SportsCarBuilder sportsBuilder;\n    director.constructSportsCar(sportsBuilder);\n    std::unique_ptr&lt;Car&gt; sportsCar = sportsBuilder.getCar();\n    sportsCar-&gt;specifications();\n\n    SedanCarBuilder sedanBuilder;\n    director.constructSportsCar(sedanBuilder);\n    std::unique_ptr&lt;Car&gt; sedanCar = sedanBuilder.getCar();\n    sedanCar-&gt;specifications();\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ul> <li>\u62bd\u8c61\u5efa\u9020\u8005\uff1a\u63d0\u4f9b\u521b\u5efa\u4ea7\u54c1\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\u7684\u63a5\u53e3\u58f0\u660e\u3002</li> <li>\u5177\u4f53\u5efa\u9020\u8005\uff1a\u5177\u4f53\u5b9e\u73b0\u8fd9\u4e9b\u63a5\u53e3\u7684\u7c7b\uff0c\u5b9a\u4e49\u548c\u660e\u786e\u5b83\u6240\u8981\u521b\u5efa\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u7ec6\u8282\u3002</li> <li>\u4ea7\u54c1\uff1a\u6700\u7ec8\u8981\u521b\u5efa\u7684\u590d\u6742\u5bf9\u8c61\u3002\u901a\u5e38\u5305\u542b\u591a\u4e2a\u6210\u5206\u90e8\u5206\u3002</li> <li>\u6307\u6325\u8005\uff1a\u4e00\u4e2a\u8d1f\u8d23\u6784\u9020\u590d\u6742\u5bf9\u8c61\u7684\u7c7b\u3002\u5b83\u6309\u7279\u5b9a\u6b65\u9aa4\u4f7f\u7528\u5efa\u9020\u8005\u7684\u65b9\u6cd5\u6765\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u3002</li> </ul> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u53ef\u53d8\u6027\uff1a\u5efa\u9020\u8005\u9690\u85cf\u4e86\u590d\u6742\u5bf9\u8c61\u7684\u5185\u90e8\u7ed3\u6784\u548c\u521b\u5efa\u8fc7\u7a0b\uff0c\u5b83\u5141\u8bb8\u5bf9\u8c61\u901a\u8fc7\u591a\u4e2a\u6b65\u9aa4\u6784\u9020\uff0c\u5e76\u4e14\u53ef\u4ee5\u66f4\u6539\u8fc7\u7a0b\u548c\u6700\u7ec8\u5f62\u6001\u3002</li> <li>\u6784\u9020\u6b65\u9aa4\u7684\u7cbe\u7ec6\u63a7\u5236\uff1a\u5efa\u9020\u8005\u6a21\u5f0f\u63d0\u4f9b\u4e86\u7cbe\u7ec6\u7684\u63a7\u5236\u6743\uff0c\u80fd\u591f\u9010\u6b65\u6784\u9020\u590d\u6742\u5bf9\u8c61\u7684\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\uff0c\u5e76\u5141\u8bb8\u6b65\u9aa4\u53ef\u56de\u6eaf\u3002</li> <li>\u5206\u79bb\u8d23\u4efb\uff1a\u901a\u8fc7\u5c06\u590d\u6742\u5bf9\u8c61\u7684\u521b\u5efa\u8fc7\u7a0b\u5c01\u88c5\u5728\u5176\u5404\u81ea\u7684\u5efa\u9020\u8005\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u6301\u4ee3\u7801\u7684\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u540c\u65f6\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u7ef4\u62a4\u6027\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_6","title":"\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f","text":"<p>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u662f\u4e00\u79cd\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u8ba9\u5b50\u7c7b\u51b3\u5b9a\u5b9e\u4f8b\u5316\u54ea\u4e00\u4e2a\u7c7b\u3002</p> <p>\u8fd9\u79cd\u6a21\u5f0f\u4f7f\u5f97\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5316\u5ef6\u8fdf\u5230\u5176\u5b50\u7c7b\u3002\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\u975e\u5e38\u9002\u5408\u4e8e\u4e0d\u540c\u60c5\u5883\u4e0b\u53ef\u80fd\u9700\u8981\u521b\u5efa\u4e0d\u540c\u5bf9\u8c61\u7684\u60c5\u51b5\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u662f\u540c\u4e00\u57fa\u7c7b\u6216\u63a5\u53e3\u7684\u5b9e\u73b0\u3002</p> <p>\u4f8b\u5982\uff0c\u5728\u6e38\u620f\u5f00\u53d1\u4e2d\uff0c\u53ef\u4ee5\u6709\u4e00\u4e2a\u62bd\u8c61\u7c7b\u201c\u5355\u4f4d\u201d\uff08Unit\uff09\uff0c\u5b83\u5b9a\u4e49\u4e86\u521b\u5efa\u5355\u4f4d\u7684\u63a5\u53e3\u3002\u5177\u4f53\u7684\u5355\u4f4d\u7c7b\u578b\uff0c\u5982\u201c\u5766\u514b\u201d\u3001\u201c\u98de\u673a\u201d\u3001\u201c\u5927\u70ae\u201d\u548c\u201c\u89d2\u8272\u201d\uff0c\u90fd\u662f\u8fd9\u4e2a\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u3002\u6bcf\u4e2a\u5b50\u7c7b\u5b9e\u73b0\u4e86\u521b\u5efa\u5177\u4f53\u5355\u4f4d\u7684\u65b9\u6cd5\uff0c\u4ece\u800c\u901a\u8fc7\u7236\u7c7b\u7684\u63a5\u53e3\u521b\u5efa\u51fa\u5b8c\u6574\u7684\u5bf9\u8c61\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n\n// \u62bd\u8c61\u4ea7\u54c1 - Unit\nclass Unit {\npublic:\n    virtual ~Unit() {}\n    virtual std::string getType() const = 0;\n};\n\n// \u5177\u4f53\u4ea7\u54c1 - Tank\nclass Tank : public Unit {\npublic:\n    std::string getType() const override {\n        return \"Tank\";\n    }\n};\n\n// \u5177\u4f53\u4ea7\u54c1 - Plane\nclass Plane : public Unit {\npublic:\n    std::string getType() const override {\n        return \"Plane\";\n    }\n};\n\n// \u5177\u4f53\u4ea7\u54c1 - Cannon\nclass Cannon : public Unit {\npublic:\n    std::string getType() const override {\n        return \"Cannon\";\n    }\n};\n\n// \u62bd\u8c61\u521b\u5efa\u8005 - UnitFactory\nclass UnitFactory {\npublic:\n    virtual ~UnitFactory() {}\n    virtual std::unique_ptr&lt;Unit&gt; createUnit() const = 0;\n};\n\n// \u5177\u4f53\u521b\u5efa\u8005 - TankFactory\nclass TankFactory : public UnitFactory {\npublic:\n    std::unique_ptr&lt;Unit&gt; createUnit() const override {\n        return std::make_unique&lt;Tank&gt;();\n    }\n};\n\n// \u5177\u4f53\u521b\u5efa\u8005 - PlaneFactory\nclass PlaneFactory : public UnitFactory {\npublic:\n    std::unique_ptr&lt;Unit&gt; createUnit() const override {\n        return std::make_unique&lt;Plane&gt;();\n    }\n};\n\n// \u5177\u4f53\u521b\u5efa\u8005 - CannonFactory\nclass CannonFactory : public UnitFactory {\npublic:\n    std::unique_ptr&lt;Unit&gt; createUnit() const override {\n        return std::make_unique&lt;Cannon&gt;();\n    }\n};\n\n// \u4e3b\u51fd\u6570 - \u4f7f\u7528\u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u5355\u4f4d\nint main() {\n    TankFactory tankFactory;\n    PlaneFactory planeFactory;\n    CannonFactory cannonFactory;\n\n    auto tank = tankFactory.createUnit();\n    auto plane = planeFactory.createUnit();\n    auto cannon = cannonFactory.createUnit();\n\n    std::cout &lt;&lt; \"Created Unit: \" &lt;&lt; tank-&gt;getType() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Created Unit: \" &lt;&lt; plane-&gt;getType() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Created Unit: \" &lt;&lt; cannon-&gt;getType() &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ul> <li>\u62bd\u8c61\u521b\u5efa\u8005\uff08Abstract Creator\uff09\uff1a\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u4e86\u5de5\u5382\u65b9\u6cd5\u7684\u7c7b\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e00\u4e2a\u201c\u63a5\u53e3\u201d\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u6807\u51c6\uff0c\u4f46\u4e0d\u5177\u4f53\u5b9e\u73b0\u521b\u5efa\u5bf9\u8c61\u7684\u903b\u8f91\u3002\u5728\u6211\u4eec\u7684\u6e38\u620f\u793a\u4f8b\u4e2d\uff0c<code>UnitFactory</code> \u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u521b\u5efa\u8005\u3002</li> <li>\u5177\u4f53\u521b\u5efa\u8005\uff08Concrete Creator\uff09\uff1a\u8fd9\u4e9b\u662f\u5b9e\u73b0\u4e86\u62bd\u8c61\u521b\u5efa\u8005\u5b9a\u4e49\u7684\u5de5\u5382\u65b9\u6cd5\u7684\u7c7b\u3002\u6bcf\u4e2a\u5177\u4f53\u521b\u5efa\u8005\u7c7b\u8d1f\u8d23\u521b\u5efa\u7279\u5b9a\u7c7b\u578b\u7684\u4ea7\u54c1\u3002\u5728\u6e38\u620f\u793a\u4f8b\u4e2d\uff0c<code>TankFactory</code>\u3001<code>PlaneFactory</code> \u548c <code>CannonFactory</code> \u662f\u5177\u4f53\u521b\u5efa\u8005\u3002</li> <li>\u62bd\u8c61\u4ea7\u54c1\uff08Product\uff09\uff1a\u8fd9\u662f\u7531\u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u7684\u5bf9\u8c61\u7684\u63a5\u53e3\u3002\u5b83\u5b9a\u4e49\u4e86\u4ea7\u54c1\u5e94\u8be5\u6709\u7684\u57fa\u672c\u7279\u5f81\u548c\u884c\u4e3a\u3002\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c<code>Unit</code> \u662f\u4e00\u4e2a\u4ea7\u54c1\u63a5\u53e3\u3002</li> <li>\u5177\u4f53\u4ea7\u54c1\uff08Concrete Product\uff09\uff1a\u8fd9\u4e9b\u662f\u5b9e\u73b0\u4e86\u4ea7\u54c1\u63a5\u53e3\u7684\u5177\u4f53\u7c7b\u3002\u5b83\u4eec\u662f\u5de5\u5382\u65b9\u6cd5\u521b\u5efa\u7684\u5b9e\u9645\u5bf9\u8c61\u3002\u5728\u6e38\u620f\u4e2d\uff0c<code>Tank</code>\u3001<code>Plane</code> \u548c <code>Cannon</code> \u662f\u5177\u4f53\u4ea7\u54c1\u3002</li> </ul> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u7075\u6d3b\u6027\u4e0e\u8026\u5408\uff1a\u5de5\u5382\u65b9\u6cd5\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u7075\u6d3b\u6027\uff0c\u51cf\u5c11\u4e86\u7c7b\u4e4b\u95f4\u7684\u8026\u5408\uff0c\u4f46\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4ee3\u7801\u53d8\u5f97\u590d\u6742\u3002</li> <li>\u6269\u5c55\u6027\uff1a\u5f53\u6dfb\u52a0\u65b0\u4ea7\u54c1\u65f6\uff0c\u9700\u8981\u521b\u5efa\u76f8\u5e94\u7684\u5177\u4f53\u521b\u5efa\u8005\u7c7b\u3002</li> <li>\u5355\u4e00\u804c\u8d23\u539f\u5219\uff1a\u786e\u4fdd\u6bcf\u4e2a\u7c7b\u7684\u804c\u8d23\u5355\u4e00\uff0c\u521b\u5efa\u8005\u7c7b\u4e13\u6ce8\u4e8e\u521b\u5efa\u5bf9\u8c61\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_7","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f","text":"<p>\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u662f\u4e00\u4e2a\u521b\u5efa\u578b\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u5141\u8bb8\u4f60\u521b\u5efa\u4e00\u7cfb\u5217\u76f8\u5173\u6216\u76f8\u4e92\u4f9d\u8d56\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u9700\u8981\u6307\u5b9a\u5b83\u4eec\u5177\u4f53\u7684\u7c7b\u3002</p> <p>\u8be5\u6a21\u5f0f\u63d0\u4f9b\u4e00\u4e2a\u9ad8\u5c42\u6b21\u7684\u63a5\u53e3\uff0c\u7528\u4e8e\u521b\u5efa\u4e00\u7ec4\u201c\u4ea7\u54c1\u65cf\u201d\uff0c\u6bcf\u4e2a\u4ea7\u54c1\u65cf\u5305\u62ec\u82e5\u5e72\u4e2a\u76f8\u5173\u7684\u4ea7\u54c1\uff0c\u800c\u4e0d\u662f\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684\u7c7b\u5b9e\u73b0\u3002\u8fd9\u79cd\u6a21\u5f0f\u7279\u522b\u9002\u7528\u4e8e\u7cfb\u7edf\u9700\u8981\u72ec\u7acb\u4e8e\u591a\u79cd\u4ea7\u54c1\u96c6\u5408\u7684\u521b\u5efa\u548c\u5448\u73b0\u7684\u60c5\u51b5\uff0c\u5e76\u4e14\u7cfb\u7edf\u9700\u8981\u914d\u7f6e\u591a\u4e2a\u4ea7\u54c1\u65cf\u4e4b\u4e00\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u6587\u660e\uff1a\u4e2d\u4e16\u7eaa\u548c\u672a\u6765\u6d3e\u3002\u6bcf\u79cd\u6587\u660e\u90fd\u6709\u81ea\u5df1\u7684\u5355\u4f4d\u548c\u5efa\u7b51\uff0c\u7531\u76f8\u5e94\u7684\u5177\u4f53\u5de5\u5382\u521b\u5efa\uff1a</p> C++<pre><code>// \u62bd\u8c61\u4ea7\u54c1\uff1aUnit\nclass Unit {\npublic:\n    virtual void move() = 0; // \u6240\u6709\u5355\u4f4d\u90fd\u5e94\u8be5\u80fd\u79fb\u52a8\n    virtual ~Unit() {}\n};\n\n// \u5177\u4f53\u4ea7\u54c1\uff1aKnight\uff08\u4e2d\u4e16\u7eaa\u9a91\u58eb\uff09\nclass Knight : public Unit {\npublic:\n    void move() override {\n        // \u5b9e\u73b0\u9a91\u58eb\u7684\u79fb\u52a8\u903b\u8f91\n    }\n};\n\n// \u5177\u4f53\u4ea7\u54c1\uff1aRobot\uff08\u672a\u6765\u673a\u5668\u4eba\uff09\nclass Robot : public Unit {\npublic:\n    void move() override {\n        // \u5b9e\u73b0\u673a\u5668\u4eba\u7684\u79fb\u52a8\u903b\u8f91\n    }\n};\n\n// \u62bd\u8c61\u4ea7\u54c1\uff1aBuilding\nclass Building {\npublic:\n    virtual void build() = 0; // \u6240\u6709\u5efa\u7b51\u90fd\u5e94\u8be5\u80fd\u88ab\u5efa\u9020\n    virtual ~Building() {}\n};\n\n// \u5177\u4f53\u4ea7\u54c1\uff1aCastle\uff08\u4e2d\u4e16\u7eaa\u57ce\u5821\uff09\nclass Castle : public Building {\npublic:\n    void build() override {\n        // \u5b9e\u73b0\u57ce\u5821\u7684\u5efa\u9020\u903b\u8f91\n    }\n};\n\n// \u5177\u4f53\u4ea7\u54c1\uff1aEnergyStation\uff08\u672a\u6765\u80fd\u6e90\u7ad9\uff09\nclass EnergyStation : public Building {\npublic:\n    void build() override {\n        // \u5b9e\u73b0\u80fd\u6e90\u7ad9\u7684\u5efa\u9020\u903b\u8f91\n    }\n};\n// \u62bd\u8c61\u5de5\u5382\uff08\u521b\u5efa\u8005\uff09\uff1aCivilizationFactory\nclass CivilizationFactory {\npublic:\n    virtual Unit* createUnit() = 0; // \u521b\u5efa\u5355\u4f4d\u7684\u65b9\u6cd5\n    virtual Building* createBuilding() = 0; // \u521b\u5efa\u5efa\u7b51\u7684\u65b9\u6cd5\n    virtual ~CivilizationFactory() {}\n};\n\n// \u5177\u4f53\u5de5\u5382\uff08\u521b\u5efa\u8005\uff09\uff1aMedievalFactory\uff08\u7528\u4e8e\u521b\u5efa\u4e2d\u4e16\u7eaa\u76f8\u5173\u7684\u4ea7\u54c1\uff09\nclass MedievalFactory : public CivilizationFactory {\npublic:\n    Unit* createUnit() override {\n        return new Knight(); // \u521b\u5efa\u4e2d\u4e16\u7eaa\u9a91\u58eb\n    }\n    Building* createBuilding() override {\n        return new Castle(); // \u521b\u5efa\u4e2d\u4e16\u7eaa\u57ce\u5821\n    }\n};\n\n// \u5177\u4f53\u5de5\u5382\uff08\u521b\u5efa\u8005\uff09\uff1aFuturisticFactory\uff08\u7528\u4e8e\u521b\u5efa\u672a\u6765\u76f8\u5173\u7684\u4ea7\u54c1\uff09\nclass FuturisticFactory : public CivilizationFactory {\npublic:\n    Unit* createUnit() override {\n        return new Robot(); // \u521b\u5efa\u672a\u6765\u673a\u5668\u4eba\n    }\n    Building* createBuilding() override {\n        return new EnergyStation(); // \u521b\u5efa\u672a\u6765\u80fd\u6e90\u7ad9\n    }\n};\nint main() {\n    // \u521b\u5efa\u4e2d\u4e16\u7eaa\u548c\u672a\u6765\u6587\u660e\u7684\u5de5\u5382\n    CivilizationFactory* medievalFactory = new MedievalFactory();\n    CivilizationFactory* futuristicFactory = new FuturisticFactory();\n\n    // \u4f7f\u7528\u4e2d\u4e16\u7eaa\u5de5\u5382\u521b\u5efa\u5355\u4f4d\u548c\u5efa\u7b51\n    Unit* knight = medievalFactory-&gt;createUnit();\n    Building* castle = medievalFactory-&gt;createBuilding();\n\n    // \u4f7f\u7528\u672a\u6765\u5de5\u5382\u521b\u5efa\u5355\u4f4d\u548c\u5efa\u7b51\n    Unit* robot = futuristicFactory-&gt;createUnit();\n    Building* energyStation = futuristicFactory-&gt;createBuilding();\n\n    // \u793a\u4f8b\uff1a\u4f7f\u7528\u521b\u5efa\u7684\u5bf9\u8c61\n    knight-&gt;move();    // \u9a91\u58eb\u79fb\u52a8\n    castle-&gt;build();   // \u5efa\u9020\u57ce\u5821\n    robot-&gt;move();     // \u673a\u5668\u4eba\u79fb\u52a8\n    energyStation-&gt;build(); // \u5efa\u9020\u80fd\u6e90\u7ad9\n\n    // \u6e05\u7406\u8d44\u6e90\n    delete knight;\n    delete castle;\n    delete robot;\n    delete energyStation;\n    delete medievalFactory;\n    delete futuristicFactory;\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9\uff1a</p> <ul> <li>\u62bd\u8c61\u5de5\u5382\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u7528\u4e8e\u521b\u5efa\u76f8\u5173\u6216\u4f9d\u8d56\u5bf9\u8c61\u7684\u5bb6\u65cf\uff0c\u800c\u4e0d\u9700\u8981\u660e\u786e\u5177\u4f53\u7c7b\u3002</li> <li>\u5177\u4f53\u5de5\u5382\uff1a\u5b9e\u73b0\u62bd\u8c61\u5de5\u5382\u7684\u64cd\u4f5c\uff0c\u5236\u9020\u51fa\u4e00\u7cfb\u5217\u76f8\u4e92\u5173\u8054\u7684\u4ea7\u54c1\u3002</li> <li>\u62bd\u8c61\u4ea7\u54c1\uff1a\u4e3a\u4e00\u7cfb\u5217\u76f8\u5173\u6216\u4f9d\u8d56\u7684\u4ea7\u54c1\u58f0\u660e\u63a5\u53e3\u3002</li> <li>\u5177\u4f53\u4ea7\u54c1\uff1a\u662f\u62bd\u8c61\u4ea7\u54c1\u7684\u5b9e\u73b0\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u4ea7\u54c1\u5c06\u7ec4\u6210\u4ea7\u54c1\u5bb6\u65cf</li> </ul> <p>\u6ce8\u610f\u70b9\uff1a</p> <ul> <li>\u4e00\u81f4\u6027\uff1a\u786e\u4fdd\u540c\u4e00\u5de5\u5382\u751f\u6210\u7684\u4ea7\u54c1\u4e4b\u95f4\u80fd\u591f\u76f8\u4e92\u914d\u5408\u4f7f\u7528\u3002</li> <li>\u4ea7\u54c1\u65cf\u6269\u5c55\uff1a\u589e\u52a0\u65b0\u7684\u4ea7\u54c1\u65cf\u76f8\u5bf9\u5bb9\u6613\uff0c\u4f46\u5728\u5df2\u6709\u7684\u4ea7\u54c1\u65cf\u4e2d\u6dfb\u52a0\u65b0\u4ea7\u54c1\u5219\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u4e3a\u62bd\u8c61\u5de5\u5382\u7684\u63a5\u53e3\u786e\u5b9a\u540e\u4e0d\u6613\u53d8\u52a8\u3002</li> <li>\u89e3\u8026\uff1a\u4f7f\u7528\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u53ef\u4ee5\u51cf\u5c11\u5ba2\u6237\u7aef\u4e0e\u5177\u4f53\u4ea7\u54c1\u7c7b\u4e4b\u95f4\u7684\u4f9d\u8d56\uff0c\u5ba2\u6237\u7aef\u53ea\u9700\u5173\u5fc3\u62bd\u8c61\u4ea7\u54c1\u548c\u62bd\u8c61\u5de5\u5382\u7684\u63a5\u53e3\u3002</li> </ul> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u5b9e\u9645\u4e0a\u4e5f\u662f\u4e00\u79cd\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff0c\u53ea\u4e0d\u8fc7\uff0c\u5176\u5b9e\u73b0\u7a0d\u6709\u533a\u522b\uff1a</p> <p>\u5de5\u5382\u65b9\u6cd5\u6a21\u5f0f\uff1a</p> <ul> <li>\u901a\u5e38\u4e00\u4e2a\u5de5\u5382\u7c7b\u53ea\u6709\u4e00\u4e2a\u521b\u5efa\u4ea7\u54c1\u7684\u65b9\u6cd5\u3002</li> <li>\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7c7b\u578b\u7684\u4ea7\u54c1\uff0c\u4e0d\u540c\u7684\u5177\u4f53\u5de5\u5382\u4f1a\u8fd4\u56de\u4e0d\u540c\u7c7b\u7684\u5b9e\u4f8b\u3002</li> <li>\u4e3b\u8981\u5173\u6ce8\u5982\u4f55\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u521b\u5efa\u5355\u4e00\u5bf9\u8c61\u3002</li> </ul> <p>\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff1a</p> <ul> <li>\u4e00\u4e2a\u5de5\u5382\u7c7b\u5305\u542b\u591a\u4e2a\u521b\u5efa\u4ea7\u54c1\u7684\u65b9\u6cd5\u3002</li> <li>\u6bcf\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e0d\u540c\u7c7b\u578b\u7684\u4ea7\u54c1\uff0c\u4f46\u6240\u6709\u4ea7\u54c1\u90fd\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4ea7\u54c1\u65cf\u3002</li> <li> <p>\u5177\u4f53\u5de5\u5382\u8d1f\u8d23\u5b9e\u73b0\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u4e3a\u4e00\u4e2a\u7279\u5b9a\u4ea7\u54c1\u65cf\u521b\u5efa\u6240\u6709\u76f8\u5173\u4ea7\u54c1\u3002</p> </li> <li> <p>\u4e3b\u8981\u5173\u6ce8\u5982\u4f55\u521b\u5efa\u4e00\u7ec4\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u901a\u5e38\u662f\u76f8\u5173\u7684\uff08\u4f8b\u5982\uff0c\u5b83\u4eec\u4e00\u8d77\u4f7f\u7528\uff09\uff0c\u800c\u4e14\u4f60\u60f3\u786e\u4fdd\u5b83\u4eec\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002</p> </li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_8","title":"\u7ed3\u6784\u578b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_9","title":"\u4ee3\u7406\u6a21\u5f0f","text":"<p>\u4ee3\u7406\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u66ff\u4ee3\u54c1\u6216\u5360\u4f4d\u7b26\u6765\u63a7\u5236\u5bf9\u67d0\u4e2a\u7c7b\u7684\u8bbf\u95ee\u3002\u901a\u8fc7\u4ee3\u7406\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u7cfb\u7edf\u5f15\u5165\u65b0\u7684\u529f\u80fd\u548c\u7ea6\u675f\uff0c\u589e\u5f3a\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u63a7\u5236\u548c\u7ba1\u7406\u80fd\u529b\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u52a0\u7075\u6d3b\uff0c\u6613\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u3002</p> <p>\u4ee3\u7406\u6a21\u5f0f\u9002\u5408\u591a\u79cd\u5e94\u7528\u573a\u666f\uff1a</p> <ol> <li>\u865a\u62df\u4ee3\u7406\uff1a\u8fd9\u79cd\u4ee3\u7406\u901a\u5e38\u7528\u4e8e\u5ef6\u8fdf\u521b\u5efa\u5f00\u9500\u8f83\u5927\u7684\u5bf9\u8c61\u3002\u5f53\u5bf9\u8c61\u7684\u5168\u9762\u521b\u5efa\u4e0d\u662f\u7acb\u5373\u5fc5\u9700\u65f6\uff0c\u865a\u62df\u4ee3\u7406\u53ef\u4ee5\u4ee3\u8868\u8fd9\u4e2a\u91cd\u5bf9\u8c61\u8fdb\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002</li> <li>\u4fdd\u62a4\u4ee3\u7406\uff1a\u6b64\u4ee3\u7406\u63a7\u5236\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u5b83\u5e38\u7528\u4e8e\u5bf9\u8c61\u5e94\u6709\u6743\u9650\u9650\u5236\u65f6\uff0c\u786e\u4fdd\u53ea\u6709\u62e5\u6709\u6b63\u786e\u6743\u9650\u7684\u7528\u6237\u624d\u80fd\u8bbf\u95ee\u8be5\u5bf9\u8c61\u3002</li> <li>\u8fdc\u7a0b\u4ee3\u7406\uff1a\u8fd9\u79cd\u4ee3\u7406\u4ee3\u8868\u4e00\u4e2a\u4f4d\u4e8e\u4e0d\u540c\u5730\u5740\u7a7a\u95f4\uff08\u4f8b\u5982\uff0c\u4e0d\u540c\u7684\u673a\u5668\uff09\u7684\u5bf9\u8c61\u3002\u8fdc\u7a0b\u4ee3\u7406\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u4f7f\u5f97\u5ba2\u6237\u7aef\u53ef\u4ee5\u50cf\u64cd\u4f5c\u672c\u5730\u5bf9\u8c61\u4e00\u6837\u64cd\u4f5c\u8fdc\u7a0b\u5bf9\u8c61\u3002</li> <li>\u65e5\u5fd7\u8bb0\u5f55\u4ee3\u7406\uff1a\u6b64\u4ee3\u7406\u8bb0\u5f55\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u6240\u6709\u64cd\u4f5c\u3002\u8fd9\u5bf9\u4e8e\u8c03\u8bd5\u3001\u76d1\u63a7\u548c\u5ba1\u8ba1\u7b49\u573a\u666f\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u63d0\u4f9b\u5173\u4e8e\u5bf9\u8c61\u4f7f\u7528\u7684\u8be6\u7ec6\u4fe1\u606f\u3002</li> <li>\u7f13\u5b58\u4ee3\u7406\uff1a\u7f13\u5b58\u4ee3\u7406\u4e3a\u6602\u8d35\u7684\u64cd\u4f5c\u7ed3\u679c\u63d0\u4f9b\u4e34\u65f6\u5b58\u50a8\u3002\u5f53\u591a\u4e2a\u5ba2\u6237\u7aef\u9700\u8981\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0c\u5b83\u53ef\u4ee5\u4ece\u7f13\u5b58\u4e2d\u63d0\u4f9b\u8fd9\u4e9b\u6570\u636e\uff0c\u4ece\u800c\u63d0\u9ad8\u6548\u7387\u548c\u54cd\u5e94\u901f\u5ea6\u3002</li> <li>\u667a\u80fd\u5f15\u7528\uff1a\u6b64\u4ee3\u7406\u5728\u8bbf\u95ee\u5bf9\u8c61\u65f6\u6267\u884c\u989d\u5916\u7684\u52a8\u4f5c\u3002\u4f8b\u5982\uff0c\u5f53\u5bf9\u8c61\u88ab\u5f15\u7528\u65f6\u8ba1\u6570\uff0c\u6216\u8005\u5728\u5bf9\u8c61\u88ab\u8bbf\u95ee\u4e4b\u524d\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u9501\u5b9a\u3002</li> </ol> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\n// \u62bd\u8c61\u4e3b\u9898\nclass Subject {\npublic:\n    virtual void Request() const = 0;\n};\n\n// \u771f\u5b9e\u4e3b\u9898\nclass RealSubject : public Subject {\npublic:\n    void Request() const override {\n        std::cout &lt;&lt; \"RealSubject: Handling request.\" &lt;&lt; std::endl;\n    }\n};\n\n// \u4ee3\u7406\nclass Proxy : public Subject {\nprivate:\n    std::shared_ptr&lt;RealSubject&gt; real_subject_;\n\n    bool CheckAccess() const {\n        // \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u8bbf\u95ee\u63a7\u5236\u7684\u903b\u8f91\n        std::cout &lt;&lt; \"Proxy: Checking access before firing a real request.\" &lt;&lt; std::endl;\n        return true;\n    }\n\n    void LogAccess() const {\n        std::cout &lt;&lt; \"Proxy: Logging the time of request.\" &lt;&lt; std::endl;\n    }\n\npublic:\n    Proxy(std::shared_ptr&lt;RealSubject&gt; real_subject) : real_subject_(real_subject) {}\n\n    void Request() const override {\n        if (this-&gt;CheckAccess()) {\n            this-&gt;real_subject_-&gt;Request();\n            this-&gt;LogAccess();\n        }\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid ClientCode(const std::shared_ptr&lt;Subject&gt;&amp; subject) {\n    // ...\n    subject-&gt;Request();\n    // ...\n}\n\nint main() {\n    std::shared_ptr&lt;RealSubject&gt; real_subject = std::make_shared&lt;RealSubject&gt;();\n    std::shared_ptr&lt;Proxy&gt; proxy = std::make_shared&lt;Proxy&gt;(real_subject);\n    ClientCode(proxy);\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u62bd\u8c61\u4e3b\u9898\uff08Subject\uff09\uff1a\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u771f\u5b9e\u4e3b\u9898\u548c\u4ee3\u7406\u7684\u5171\u7528\u63a5\u53e3\uff0c\u8fd9\u6837\u5728\u4efb\u4f55\u4f7f\u7528\u771f\u5b9e\u4e3b\u9898\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u3002</li> <li>\u771f\u5b9e\u4e3b\u9898\uff08Real Subject\uff09\uff1a\u5b9e\u73b0\u4e86\u62bd\u8c61\u4e3b\u9898\u7684\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4ee3\u7406\u6240\u4ee3\u8868\u7684\u771f\u5b9e\u5bf9\u8c61\u3002</li> <li>\u4ee3\u7406\uff08Proxy\uff09\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u771f\u5b9e\u4e3b\u9898\u7684\u5f15\u7528\uff0c\u63a7\u5236\u5bf9\u771f\u5b9e\u4e3b\u9898\u7684\u8bbf\u95ee\uff0c\u5e76\u53ef\u80fd\u8d1f\u8d23\u521b\u5efa\u548c\u5220\u9664\u5b83\u3002</li> </ol> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u786e\u4fdd\u4ee3\u7406\u7c7b\u548c\u771f\u5b9e\u4e3b\u9898\u7c7b\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\u3002</li> <li>\u4ee3\u7406\u7c7b\u5e94\u8be5\u5c0a\u91cd\u771f\u5b9e\u4e3b\u9898\u7684\u751f\u547d\u5468\u671f\uff0c\u907f\u514d\u4ea7\u751f\u6f5c\u5728\u7684\u8d44\u6e90\u6cc4\u9732\u7b49\u95ee\u9898\u3002</li> <li>\u4ee3\u7406\u53ef\u80fd\u4f1a\u5f15\u5165\u4e00\u4e9b\u989d\u5916\u7684\u5f00\u9500\uff0c\u9700\u8981\u6743\u8861\u4ee3\u7406\u5e26\u6765\u7684\u597d\u5904\u548c\u5176\u6027\u80fd\u5f00\u9500\u3002</li> </ul> <p>\u4ece\u4ee5\u4e0a\u53ef\u4ee5\u770b\u51fa\uff0c\u5b9e\u9645\u4e0a\u4ee3\u7406\u5c31\u662f\u8ba9\u771f\u5b9e\u4e3b\u9898\u4f5c\u4e3a\u5176\u4e2d\u7684\u4e00\u4e2a\u6210\u5458\uff0c\u5728\u8fd9\u4e2a\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e9b\u64cd\u4f5c\u3002\u5982\u6b64\uff0c\u5c31\u4f1a\u6709\u4e2a\u95ee\u9898\uff1a\u7ed9\u771f\u5b9e\u4e3b\u9898\u52a0\u4e00\u4e9b\u64cd\u4f5c\u7684\u51fd\u6570\u4e0d\u4e45\u53ef\u4ee5\u4e86\u5417\uff0c\u4e3a\u4ec0\u4e48\u8981\u641e\u4e00\u4e2a\u4ee3\u7406\u5462\uff1f</p> <p>\u7136\u800c\uff0c\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\u800c\u4e0d\u662f\u76f4\u63a5\u4fee\u6539\u771f\u5b9e\u4e3b\u9898\u7684\u539f\u56e0\u5728\u4e8e\u8bbe\u8ba1\u539f\u5219\u548c\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u4e00\u4e9b\u8003\u8651\uff1a</p> <ul> <li>\u5355\u4e00\u804c\u8d23\u539f\u5219</li> <li>\u5f00\u95ed\u539f\u5219</li> </ul> <p>\u8fd9\u4e24\u4e2a\u5c06\u5728\u53e6\u5916\u7684\u6587\u7ae0\u8fdb\u884c\u4ecb\u7ecd\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_10","title":"\u4eab\u5143\u6a21\u5f0f","text":"<p>\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\u9002\u7528\u4e8e\u5927\u91cf\u76f8\u4f3c\u5bf9\u8c61\u7684\u60c5\u51b5\uff0c\u5176\u4e2d\u8bb8\u591a\u5bf9\u8c61\u7684\u72b6\u6001\u53ef\u4ee5\u88ab\u5916\u90e8\u5316\u4ee5\u51cf\u5c11\u5185\u5b58\u5360\u7528\u3002</p> <p>\u4ee5\u6587\u672c\u7f16\u8f91\u5668\u4e2d\u5b57\u7b26\u7684\u8868\u793a\u4e3a\u4f8b\uff0c\u5b57\u7b26\u7684\u6837\u5f0f\uff08\u5982\u5b57\u4f53\u3001\u5927\u5c0f\u7b49\uff09\u53ef\u4ee5\u4f5c\u4e3a\u5185\u90e8\u72b6\u6001\uff0c\u800c\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u53ef\u4ee5\u89c6\u4e3a\u5916\u90e8\u72b6\u6001\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n#include &lt;unordered_map&gt;\n\n// \u4ee3\u8868\u6811\u7684\u7c7b\u578b\uff0c\u5982\u7eb9\u7406\u548c\u989c\u8272\nclass TreeType {\npublic:\n    std::string name;\n    std::string color;\n    std::string texture;\n\n    TreeType(const std::string&amp; name, const std::string&amp; color, const std::string&amp; texture)\n        : name(name), color(color), texture(texture) {}\n\n    void draw(const std::string&amp; canvas, int x, int y) {\n        // \u7ed8\u5236\u6811\u7684\u903b\u8f91\n        std::cout &lt;&lt; \"Drawing \" &lt;&lt; name &lt;&lt; \" tree at (\" &lt;&lt; x &lt;&lt; \",\" &lt;&lt; y &lt;&lt; \") on \" &lt;&lt; canvas &lt;&lt; std::endl;\n    }\n};\n\n// \u4eab\u5143\u5de5\u5382\uff0c\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406 TreeType \u5bf9\u8c61\nclass TreeFactory {\nprivate:\n    static std::unordered_map&lt;std::string, std::shared_ptr&lt;TreeType&gt;&gt; treeTypes;\n\npublic:\n    static std::shared_ptr&lt;TreeType&gt; getTreeType(const std::string&amp; name, const std::string&amp; color, const std::string&amp; texture) {\n        std::string key = name + \"_\" + color + \"_\" + texture;\n        auto it = treeTypes.find(key);\n        if (it == treeTypes.end()) {\n            auto type = std::make_shared&lt;TreeType&gt;(name, color, texture);\n            treeTypes[key] = type;\n            return type;\n        }\n        return it-&gt;second;\n    }\n};\n\nstd::unordered_map&lt;std::string, std::shared_ptr&lt;TreeType&gt;&gt; TreeFactory::treeTypes;\n\n// \u4ee3\u8868\u5355\u4e2a\u6811\uff0c\u5305\u542b\u5916\u90e8\u72b6\u6001\uff0c\u5982\u4f4d\u7f6e\nclass Tree {\nprivate:\n    int x, y;\n    std::shared_ptr&lt;TreeType&gt; type;\n\npublic:\n    Tree(int x, int y, std::shared_ptr&lt;TreeType&gt; type) : x(x), y(y), type(type) {}\n\n    void draw(const std::string&amp; canvas) {\n        type-&gt;draw(canvas, x, y);\n    }\n};\n\n// \u68ee\u6797\u7c7b\uff0c\u7ba1\u7406\u591a\u68f5\u6811\nclass Forest {\nprivate:\n    std::vector&lt;std::shared_ptr&lt;Tree&gt;&gt; trees;\n\npublic:\n    void plantTree(int x, int y, const std::string&amp; name, const std::string&amp; color, const std::string&amp; texture) {\n        auto type = TreeFactory::getTreeType(name, color, texture);\n        auto tree = std::make_shared&lt;Tree&gt;(x, y, type);\n        trees.push_back(tree);\n    }\n\n    void draw(const std::string&amp; canvas) {\n        for (const auto&amp; tree : trees) {\n            tree-&gt;draw(canvas);\n        }\n    }\n};\n\nint main() {\n    Forest forest;\n    forest.plantTree(1, 2, \"Oak\", \"Green\", \"OakTexture\");\n    forest.plantTree(3, 4, \"Pine\", \"Green\", \"PineTexture\");\n    forest.plantTree(1, 2, \"Oak\", \"Green\", \"OakTexture\"); // Will reuse existing TreeType\n\n    forest.draw(\"Canvas\");\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u4eab\u5143\uff08Flyweight\uff09\uff1a\u901a\u5e38\u662f\u4e00\u4e2a\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4eab\u5143\u5bf9\u8c61\u7684\u5171\u4eab\u884c\u4e3a\u3002<code>TreeType</code> \u7c7b\u626e\u6f14\u4e86\u4eab\u5143\u7684\u89d2\u8272\u3002\u5b83\u5305\u542b\u4e86\u6240\u6709\u6811\u5171\u4eab\u7684\u72b6\u6001\uff0c\u6bd4\u5982\u540d\u5b57\u3001\u989c\u8272\u548c\u7eb9\u7406\uff0c\u8fd9\u4e9b\u662f\u5185\u90e8\u72b6\u6001\u3002</li> <li>\u5177\u4f53\u4eab\u5143\uff08Concrete Flyweight\uff09\uff1a\u662f\u5b9e\u73b0\u4e86\u4eab\u5143\u63a5\u53e3\u7684\u5177\u4f53\u7c7b\u3002<code>TreeType</code> \u7c7b\u4e0d\u4ec5\u662f\u4eab\u5143\uff0c\u540c\u65f6\u4e5f\u662f\u5177\u4f53\u4eab\u5143\uff0c\u56e0\u4e3a\u5b83\u5b9e\u73b0\u4e86\u6811\u7c7b\u578b\u7684\u5171\u4eab\u529f\u80fd\u3002</li> <li>\u4eab\u5143\u5de5\u5382\uff08Flyweight Factory\uff09\uff1a\u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u4eab\u5143\u5bf9\u8c61\uff0c\u786e\u4fdd\u5408\u7406\u5730\u5171\u4eab\u5bf9\u8c61\u3002<code>TreeFactory</code> \u7c7b\u7ba1\u7406 <code>TreeType</code> \u5bf9\u8c61\u7684\u521b\u5efa\u548c\u5b58\u50a8\u3002</li> <li>\u5ba2\u6237\u7aef\uff08Client\uff09\uff1a\u4f7f\u7528\u4eab\u5143\u5bf9\u8c61\uff0c\u5e76\u7ef4\u62a4\u5916\u90e8\u72b6\u6001\u3002<code>Tree</code> \u548c <code>Forest</code> \u7c7b\u662f\u5ba2\u6237\u7aef\u3002<code>Tree</code> \u7c7b\u4fdd\u5b58\u4e86\u7279\u5b9a\u6811\u7684\u5916\u90e8\u72b6\u6001\uff08\u5982\u4f4d\u7f6e\uff09\uff0c\u800c <code>Forest</code> \u7c7b\u7ba1\u7406\u4e86\u591a\u4e2a\u6811\u5b9e\u4f8b\u5e76\u5728\u9700\u8981\u65f6\u4f7f\u7528\u4eab\u5143\u5de5\u5382\u3002</li> </ol> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u5173\u6ce8\u7ebf\u7a0b\u5b89\u5168\uff1a\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u9700\u8981\u786e\u4fdd\u4eab\u5143\u5de5\u5382\u7ba1\u7406\u4eab\u5143\u5bf9\u8c61\u7684\u8fc7\u7a0b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</li> <li>\u7ba1\u7406\u5916\u90e8\u72b6\u6001\uff1a\u5ba2\u6237\u7aef\u5e94\u8d1f\u8d23\u5916\u90e8\u72b6\u6001\u7684\u7ba1\u7406\u5de5\u4f5c\uff0c\u5e76\u5728\u9700\u8981\u7684\u65f6\u5019\u5c06\u5176\u4f20\u9012\u7ed9\u4eab\u5143\u5bf9\u8c61\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_11","title":"\u5916\u89c2\u6a21\u5f0f","text":"<p>\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\u6838\u5fc3\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u6765\u8bbf\u95ee\u5b50\u7cfb\u7edf\u4e2d\u7684\u4e00\u7ec4\u63a5\u53e3\u3002\u5916\u89c2\u6a21\u5f0f\u9690\u85cf\u4e86\u4f7f\u7528\u591a\u4e2a\u590d\u6742\u5bf9\u8c61\u7684\u7ec6\u8282\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5316\u7684\u63a5\u53e3\uff0c\u4f7f\u5f97\u5b50\u7cfb\u7edf\u66f4\u5bb9\u6613\u4f7f\u7528\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n// \u6a21\u62df\u7b2c\u4e09\u65b9\u89c6\u9891\u6587\u4ef6\u5904\u7406\u7c7b\nclass VideoFile {\n    // ...\n};\n\nclass OggCompressionCodec {\n    // ...\n};\n\nclass MPEG4CompressionCodec {\n    // ...\n};\n\nclass CodecFactory {\npublic:\n    // \u5047\u5b9a\u7684\u65b9\u6cd5\uff0c\u63d0\u53d6\u89c6\u9891\u6587\u4ef6\u7684\u7f16\u89e3\u7801\u5668\n    static void* extract(const VideoFile&amp; file) {\n        // ...\n        return nullptr; // \u8fd4\u56de\u7f16\u89e3\u7801\u5668\u7684\u6307\u9488\uff08\u793a\u4f8b\uff09\n    }\n};\n\nclass BitrateReader {\npublic:\n    // \u8bfb\u53d6\u5e76\u5904\u7406\u89c6\u9891\u6587\u4ef6\n    static void* read(const std::string&amp; filename, void* codec) {\n        // ...\n        return nullptr; // \u8fd4\u56de\u5904\u7406\u540e\u7684\u6570\u636e\uff08\u793a\u4f8b\uff09\n    }\n\n    // \u8f6c\u6362\u89c6\u9891\u6570\u636e\n    static void* convert(void* buffer, void* codec) {\n        // ...\n        return nullptr; // \u8fd4\u56de\u8f6c\u6362\u540e\u7684\u6570\u636e\uff08\u793a\u4f8b\uff09\n    }\n};\n\nclass AudioMixer {\npublic:\n    void* fix(void* result) {\n        // ...\n        return result; // \u8fd4\u56de\u4fee\u6b63\u540e\u7684\u6570\u636e\uff08\u793a\u4f8b\uff09\n    }\n};\n\n// \u5916\u89c2\u7c7b\uff0c\u63d0\u4f9b\u7b80\u5316\u7684\u89c6\u9891\u8f6c\u6362\u63a5\u53e3\nclass VideoConverter {\npublic:\n    void* convert(const std::string&amp; filename, const std::string&amp; format) {\n        VideoFile file(filename);\n        void* sourceCodec = CodecFactory::extract(file);\n\n        void* destinationCodec;\n        if (format == \"mp4\") {\n            destinationCodec = new MPEG4CompressionCodec();\n        } else {\n            destinationCodec = new OggCompressionCodec();\n        }\n\n        void* buffer = BitrateReader::read(filename, sourceCodec);\n        void* result = BitrateReader::convert(buffer, destinationCodec);\n        AudioMixer mixer;\n        result = mixer.fix(result);\n\n        return result; // \u8fd4\u56de\u6700\u7ec8\u7684\u89c6\u9891\u6570\u636e\n    }\n};\n\n// \u5e94\u7528\u7a0b\u5e8f\u7c7b\nclass Application {\npublic:\n    void main() {\n        VideoConverter converter;\n        void* mp4 = converter.convert(\"funny-cats-video.ogg\", \"mp4\");\n        // \u5047\u8bbe File \u7c7b\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u4fdd\u5b58\n        // File(mp4).save();\n    }\n};\n\nint main() {\n    Application app;\n    app.main();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u5916\u89c2\uff08Facade\uff09\uff1a\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u590d\u6742\u7cfb\u7edf\u7684\u7279\u5b9a\u90e8\u5206\uff0c\u4f46\u4e0d\u9690\u85cf\u7cfb\u7edf\u7684\u5168\u90e8\u529f\u80fd\uff0c\u5e76\u4e0d\u9650\u5236\u76f4\u63a5\u4f7f\u7528\u5b50\u7cfb\u7edf\u3002<code>VideoConverter</code> \u7c7b\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u786e\u5b9e\u626e\u6f14\u4e86\u5916\u89c2\u7684\u89d2\u8272\u3002</li> <li>\u5b50\u7cfb\u7edf\u7c7b\uff08Subsystems\uff09\uff1a\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u590d\u6742\u7684\u6a21\u5757\uff0c\u8fd9\u4e9b\u6a21\u5757\u5b9e\u73b0\u4e86\u7cfb\u7edf\u7684\u529f\u80fd\uff0c\u4f46\u5b83\u4eec\u7684\u63a5\u53e3\u53ef\u80fd\u590d\u6742\u6216\u96be\u4ee5\u7406\u89e3\uff0c\u4f8b\u5982 <code>VideoFile</code>, <code>CodecFactory</code>, <code>BitrateReader</code>, <code>AudioMixer</code> \u7b49\u3002\u3002</li> </ol> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u4e0d\u8981\u8fc7\u5ea6\u4f7f\u7528\uff1a\u53ea\u6709\u5f53\u5b50\u7cfb\u7edf\u771f\u7684\u5f88\u590d\u6742\u65f6\u624d\u5e94\u8be5\u4f7f\u7528\u5916\u89c2\u6a21\u5f0f\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u5f15\u5165\u4e0d\u5fc5\u8981\u7684\u5c42\u6b21\u3002</li> <li>\u53ef\u80fd\u6210\u4e3a\u4f9d\u8d56\u805a\u96c6\u70b9\uff1a\u56e0\u4e3a\u5916\u89c2\u7b80\u5316\u4e86\u5bf9\u5b50\u7cfb\u7edf\u7684\u8bbf\u95ee\uff0c\u5b83\u53ef\u80fd\u4f1a\u53d8\u6210\u9879\u76ee\u4e2d\u6240\u6709\u901a\u4fe1\u7684\u74f6\u9888\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_12","title":"\u88c5\u9970\u6a21\u5f0f","text":"<p>\u88c5\u9970\u6a21\u5f0f\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u539f\u59cb\u5bf9\u8c61\u7684\u7279\u6b8a\u5305\u88c5\u5bf9\u8c61\uff08\u5373\u88c5\u9970\u8005\uff09\u6765\u5b9e\u73b0\uff0c\u4f7f\u5176\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u7ed9\u5bf9\u8c61\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\uff0c\u800c\u4e0d\u6539\u53d8\u5176\u7ed3\u6784\u3002\u88c5\u9970\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\u7684\u66ff\u4ee3\u65b9\u6848\u6765\u6269\u5c55\u529f\u80fd\uff0c\u6bd4\u7ee7\u627f\u66f4\u6709\u5f39\u6027\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n// \u6570\u636e\u6e90\u63a5\u53e3\nclass DataSource {\npublic:\n    virtual void writeData(const std::string&amp; data) = 0;\n    virtual std::string readData() = 0;\n    virtual ~DataSource() {}\n};\n\n// \u5177\u4f53\u7ec4\u4ef6\nclass FileDataSource : public DataSource {\n    std::string filename;\npublic:\n    FileDataSource(const std::string&amp; filename) : filename(filename) {}\n\n    void writeData(const std::string&amp; data) override {\n        // \u5c06\u6570\u636e\u5199\u5165\u6587\u4ef6\n    }\n\n    std::string readData() override {\n        // \u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\n        return \"data\";\n    }\n};\n\n// \u88c5\u9970\u57fa\u7c7b\nclass DataSourceDecorator : public DataSource {\nprotected:\n    DataSource* wrappee;\n\npublic:\n    DataSourceDecorator(DataSource* source) : wrappee(source) {}\n\n    void writeData(const std::string&amp; data) override {\n        wrappee-&gt;writeData(data);\n    }\n\n    std::string readData() override {\n        return wrappee-&gt;readData();\n    }\n\n    virtual ~DataSourceDecorator() {\n        delete wrappee;\n    }\n};\n\n// \u52a0\u5bc6\u88c5\u9970\nclass EncryptionDecorator : public DataSourceDecorator {\npublic:\n    EncryptionDecorator(DataSource* source) : DataSourceDecorator(source) {}\n\n    void writeData(const std::string&amp; data) override {\n        // \u52a0\u5bc6\u6570\u636e\n        std::string encryptedData = \"encrypted_\" + data;\n        wrappee-&gt;writeData(encryptedData);\n    }\n\n    std::string readData() override {\n        std::string data = wrappee-&gt;readData();\n        // \u89e3\u5bc6\u6570\u636e\n        return data.substr(10); // \u793a\u4f8b\u89e3\u5bc6\n    }\n};\n\n// \u538b\u7f29\u88c5\u9970\nclass CompressionDecorator : public DataSourceDecorator {\npublic:\n    CompressionDecorator(DataSource* source) : DataSourceDecorator(source) {}\n\n    void writeData(const std::string&amp; data) override {\n        // \u538b\u7f29\u6570\u636e\n        std::string compressedData = \"compressed_\" + data;\n        wrappee-&gt;writeData(compressedData);\n    }\n\n    std::string readData() override {\n        std::string data = wrappee-&gt;readData();\n        // \u89e3\u538b\u6570\u636e\n        return data.substr(11); // \u793a\u4f8b\u89e3\u538b\n    }\n};\n\n// \u5e94\u7528\u7a0b\u5e8f\u7c7b\nclass Application {\npublic:\n    void dumbUsageExample() {\n        DataSource* source = new FileDataSource(\"somefile.dat\");\n        source-&gt;writeData(\"salaryRecords\");\n\n        source = new CompressionDecorator(source);\n        source-&gt;writeData(\"salaryRecords\");\n\n        source = new EncryptionDecorator(source);\n        source-&gt;writeData(\"salaryRecords\");\n\n        delete source; // \u6e05\u7406\u8d44\u6e90\n    }\n};\n\nint main() {\n    Application app;\n    app.dumbUsageExample();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u7ec4\u4ef6\uff08Component\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u63a5\u53e3\uff0c\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u5bf9\u8c61\u52a8\u6001\u5730\u6dfb\u52a0\u804c\u8d23\u3002\u5728\u672c\u4f8b\uff0c<code>DataSource</code> \u5145\u5f53\u4e86\u8fd9\u4e2a\u89d2\u8272\u3002\u5b83\u5b9a\u4e49\u4e86\u6240\u6709\u5177\u4f53\u7ec4\u4ef6\u548c\u88c5\u9970\u5fc5\u987b\u5b9e\u73b0\u7684\u64cd\u4f5c\uff0c\u4ece\u800c\u4f7f\u5b83\u4eec\u53ef\u4e92\u6362\u3002</li> <li>\u5177\u4f53\u7ec4\u4ef6\uff08Concrete Component\uff09\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23\u3002<code>FileDataSource</code> \u662f\u5177\u4f53\u7ec4\u4ef6\u3002\u5b83\u63d0\u4f9b\u4e86\u7ec4\u4ef6\u63a5\u53e3\u7684\u6807\u51c6\u5b9e\u73b0\uff0c\u4f46\u8fd8\u53ef\u4ee5\u88ab\u88c5\u9970\u4ee5\u589e\u52a0\u989d\u5916\u7684\u804c\u8d23\u3002</li> <li>\u88c5\u9970\uff08Decorator\uff09\uff1a\u5b9e\u73b0\uff08\u6216\u7ee7\u627f\uff09\u7ec4\u4ef6\u63a5\u53e3\u7684\u7c7b\uff0c\u6301\u6709\u4e00\u4e2a\u7ec4\u4ef6\uff08Component\uff09\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u4e0e\u7ec4\u4ef6\u63a5\u53e3\u4e00\u81f4\u7684\u63a5\u53e3\u3002<code>DataSourceDecorator</code> \u626e\u6f14\u8fd9\u4e2a\u89d2\u8272\u3002\u5b83\u57fa\u4e8e\u7ec4\u5408\u800c\u975e\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u6765\u589e\u52a0\u65b0\u7684\u529f\u80fd\u3002</li> <li>\u5177\u4f53\u88c5\u9970\uff08Concrete Decorator\uff09\uff1a\u88c5\u9970\u7684\u5b9e\u73b0\uff0c\u6dfb\u52a0\u804c\u8d23\u5230\u7ec4\u4ef6\u4e0a\u3002<code>EncryptionDecorator</code> \u548c <code>CompressionDecorator</code> \u662f\u5177\u4f53\u7684\u88c5\u9970\u3002\u5b83\u4eec\u7ee7\u627f\u6216\u5b9e\u73b0\u4e86\u88c5\u9970\u57fa\u7c7b\uff0c\u5e76\u5728\u6807\u51c6\u64cd\u4f5c\u4e2d\u6dfb\u52a0\u4e86\u989d\u5916\u7684\u884c\u4e3a\uff08\u5982\u52a0\u5bc6\u6216\u538b\u7f29\u6570\u636e\uff09\u3002</li> </ol> <p>\u6ce8\u610f\u70b9</p> <ul> <li>\u907f\u514d\u590d\u6742\u7684\u88c5\u9970\u94fe\uff1a\u8fc7\u591a\u7684\u5c42\u6b21\u4f1a\u4f7f\u7cfb\u7edf\u590d\u6742\u5316\u3002</li> <li>\u88c5\u9970\u4e0e\u7ee7\u627f\u7684\u9009\u62e9\uff1a\u867d\u7136\u88c5\u9970\u63d0\u4f9b\u4e86\u6bd4\u7ee7\u627f\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u6765\u6269\u5c55\u5bf9\u8c61\u529f\u80fd\uff0c\u4f46\u5b83\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8bbe\u8ba1\u4e2d\u51fa\u73b0\u8bb8\u591a\u5c0f\u5bf9\u8c61\uff0c\u4e14\u903b\u8f91\u53d8\u5f97\u590d\u6742\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_13","title":"\u7ec4\u5408\u6a21\u5f0f","text":"<p>\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\u662f\u7528\u4e8e\u5c06\u5bf9\u8c61\u7ec4\u5408\u6210\u6811\u5f62\u7ed3\u6784\u4ee5\u8868\u793a\u90e8\u5206-\u6574\u4f53\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u8fd9\u4f7f\u5f97\u5ba2\u6237\u7aef\u80fd\u591f\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u5bf9\u5355\u4e2a\u5bf9\u8c61\u548c\u7ec4\u5408\u5bf9\u8c61\u8fdb\u884c\u5904\u7406\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n// \u7ec4\u4ef6\u63a5\u53e3\u4f1a\u58f0\u660e\u7ec4\u5408\u4e2d\u7b80\u5355\u548c\u590d\u6742\u5bf9\u8c61\u7684\u901a\u7528\u64cd\u4f5c\u3002\nclass Graphic {\npublic:\n    virtual void move(int x, int y) = 0;\n    virtual void draw() = 0;\n};\n\n// \u53f6\u8282\u70b9\u7c7b\u4ee3\u8868\u7ec4\u5408\u7684\u7ec8\u7aef\u5bf9\u8c61\u3002\nclass Dot : public Graphic {\nprotected:\n    int x, y;\npublic:\n    Dot(int x, int y) : x(x), y(y) {}\n\n    void move(int dx, int dy) override {\n        x += dx;\n        y += dy;\n    }\n\n    void draw() override {\n        cout &lt;&lt; \"Dot at position (\" &lt;&lt; x &lt;&lt; \", \" &lt;&lt; y &lt;&lt; \")\" &lt;&lt; endl;\n    }\n};\n\n// \u6240\u6709\u7ec4\u4ef6\u7c7b\u90fd\u53ef\u4ee5\u6269\u5c55\u5176\u4ed6\u7ec4\u4ef6\u3002\nclass Circle : public Dot {\n    int radius;\npublic:\n    Circle(int x, int y, int radius) : Dot(x, y), radius(radius) {}\n\n    void draw() override {\n        cout &lt;&lt; \"Circle at position (\" &lt;&lt; x &lt;&lt; \", \" &lt;&lt; y &lt;&lt; \") with radius \" &lt;&lt; radius &lt;&lt; endl;\n    }\n};\n\n// \u7ec4\u5408\u7c7b\u8868\u793a\u53ef\u80fd\u5305\u542b\u5b50\u9879\u76ee\u7684\u590d\u6742\u7ec4\u4ef6\u3002\nclass CompoundGraphic : public Graphic {\n    vector&lt;Graphic*&gt; children;\npublic:\n    void add(Graphic* child) {\n        children.push_back(child);\n    }\n\n    void remove(Graphic* child) {\n        // \u4ece children \u4e2d\u79fb\u9664\u6307\u5b9a\u7684 child\n        // \u8fd9\u91cc\u4e3a\u4e86\u7b80\u5316\uff0c\u7701\u7565\u4e86\u5220\u9664\u903b\u8f91\n    }\n\n    void move(int dx, int dy) override {\n        for (auto&amp; child : children) {\n            child-&gt;move(dx, dy);\n        }\n    }\n\n    void draw() override {\n        for (auto&amp; child : children) {\n            child-&gt;draw();\n        }\n        // \u53ef\u4ee5\u6dfb\u52a0\u903b\u8f91\u4ee5\u7ed8\u5236\u590d\u5408\u56fe\u5f62\u7684\u8fb9\u754c\u7b49\n    }\n};\n\n// \u793a\u4f8b\u4f7f\u7528\nint main() {\n    CompoundGraphic all;\n    all.add(new Dot(1, 2));\n    all.add(new Circle(5, 3, 10));\n\n    // \u5c06\u6240\u9700\u7ec4\u4ef6\u7ec4\u5408\u4e3a\u590d\u6742\u7684\u7ec4\u5408\u7ec4\u4ef6\u3002\n    CompoundGraphic group;\n    // \u5047\u8bbe\u5df2\u9009\u62e9\u4e86\u4e00\u4e9b\u7ec4\u4ef6\n    // group.add(...); \n    // all.remove(...);\n    all.add(&amp;group);\n\n    // \u6240\u6709\u7ec4\u4ef6\u90fd\u5c06\u88ab\u7ed8\u5236\u3002\n    all.draw();\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u7ec4\u4ef6\uff08Component\uff09\uff1a\u5b9a\u4e49\u4e86\u53f6\u5b50\u548c\u5bb9\u5668\u7684\u5171\u6709\u64cd\u4f5c\u548c\u63a5\u53e3\u3002<code>Graphic</code> \u7c7b\u4ee3\u8868\u4e86\u7ec4\u4ef6\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u53f6\u5b50\uff08Leaf\uff09\u548c\u7ec4\u5408\uff08Composite\uff09\u5bf9\u8c61\u7684\u5171\u901a\u64cd\u4f5c\u3002</li> <li>\u53f6\u5b50\uff08Leaf\uff09\uff1a\u4ee3\u8868\u7ec4\u5408\u4e2d\u7684\u5bf9\u8c61\u58f0\u660e\u63a5\u53e3\u7528\u4e8e\u8bbf\u95ee\u548c\u7ba1\u7406\u5b50\u7ec4\u4ef6\uff0c\u53f6\u5b50\u5bf9\u8c61\u6ca1\u6709\u5b50\u7ec4\u4ef6\u3002<code>Dot</code> \u548c <code>Circle</code> \u7c7b\u662f\u53f6\u5b50\u5bf9\u8c61\u7684\u793a\u4f8b\u3002\u5b83\u4eec\u662f\u7ec4\u5408\u7684\u57fa\u672c\u5143\u7d20\u3002</li> <li>\u7ec4\u5408\uff08Composite\uff09\uff1a\u4e00\u4e2a\u5bb9\u5668\uff0c\u5305\u542b\u4e86\u4e00\u7ec4\u53f6\u5b50\u5bf9\u8c61\u3002\u5b9e\u73b0\u4e86\u7ec4\u4ef6\u63a5\u53e3\u4e2d\u4e0e\u5b50\u90e8\u4ef6\u6709\u5173\u7684\u64cd\u4f5c\u3002<code>CompoundGraphic</code> \u7c7b\u662f\u4e00\u4e2a\u7ec4\u5408\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u5305\u542b\u53f6\u5b50\u6216\u5176\u4ed6\u8f83\u5c0f\u7684\u7ec4\u5408\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_14","title":"\u6865\u63a5\u6a21\u5f0f","text":"<p>\u6865\u63a5\u6a21\u5f0f(Bridge Pattern)\u5c06\u4e00\u4e2a\u5927\u7c7b\u6216\u4e00\u7cfb\u5217\u7d27\u5bc6\u76f8\u5173\u7684\u7c7b\u62c6\u5206\u4e3a\u62bd\u8c61\u548c\u5b9e\u73b0\u4e24\u4e2a\u72ec\u7acb\u7684\u5c42\u6b21\u7ed3\u6784\uff0c \u4ece\u800c\u80fd\u5728\u5f00\u53d1\u65f6\u5206\u522b\u4f7f\u7528\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\n// \u5b9e\u73b0\u90e8\u5206\u63a5\u53e3\nclass Device {\npublic:\n    virtual bool isEnabled() const = 0;\n    virtual void enable() = 0;\n    virtual void disable() = 0;\n    virtual int getVolume() const = 0;\n    virtual void setVolume(int percent) = 0;\n    virtual int getChannel() const = 0;\n    virtual void setChannel(int channel) = 0;\n    virtual ~Device() {}\n};\n\n// \u5177\u4f53\u5b9e\u73b0\uff1a\u7535\u89c6\nclass Tv : public Device {\n    // Tv \u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\n    // ...\n};\n\n// \u5177\u4f53\u5b9e\u73b0\uff1a\u6536\u97f3\u673a\nclass Radio : public Device {\n    // Radio \u7c7b\u7684\u5177\u4f53\u5b9e\u73b0\n    // ...\n};\n\n// \u62bd\u8c61\u90e8\u5206\nclass RemoteControl {\nprotected:\n    std::shared_ptr&lt;Device&gt; device;\n\npublic:\n    RemoteControl(std::shared_ptr&lt;Device&gt; device) : device(device) {}\n\n    void togglePower() {\n        if (device-&gt;isEnabled())\n            device-&gt;disable();\n        else\n            device-&gt;enable();\n    }\n\n    void volumeDown() {\n        device-&gt;setVolume(device-&gt;getVolume() - 10);\n    }\n\n    void volumeUp() {\n        device-&gt;setVolume(device-&gt;getVolume() + 10);\n    }\n\n    void channelDown() {\n        device-&gt;setChannel(device-&gt;getChannel() - 1);\n    }\n\n    void channelUp() {\n        device-&gt;setChannel(device-&gt;getChannel() + 1);\n    }\n};\n\n// \u6269\u5c55\u7684\u62bd\u8c61\u90e8\u5206\nclass AdvancedRemoteControl : public RemoteControl {\npublic:\n    using RemoteControl::RemoteControl;\n\n    void mute() {\n        device-&gt;setVolume(0);\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    auto tv = std::make_shared&lt;Tv&gt;();\n    RemoteControl remote(tv);\n    remote.togglePower();\n\n    auto radio = std::make_shared&lt;Radio&gt;();\n    AdvancedRemoteControl advancedRemote(radio);\n    advancedRemote.togglePower();\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u62bd\u8c61\uff08Abstraction\uff09\uff1a\u5b9a\u4e49\u4e86\u9ad8\u5c42\u63a7\u5236\u903b\u8f91\u7684\u63a5\u53e3\u3002\u5b83\u4f1a\u4fdd\u6301\u4e00\u4e2a\u6307\u5411\u5b9e\u73b0\u90e8\u5206\u7684\u5f15\u7528\u3002<code>RemoteControl</code> \u7c7b\u626e\u6f14\u4e86\u8fd9\u4e2a\u89d2\u8272\u3002\u5b83\u5b9a\u4e49\u4e86\u63a7\u5236\u903b\u8f91\uff0c\u5e76\u6301\u6709\u5bf9\u5b9e\u73b0\u90e8\u5206\uff08\u5373<code>Device</code>\uff09\u7684\u5f15\u7528\u3002</li> <li>\u7ec6\u5316\u62bd\u8c61\uff08Refined Abstraction\uff09\uff1a\u6269\u5c55\u6216\u7ec6\u5316\u7531\u62bd\u8c61\u5b9a\u4e49\u7684\u63a5\u53e3\u3002<code>AdvancedRemoteControl</code>\u5b9e\u73b0\u4e86<code>RemoteControl</code> \u7c7b\u7684\u7ec6\u5316\u62d3\u5c55\u3002</li> <li>\u5b9e\u73b0\u8005\uff08Implementor\uff09\uff1a\u5b9a\u4e49\u4e86\u5e95\u5c42\u64cd\u4f5c\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u88ab\u62bd\u8c61\u90e8\u5206\u7684\u65b9\u6cd5\u6240\u8c03\u7528\u3002<code>Device</code> \u63a5\u53e3\u626e\u6f14\u4e86\u8fd9\u4e2a\u89d2\u8272\uff0c\u5b83\u5b9a\u4e49\u4e86\u6240\u6709\u8bbe\u5907\u5fc5\u987b\u5b9e\u73b0\u7684\u57fa\u672c\u64cd\u4f5c\u3002</li> <li>\u5177\u4f53\u5b9e\u73b0\u8005\uff08Concrete Implementors\uff09\uff1a\u5b9e\u73b0\u5b9e\u73b0\u8005\u63a5\u53e3\u7684\u5177\u4f53\u7c7b\u3002<code>Tv</code> \u548c <code>Radio</code> \u7c7b\u662f\u5177\u4f53\u5b9e\u73b0\u8005\uff0c\u56e0\u4e3a\u5b83\u4eec\u5b9e\u73b0\u4e86 <code>Device</code> \u63a5\u53e3\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_15","title":"\u9002\u914d\u5668\u6a21\u5f0f","text":"<p>\u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\u5141\u8bb8\u4e0d\u517c\u5bb9\u7684\u63a5\u53e3\u4e4b\u95f4\u8fdb\u884c\u4ea4\u4e92\u3002\u9002\u914d\u5668\u6a21\u5f0f\u901a\u8fc7\u5305\u88c5\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u5e76\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3\uff0c\u4f7f\u539f\u672c\u7531\u4e8e\u63a5\u53e3\u4e0d\u517c\u5bb9\u800c\u4e0d\u80fd\u4e00\u8d77\u5de5\u4f5c\u7684\u7c7b\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt;\n\n// \u5706\u5b54\nclass RoundHole {\n    double radius;\npublic:\n    RoundHole(double radius) : radius(radius) {}\n\n    double getRadius() const {\n        return radius;\n    }\n\n    bool fits(const RoundPeg&amp; peg) {\n        return this-&gt;getRadius() &gt;= peg.getRadius();\n    }\n};\n\n// \u5706\u9489\nclass RoundPeg {\n    double radius;\npublic:\n    RoundPeg(double radius) : radius(radius) {}\n\n    double getRadius() const {\n        return radius;\n    }\n};\n\n// \u65b9\u9489\nclass SquarePeg {\n    double width;\npublic:\n    SquarePeg(double width) : width(width) {}\n\n    double getWidth() const {\n        return width;\n    }\n};\n\n// \u65b9\u9489\u9002\u914d\u5668\nclass SquarePegAdapter : public RoundPeg {\n    SquarePeg peg;\npublic:\n    SquarePegAdapter(const SquarePeg&amp; peg) : RoundPeg(peg.getWidth() * std::sqrt(2) / 2), peg(peg) {}\n\n    double getRadius() const {\n        // \u8ba1\u7b97\u4e00\u4e2a\u5c0f\u4e8e\u7b49\u4e8e\u65b9\u9489\u5bbd\u5ea6\u4e00\u534a\u7684\u5706\u7684\u534a\u5f84\n        return peg.getWidth() * std::sqrt(2) / 2;\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    RoundHole hole(5);\n    RoundPeg rpeg(5);\n    if (hole.fits(rpeg)) {\n        std::cout &lt;&lt; \"Round peg r5 fits round hole r5.\" &lt;&lt; std::endl;\n    }\n\n    SquarePeg smallSqPeg(5);\n    SquarePeg largeSqPeg(10);\n\n    // \u65b9\u9489\u4e0d\u76f4\u63a5\u4e0e\u5706\u5b54\u517c\u5bb9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7f16\u8bd1\n    // hole.fits(smallSqPeg);\n\n    // \u4f7f\u7528\u9002\u914d\u5668\n    SquarePegAdapter smallSqPegAdapter(smallSqPeg);\n    SquarePegAdapter largeSqPegAdapter(largeSqPeg);\n    if (hole.fits(smallSqPegAdapter)) {\n        std::cout &lt;&lt; \"Square peg w5 fits round hole r5.\" &lt;&lt; std::endl;\n    }\n    if (!hole.fits(largeSqPegAdapter)) {\n        std::cout &lt;&lt; \"Square peg w10 does not fit into round hole r5.\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u76ee\u6807\u63a5\u53e3\uff08Target\uff09\uff1a\u5b9a\u4e49\u4e86\u5ba2\u6237\u7aef\u4f7f\u7528\u7684\u4e0e\u7279\u5b9a\u9886\u57df\u76f8\u5173\u7684\u63a5\u53e3\u3002<code>RoundPeg</code> \u5b9e\u9645\u4e0a\u626e\u6f14\u4e86\u8fd9\u4e2a\u89d2\u8272\uff0c\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u4e0e <code>RoundHole</code> \u517c\u5bb9\u7684\u63a5\u53e3\u3002</li> <li>\u9700\u8981\u9002\u914d\u7684\u7c7b\uff08Adaptee\uff09\uff1a\u4e00\u4e2a\u6216\u591a\u4e2a\u5177\u6709\u4e0d\u517c\u5bb9\u63a5\u53e3\u7684\u7c7b\u3002<code>SquarePeg</code> \u662f\u9700\u8981\u9002\u914d\u7684\u7c7b\uff0c\u56e0\u4e3a\u5b83\u7684\u63a5\u53e3\u4e0e <code>RoundHole</code> \u4e0d\u517c\u5bb9\u3002</li> <li>\u9002\u914d\u5668\uff08Adapter\uff09\uff1a\u5c06 <code>Adaptee</code> \u7684\u63a5\u53e3\u8f6c\u6362\u6210 <code>Target</code> \u63a5\u53e3\u3002<code>SquarePegAdapter</code> \u662f\u9002\u914d\u5668\uff0c\u5b83\u5c06 <code>SquarePeg</code> \u7684\u63a5\u53e3\u9002\u914d\u4e3a <code>RoundPeg</code> \u7684\u63a5\u53e3\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_16","title":"\u884c\u4e3a","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_17","title":"\u8bbf\u95ee\u8005\u6a21\u5f0f","text":"<p>\u8bbf\u95ee\u8005\u6a21\u5f0f\u5411\u4e00\u4e2a\u5bf9\u8c61\u7ed3\u6784\u6dfb\u52a0\u65b0\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u4fee\u6539\u8fd9\u4e9b\u5bf9\u8c61\u7684\u7c7b\u3002\u8fd9\u79cd\u6a21\u5f0f\u521b\u5efa\u4e86\u4e00\u4e2a\u8bbf\u95ee\u8005\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5b9e\u73b0\u4e86\u5305\u542b\u8bbf\u95ee\u8005\u6240\u9700\u6267\u884c\u7684\u64cd\u4f5c\u7684\u65b9\u6cd5\u3002\u5f53\u8bbf\u95ee\u8005\u88ab\u4f20\u9012\u7ed9\u5bf9\u8c61\u7ed3\u6784\u7684\u5143\u7d20\u65f6\uff0c\u8fd9\u4e9b\u5143\u7d20\u4f1a\u8c03\u7528\u8bbf\u95ee\u8005\u7684\u65b9\u6cd5\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\n// \u524d\u7f6e\u58f0\u660e\nclass ConcreteComponentA;\nclass ConcreteComponentB;\n\n// \u8bbf\u95ee\u8005\u63a5\u53e3\nclass Visitor {\npublic:\n    virtual void visitConcreteComponentA(const ConcreteComponentA *element) const = 0;\n    virtual void visitConcreteComponentB(const ConcreteComponentB *element) const = 0;\n};\n\n// \u7ec4\u4ef6\u63a5\u53e3\nclass Component {\npublic:\n    virtual ~Component() {}\n    virtual void accept(Visitor *visitor) const = 0;\n};\n\n// \u5177\u4f53\u7ec4\u4ef6A\nclass ConcreteComponentA : public Component {\npublic:\n    void accept(Visitor *visitor) const override {\n        visitor-&gt;visitConcreteComponentA(this);\n    }\n\n    std::string exclusiveMethodOfConcreteComponentA() const {\n        return \"A\";\n    }\n};\n\n// \u5177\u4f53\u7ec4\u4ef6B\nclass ConcreteComponentB : public Component {\npublic:\n    void accept(Visitor *visitor) const override {\n        visitor-&gt;visitConcreteComponentB(this);\n    }\n\n    std::string specialMethodOfConcreteComponentB() const {\n        return \"B\";\n    }\n};\n\n// \u5177\u4f53\u8bbf\u95ee\u8005\nclass ConcreteVisitor1 : public Visitor {\npublic:\n    void visitConcreteComponentA(const ConcreteComponentA *element) const override {\n        std::cout &lt;&lt; \"ConcreteVisitor1: \" &lt;&lt; element-&gt;exclusiveMethodOfConcreteComponentA() &lt;&lt; \"\\n\";\n    }\n\n    void visitConcreteComponentB(const ConcreteComponentB *element) const override {\n        std::cout &lt;&lt; \"ConcreteVisitor1: \" &lt;&lt; element-&gt;specialMethodOfConcreteComponentB() &lt;&lt; \"\\n\";\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    std::vector&lt;Component*&gt; components = {new ConcreteComponentA, new ConcreteComponentB};\n    ConcreteVisitor1 *visitor1 = new ConcreteVisitor1;\n    for (const Component *comp : components) {\n        comp-&gt;accept(visitor1);\n    }\n\n    for (Component *comp : components) {\n        delete comp;\n    }\n    delete visitor1;\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u7ec4\u4ef6\u63a5\u53e3\uff08Component\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a <code>accept</code> \u65b9\u6cd5\uff0c\u63a5\u53d7\u4e00\u4e2a\u8bbf\u95ee\u8005\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002</li> <li>\u5177\u4f53\u7ec4\u4ef6\uff08ConcreteComponent\uff09\uff1a\u5b9e\u73b0\u7ec4\u4ef6\u63a5\u53e3\uff0c\u63d0\u4f9b\u63a5\u53d7\u8bbf\u95ee\u8005\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u8005\u53ef\u4ee5\u8bbf\u95ee\u5176\u5143\u7d20\u3002</li> <li>\u8bbf\u95ee\u8005\u63a5\u53e3\uff08Visitor\uff09\uff1a\u4e3a\u6bcf\u79cd\u7c7b\u578b\u7684\u5177\u4f53\u7ec4\u4ef6\u58f0\u660e\u4e00\u7ec4\u8bbf\u95ee\u65b9\u6cd5\u3002</li> <li>\u5177\u4f53\u8bbf\u95ee\u8005\uff08ConcreteVisitor\uff09\uff1a\u5b9e\u73b0\u8bbf\u95ee\u8005\u63a5\u53e3\uff0c\u5b9a\u4e49\u5bf9\u4e8e\u6bcf\u79cd\u7c7b\u578b\u7684\u5177\u4f53\u7ec4\u4ef6\u7684\u8bbf\u95ee\u884c\u4e3a\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u521b\u5efa\u5177\u4f53\u7ec4\u4ef6\uff0c\u5e76\u7528\u8bbf\u95ee\u8005\u5bf9\u8c61\u6765\u8bbf\u95ee\u5b83\u4eec\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_18","title":"\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f","text":"<p>\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u7684\u7b97\u6cd5\u7684\u9aa8\u67b6\uff0c\u5c06\u67d0\u4e9b\u6b65\u9aa4\u5ef6\u8fdf\u5230\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u3002\u8fd9\u5141\u8bb8\u5b50\u7c7b\u5728\u4e0d\u6539\u53d8\u7b97\u6cd5\u7ed3\u6784\u7684\u524d\u63d0\u4e0b\u91cd\u65b0\u5b9a\u4e49\u7b97\u6cd5\u7684\u67d0\u4e9b\u7279\u5b9a\u6b65\u9aa4\u3002</p> <p>\u5728\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u4e2d\uff0c\u4e00\u4e2a\u62bd\u8c61\u7c7b\u516c\u5f00\u5b9a\u4e49\u4e86\u6267\u884c\u5b83\u7684\u65b9\u6cd5\u7684\u65b9\u5f0f/\u6a21\u677f\u3002\u5b83\u7684\u5b50\u7c7b\u53ef\u4ee5\u6309\u9700\u8981\u91cd\u5199\u65b9\u6cd5\u5b9e\u73b0\uff0c\u4f46\u8c03\u7528\u5c06\u4ee5\u62bd\u8c61\u7c7b\u4e2d\u5b9a\u4e49\u7684\u65b9\u5f0f\u8fdb\u884c\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n\n// \u62bd\u8c61\u7c7b\uff0c\u5b9a\u4e49\u6a21\u677f\u65b9\u6cd5\u7684\u9aa8\u67b6\nclass AbstractClass {\npublic:\n    // \u6a21\u677f\u65b9\u6cd5\uff0c\u5b9a\u4e49\u7b97\u6cd5\u7684\u9aa8\u67b6\n    void templateMethod() const {\n        this-&gt;baseOperation1();\n        this-&gt;requiredOperations1();\n        this-&gt;baseOperation2();\n        this-&gt;hook1();\n        this-&gt;requiredOperation2();\n        this-&gt;baseOperation3();\n        this-&gt;hook2();\n    }\n\n    // \u8fd9\u4e9b\u64cd\u4f5c\u5df2\u6709\u5b9e\u73b0\n    void baseOperation1() const {\n        std::cout &lt;&lt; \"AbstractClass says: I am doing the bulk of the work\\n\";\n    }\n    void baseOperation2() const {\n        std::cout &lt;&lt; \"AbstractClass says: But I let subclasses override some operations\\n\";\n    }\n    void baseOperation3() const {\n        std::cout &lt;&lt; \"AbstractClass says: But I am doing the bulk of the work anyway\\n\";\n    }\n\n    // \u8fd9\u4e9b\u64cd\u4f5c\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u5b9e\u73b0\n    virtual void requiredOperations1() const = 0;\n    virtual void requiredOperation2() const = 0;\n\n    // \u8fd9\u662f\u94a9\u5b50\uff0c\u5b50\u7c7b\u53ef\u4ee5\u8986\u76d6\u5b83\uff0c\u4f46\u4e0d\u662f\u5fc5\u987b\u7684\n    virtual void hook1() const {}\n    virtual void hook2() const {}\n};\n\n// \u5177\u4f53\u7c7b\u5b9e\u73b0\u62bd\u8c61\u7c7b\u7684\u64cd\u4f5c\nclass ConcreteClass1 : public AbstractClass {\nprotected:\n    void requiredOperations1() const override {\n        std::cout &lt;&lt; \"ConcreteClass1 says: Implemented Operation1\\n\";\n    }\n    void requiredOperation2() const override {\n        std::cout &lt;&lt; \"ConcreteClass1 says: Implemented Operation2\\n\";\n    }\n};\n\nclass ConcreteClass2 : public AbstractClass {\nprotected:\n    void requiredOperations1() const override {\n        std::cout &lt;&lt; \"ConcreteClass2 says: Implemented Operation1\\n\";\n    }\n    void requiredOperation2() const override {\n        std::cout &lt;&lt; \"ConcreteClass2 says: Implemented Operation2\\n\";\n    }\n    void hook1() const override {\n        std::cout &lt;&lt; \"ConcreteClass2 says: Overridden Hook1\\n\";\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid clientCode(AbstractClass *class_) {\n    class_-&gt;templateMethod();\n}\n\nint main() {\n    std::cout &lt;&lt; \"Same client code can work with different subclasses:\\n\";\n    ConcreteClass1 *concreteClass1 = new ConcreteClass1;\n    clientCode(concreteClass1);\n    std::cout &lt;&lt; \"\\n\";\n\n    std::cout &lt;&lt; \"Same client code can work with different subclasses:\\n\";\n    ConcreteClass2 *concreteClass2 = new ConcreteClass2;\n    clientCode(concreteClass2);\n\n    delete concreteClass1;\n    delete concreteClass2;\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u62bd\u8c61\u7c7b\uff08AbstractClass\uff09\uff1a\u5b9a\u4e49\u6a21\u677f\u65b9\u6cd5\u7684\u9aa8\u67b6\u548c\u7b97\u6cd5\u7684\u6b65\u9aa4\u3002</li> <li>\u5177\u4f53\u7c7b\uff08ConcreteClass\uff09\uff1a\u5b9e\u73b0\u62bd\u8c61\u7c7b\u4e2d\u7684\u62bd\u8c61\u64cd\u4f5c\uff0c\u63d0\u4f9b\u7b97\u6cd5\u4e2d\u7684\u5177\u4f53\u884c\u4e3a\u3002</li> <li>\u6a21\u677f\u65b9\u6cd5\uff08Template Method\uff09\uff1a\u5728\u62bd\u8c61\u7c7b\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u7b97\u6cd5\u9aa8\u67b6\u7684\u65b9\u6cd5\u3002\u5b83\u6309\u987a\u5e8f\u8c03\u7528\u7b97\u6cd5\u7684\u6b65\u9aa4\uff0c\u5176\u4e2d\u4e00\u4e9b\u6b65\u9aa4\u53ef\u4ee5\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\u3002</li> <li>\u94a9\u5b50\uff08Hook\uff09\uff1a\u5728\u62bd\u8c61\u7c7b\u4e2d\u63d0\u4f9b\u7684\u65b9\u6cd5\uff0c\u901a\u5e38\u4e0d\u505a\u4e8b\u6216\u9ed8\u8ba4\u884c\u4e3a\u3002\u5b50\u7c7b\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u8986\u76d6\u5b83\u4eec\u4ee5\u5f71\u54cd\u6a21\u677f\u65b9\u6cd5\u4e2d\u7684\u7b97\u6cd5\u6d41\u7a0b\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u4f7f\u7528\u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u5177\u4f53\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u62bd\u8c61\u63a5\u53e3\u8c03\u7528\u6a21\u677f\u65b9\u6cd5\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_19","title":"\u7b56\u7565\u6a21\u5f0f","text":"<p>\u7b56\u7565\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7b97\u6cd5\uff0c\u5e76\u5c06\u6bcf\u4e2a\u7b97\u6cd5\u5c01\u88c5\u8d77\u6765\uff0c\u4f7f\u5b83\u4eec\u53ef\u4ee5\u4e92\u76f8\u66ff\u6362\u3002\u7b56\u7565\u6a21\u5f0f\u8ba9\u7b97\u6cd5\u7684\u53d8\u5316\u72ec\u7acb\u4e8e\u4f7f\u7528\u7b97\u6cd5\u7684\u5ba2\u6237\u3002\u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e09\u4e2a\u4e3b\u8981\u89d2\u8272\uff1a\u4e0a\u4e0b\u6587\uff08Context\uff09\u3001\u7b56\u7565\uff08Strategy\uff09\u63a5\u53e3\u548c\u5177\u4f53\u7b56\u7565\uff08Concrete Strategies\uff09\u3002</p> <p>\u5728\u7b56\u7565\u6a21\u5f0f\u4e2d\uff0c\u4e0a\u4e0b\u6587\u662f\u4e00\u4e2a\u4f7f\u7528\u591a\u79cd\u7b56\u7565\u7684\u7c7b\uff0c\u7b56\u7565\u63a5\u53e3\u5b9a\u4e49\u4e86\u6240\u6709\u652f\u6301\u7684\u7b97\u6cd5\u7684\u516c\u5171\u64cd\u4f5c\uff0c\u800c\u5177\u4f53\u7b56\u7565\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u7b97\u6cd5\u3002\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u5b9e\u73b0\u7b97\u6cd5\u903b\u8f91\uff0c\u800c\u662f\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u7b56\u7565\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5e76\u5c06\u5de5\u4f5c\u59d4\u6258\u7ed9\u7b56\u7565\u5bf9\u8c61\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\n// \u7b56\u7565\u63a5\u53e3\nclass Strategy {\npublic:\n    virtual ~Strategy() {}\n    virtual std::string doAlgorithm(const std::vector&lt;std::string&gt; &amp;data) const = 0;\n};\n\n// \u5177\u4f53\u7b56\u7565A\nclass ConcreteStrategyA : public Strategy {\npublic:\n    std::string doAlgorithm(const std::vector&lt;std::string&gt; &amp;data) const override {\n        std::string result;\n        for (std::string letter : data) {\n            result += letter;\n        }\n        std::sort(result.begin(), result.end());\n        return result;\n    }\n};\n\n// \u5177\u4f53\u7b56\u7565B\nclass ConcreteStrategyB : public Strategy {\npublic:\n    std::string doAlgorithm(const std::vector&lt;std::string&gt; &amp;data) const override {\n        std::string result;\n        for (std::string letter : data) {\n            result += letter;\n        }\n        std::sort(result.begin(), result.end());\n        std::reverse(result.begin(), result.end());\n        return result;\n    }\n};\n\n// \u4e0a\u4e0b\u6587\nclass Context {\nprivate:\n    std::unique_ptr&lt;Strategy&gt; strategy_;\npublic:\n    Context(Strategy *strategy = nullptr) : strategy_(strategy) {}\n\n    void setStrategy(Strategy *strategy) {\n        strategy_.reset(strategy);\n    }\n\n    void doSomeBusinessLogic() const {\n        // \u4e0a\u4e0b\u6587\u4e0d\u77e5\u9053\u5177\u4f53\u7b56\u7565\u7684\u7c7b\n        std::cout &lt;&lt; \"Context: Sorting data using the strategy (not sure how it'll do it)\\n\";\n        std::vector&lt;std::string&gt; data = {\"a\", \"e\", \"c\", \"b\", \"d\"};\n        std::string result = strategy_-&gt;doAlgorithm(data);\n        std::cout &lt;&lt; result &lt;&lt; \"\\n\";\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    Context *context = new Context(new ConcreteStrategyA);\n    std::cout &lt;&lt; \"Client: Strategy is set to normal sorting.\\n\";\n    context-&gt;doSomeBusinessLogic();\n    std::cout &lt;&lt; \"\\n\";\n\n    std::cout &lt;&lt; \"Client: Strategy is set to reverse sorting.\\n\";\n    context-&gt;setStrategy(new ConcreteStrategyB);\n    context-&gt;doSomeBusinessLogic();\n\n    delete context;\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u7b56\u7565\u63a5\u53e3\uff08Strategy\uff09\uff1a\u5b9a\u4e49\u6240\u6709\u652f\u6301\u7684\u7b97\u6cd5\u7684\u516c\u5171\u63a5\u53e3\u3002\u4e0a\u4e0b\u6587\u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\u6765\u8c03\u7528\u5177\u4f53\u7b56\u7565\u5b9a\u4e49\u7684\u7b97\u6cd5\u3002</li> <li>\u5177\u4f53\u7b56\u7565\uff08Concrete Strategies\uff09\uff1a\u5b9e\u73b0\u7b56\u7565\u63a5\u53e3\u7684\u7c7b\uff0c\u63d0\u4f9b\u5177\u4f53\u7684\u7b97\u6cd5\u5b9e\u73b0\u3002</li> <li>\u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u7ef4\u62a4\u4e00\u4e2a\u5bf9\u7b56\u7565\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u4e0a\u4e0b\u6587\u4e0d\u76f4\u63a5\u5b9e\u73b0\u7b97\u6cd5\uff0c\u800c\u662f\u59d4\u6258\u7ed9\u7b56\u7565\u5bf9\u8c61\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u521b\u5efa\u5177\u4f53\u7b56\u7565\u5bf9\u8c61\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9\u4e0a\u4e0b\u6587\u3002\u5ba2\u6237\u7aef\u77e5\u9053\u54ea\u79cd\u7b56\u7565\u9002\u5408\u5176\u9700\u6c42\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u66f4\u6539\u7b56\u7565\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_20","title":"\u72b6\u6001\u6a21\u5f0f","text":"<p>\u72b6\u6001\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u5141\u8bb8\u4e00\u4e2a\u5bf9\u8c61\u5728\u5176\u5185\u90e8\u72b6\u6001\u53d8\u5316\u65f6\u6539\u53d8\u5176\u884c\u4e3a\u3002\u8fd9\u79cd\u6a21\u5f0f\u901a\u8fc7\u5c06\u6bcf\u4e2a\u72b6\u6001\u7684\u884c\u4e3a\u5c01\u88c5\u5230\u5bf9\u5e94\u7684\u72b6\u6001\u7c7b\u4e2d\uff0c\u4f7f\u5f97\u5bf9\u8c61\u770b\u4e0a\u53bb\u4f3c\u4e4e\u6539\u53d8\u4e86\u5176\u6240\u5c5e\u7684\u7c7b\u3002\u72b6\u6001\u6a21\u5f0f\u4e3b\u8981\u89e3\u51b3\u7684\u662f\u5f53\u63a7\u5236\u4e00\u4e2a\u5bf9\u8c61\u72b6\u6001\u8f6c\u6362\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u8fc7\u4e8e\u590d\u6742\u65f6\u7684\u60c5\u51b5\u3002\u901a\u8fc7\u628a\u72b6\u6001\u7684\u5224\u65ad\u903b\u8f91\u8f6c\u79fb\u5230\u8868\u793a\u4e0d\u540c\u72b6\u6001\u7684\u4e00\u7cfb\u5217\u7c7b\u4e2d\uff0c\u53ef\u4ee5\u628a\u590d\u6742\u7684\u5224\u65ad\u903b\u8f91\u7b80\u5316\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt;\n\n// \u72b6\u6001\u63a5\u53e3\nclass State {\npublic:\n    virtual ~State() {}\n\n    virtual void handleRequest() = 0;\n};\n\n// \u5177\u4f53\u72b6\u6001A\nclass ConcreteStateA : public State {\npublic:\n    void handleRequest() override {\n        std::cout &lt;&lt; \"ConcreteStateA handles request.\\n\";\n    }\n};\n\n// \u5177\u4f53\u72b6\u6001B\nclass ConcreteStateB : public State {\npublic:\n    void handleRequest() override {\n        std::cout &lt;&lt; \"ConcreteStateB handles request.\\n\";\n    }\n};\n\n// \u4e0a\u4e0b\u6587\nclass Context {\nprivate:\n    State* state_;\n\npublic:\n    Context(State* state) : state_(nullptr) {\n        this-&gt;transitionTo(state);\n    }\n\n    ~Context() {\n        delete state_;\n    }\n\n    void transitionTo(State* state) {\n        std::cout &lt;&lt; \"Context: Transition to \" &lt;&lt; typeid(*state).name() &lt;&lt; \".\\n\";\n        if (this-&gt;state_ != nullptr)\n            delete this-&gt;state_;\n        this-&gt;state_ = state;\n        this-&gt;state_-&gt;setContext(this);\n    }\n\n    void request() {\n        this-&gt;state_-&gt;handleRequest();\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nint main() {\n    Context* context = new Context(new ConcreteStateA);\n    context-&gt;request();\n    context-&gt;transitionTo(new ConcreteStateB);\n    context-&gt;request();\n\n    delete context;\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u72b6\u6001\u63a5\u53e3\uff08State\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u4ee5\u5c01\u88c5\u4e0e\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u7279\u5b9a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002</li> <li>\u5177\u4f53\u72b6\u6001\uff08Concrete States\uff09\uff1a\u5b9e\u73b0\u72b6\u6001\u63a5\u53e3\u7684\u7c7b\uff0c\u6bcf\u4e2a\u5b50\u7c7b\u5b9e\u73b0\u4e00\u4e2a\u4e0e\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u72b6\u6001\u76f8\u5173\u7684\u884c\u4e3a\u3002</li> <li>\u4e0a\u4e0b\u6587\uff08Context\uff09\uff1a\u5b9a\u4e49\u5ba2\u6237\u611f\u5174\u8da3\u7684\u63a5\u53e3\u3002\u5b83\u7ef4\u62a4\u4e00\u4e2a\u6307\u5411\u5f53\u524d\u72b6\u6001\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5e76\u5c06\u6240\u6709\u4e0e\u72b6\u6001\u76f8\u5173\u7684\u5de5\u4f5c\u59d4\u6258\u7ed9\u5b83\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u521b\u5efa\u5177\u4f53\u72b6\u6001\u5bf9\u8c61\u548c\u4e0a\u4e0b\u6587\uff0c\u6539\u53d8\u4e0a\u4e0b\u6587\u7684\u72b6\u6001\u6765\u6f14\u793a\u4e0d\u540c\u884c\u4e3a\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_21","title":"\u89c2\u5bdf\u8005\u6a21\u5f0f","text":"<p>\u89c2\u5bdf\u8005\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u5bf9\u8c61\u4e4b\u95f4\u5efa\u7acb\u4e00\u79cd\u8ba2\u9605\u673a\u5236\uff0c\u4f7f\u5f97\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u5b83\u7684\u5bf9\u8c61\u90fd\u4f1a\u5f97\u5230\u901a\u77e5\u5e76\u81ea\u52a8\u66f4\u65b0\u3002\u8fd9\u79cd\u6a21\u5f0f\u901a\u5e38\u7528\u4e8e\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u4ef6\u5904\u7406\u7cfb\u7edf\uff0c\u7528\u4e8e\u6784\u5efa\u4f4e\u8026\u5408\u7684\u7cfb\u7edf\u3002\u5b83\u5305\u62ec\u4e24\u7c7b\u5bf9\u8c61\uff1a\u89c2\u5bdf\u8005\uff08Observer\uff09\u548c\u88ab\u89c2\u5bdf\u8005\uff08Subject\uff09\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;list&gt;\n#include &lt;string&gt;\n\n// \u89c2\u5bdf\u8005\u63a5\u53e3\nclass Observer {\npublic:\n    virtual ~Observer() {}\n    virtual void update(const std::string &amp;message_from_subject) = 0;\n};\n\n// \u88ab\u89c2\u5bdf\u8005\u63a5\u53e3\nclass Subject {\npublic:\n    virtual ~Subject() {}\n    virtual void attach(Observer *observer) = 0;\n    virtual void detach(Observer *observer) = 0;\n    virtual void notify() = 0;\n};\n\n// \u5177\u4f53\u88ab\u89c2\u5bdf\u8005\nclass ConcreteSubject : public Subject {\nprivate:\n    std::list&lt;Observer *&gt; list_observer_;\n    std::string message_;\n\npublic:\n    virtual ~ConcreteSubject() {\n        std::cout &lt;&lt; \"Goodbye, I was the Subject.\\n\";\n    }\n\n    void attach(Observer *observer) override {\n        list_observer_.push_back(observer);\n    }\n\n    void detach(Observer *observer) override {\n        list_observer_.remove(observer);\n    }\n\n    void notify() override {\n        std::list&lt;Observer *&gt;::iterator iterator = list_observer_.begin();\n        howManyObserver();\n        while (iterator != list_observer_.end()) {\n            (*iterator)-&gt;update(message_);\n            ++iterator;\n        }\n    }\n\n    void createMessage(std::string message = \"Empty\") {\n        this-&gt;message_ = message;\n        notify();\n    }\n\n    void howManyObserver() {\n        std::cout &lt;&lt; \"There are \" &lt;&lt; list_observer_.size() &lt;&lt; \" observers in the list.\\n\";\n    }\n};\n\n// \u5177\u4f53\u89c2\u5bdf\u8005\nclass ConcreteObserver : public Observer {\nprivate:\n    std::string message_from_subject_;\n    ConcreteSubject &amp;subject_;\n    static int static_number_;\n    int number_;\n\npublic:\n    ConcreteObserver(ConcreteSubject &amp;subject) : subject_(subject) {\n        this-&gt;subject_.attach(this);\n        std::cout &lt;&lt; \"Hi, I'm the Observer \\\"\" &lt;&lt; ++ConcreteObserver::static_number_ &lt;&lt; \"\\\".\\n\";\n        this-&gt;number_ = ConcreteObserver::static_number_;\n    }\n\n    virtual ~ConcreteObserver() {\n        std::cout &lt;&lt; \"Goodbye, I was the Observer \\\"\" &lt;&lt; this-&gt;number_ &lt;&lt; \"\\\".\\n\";\n    }\n\n    void update(const std::string &amp;message_from_subject) override {\n        message_from_subject_ = message_from_subject;\n        printInfo();\n    }\n\n    void removeMeFromTheList() {\n        subject_.detach(this);\n        std::cout &lt;&lt; \"Observer \\\"\" &lt;&lt; number_ &lt;&lt; \"\\\" removed from the list.\\n\";\n    }\n\n    void printInfo() {\n        std::cout &lt;&lt; \"Observer \\\"\" &lt;&lt; this-&gt;number_ &lt;&lt; \"\\\": a new message is available --&gt; \" &lt;&lt; this-&gt;message_from_subject_ &lt;&lt; \"\\n\";\n    }\n};\n\nint ConcreteObserver::static_number_ = 0;\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid ClientCode() {\n    ConcreteSubject *subject = new ConcreteSubject;\n    ConcreteObserver *observer1 = new ConcreteObserver(*subject);\n    ConcreteObserver *observer2 = new ConcreteObserver(*subject);\n    ConcreteObserver *observer3 = new ConcreteObserver(*subject);\n    ConcreteObserver *observer4;\n    ConcreteObserver *observer5;\n\n    subject-&gt;createMessage(\"Hello World! :D\");\n    observer3-&gt;removeMeFromTheList();\n\n    subject-&gt;createMessage(\"The weather is hot today! :p\");\n    observer4 = new ConcreteObserver(*subject);\n\n    observer2-&gt;removeMeFromTheList();\n    observer5 = new ConcreteObserver(*subject);\n\n    subject-&gt;createMessage(\"My new car is great! ;)\");\n    observer5-&gt;removeMeFromTheList();\n\n    observer4-&gt;removeMeFromTheList();\n    observer1-&gt;removeMeFromTheList();\n\n    delete observer5;\n    delete observer4;\n    delete observer3;\n    delete observer2;\n    delete observer1;\n    delete subject;\n}\n\nint main() {\n    ClientCode();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u89c2\u5bdf\u8005\u63a5\u53e3\uff08Observer\uff09\uff1a\u5b9a\u4e49\u4e86\u63a5\u6536\u5230\u901a\u77e5\u65f6\u89c2\u5bdf\u8005\u9700\u8981\u6267\u884c\u7684\u64cd\u4f5c\u3002</li> <li>\u88ab\u89c2\u5bdf\u8005\u63a5\u53e3\uff08Subject\uff09\uff1a\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u9644\u52a0\u548c\u5206\u79bb\u89c2\u5bdf\u8005\u5bf9\u8c61\u3002\u8fd8\u5305\u62ec\u4e00\u4e2a\u901a\u77e5\u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u72b6\u6001\u6539\u53d8\u65f6\u901a\u77e5\u6240\u6709\u89c2\u5bdf\u8005\u3002</li> <li>\u5177\u4f53\u88ab\u89c2\u5bdf\u8005\uff08Concrete Subject\uff09\uff1a\u5b9e\u73b0\u88ab\u89c2\u5bdf\u8005\u63a5\u53e3\u7684\u7c7b\uff0c\u5f53\u5176\u5185\u90e8\u72b6\u6001\u6539\u53d8\u65f6\uff0c\u7ed9\u6240\u6709\u767b\u8bb0\u8fc7\u7684\u89c2\u5bdf\u8005\u53d1\u51fa\u901a\u77e5\u3002</li> <li>\u5177\u4f53\u89c2\u5bdf\u8005\uff08Concrete Observer\uff09\uff1a\u5b9e\u73b0\u89c2\u5bdf\u8005\u63a5\u53e3\u7684\u7c7b\uff0c\u5b9a\u4e49\u5f53\u63a5\u6536\u5230\u88ab\u89c2\u5bdf\u8005\u901a\u77e5\u65f6\u7684\u5177\u4f53\u884c\u4e3a\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u521b\u5efa\u5177\u4f53\u89c2\u5bdf\u8005\u548c\u88ab\u89c2\u5bdf\u8005\u5bf9\u8c61\uff0c\u8ba9\u89c2\u5bdf\u8005\u6ce8\u518c\u5230\u88ab\u89c2\u5bdf\u8005\uff0c\u7136\u540e\u89c2\u5bdf\u88ab\u89c2\u5bdf\u8005\u7684\u72b6\u6001\u53d8\u5316\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_22","title":"\u5907\u5fd8\u5f55\u6a21\u5f0f","text":"<p>\u5907\u5fd8\u5f55\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u5728\u4e0d\u8fdd\u53cd\u5c01\u88c5\u7684\u60c5\u51b5\u4e0b\u6355\u83b7\u5e76\u5916\u90e8\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u4ee5\u4fbf\u4ee5\u540e\u53ef\u4ee5\u5c06\u8be5\u5bf9\u8c61\u6062\u590d\u5230\u6b64\u72b6\u6001\u3002\u8fd9\u79cd\u6a21\u5f0f\u901a\u5e38\u7528\u4e8e\u5b9e\u73b0\u64a4\u9500\u548c\u91cd\u505a\u529f\u80fd\u3002</p> <p>\u5907\u5fd8\u5f55\u6a21\u5f0f\u6d89\u53ca\u4e09\u4e2a\u5173\u952e\u89d2\u8272\uff1a\u539f\u53d1\u5668\uff08Originator\uff09\uff0c\u5907\u5fd8\u5f55\uff08Memento\uff09\u548c\u8d1f\u8d23\u4eba\uff08Caretaker\uff09\u3002\u539f\u53d1\u5668\u662f\u8981\u4fdd\u5b58\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u5907\u5fd8\u5f55\u662f\u7528\u4e8e\u5b58\u50a8\u539f\u53d1\u5668\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u800c\u8d1f\u8d23\u4eba\u5219\u8d1f\u8d23\u4fdd\u5b58\u5907\u5fd8\u5f55\u5e76\u5728\u9700\u8981\u65f6\u4f7f\u7528\u5b83\u6765\u6062\u590d\u539f\u53d1\u5668\u7684\u72b6\u6001\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n\n// \u5907\u5fd8\u5f55\nclass Memento {\npublic:\n    virtual ~Memento() {}\n    virtual std::string getName() const = 0;\n    virtual std::string date() const = 0;\n    virtual std::string state() const = 0;\n};\n\n// \u539f\u53d1\u5668\nclass Originator {\nprivate:\n    std::string state_;\n    std::string generateRandomString(int length = 10) {\n        const char alphanum[] =\n            \"0123456789\"\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n            \"abcdefghijklmnopqrstuvwxyz\";\n        int stringLength = sizeof(alphanum) - 1;\n\n        std::string random_string;\n        for (int i = 0; i &lt; length; i++) {\n            random_string += alphanum[std::rand() % stringLength];\n        }\n        return random_string;\n    }\n\npublic:\n    Originator(std::string state) : state_(state) {\n        std::cout &lt;&lt; \"Originator: My initial state is: \" &lt;&lt; this-&gt;state_ &lt;&lt; \"\\n\";\n    }\n\n    void doSomething() {\n        std::cout &lt;&lt; \"Originator: I'm doing something important.\\n\";\n        this-&gt;state_ = this-&gt;generateRandomString(30);\n        std::cout &lt;&lt; \"Originator: and my state has changed to: \" &lt;&lt; this-&gt;state_ &lt;&lt; \"\\n\";\n    }\n\n    Memento *save() {\n        return new ConcreteMemento(this-&gt;state_);\n    }\n\n    void restore(Memento *memento) {\n        this-&gt;state_ = memento-&gt;state();\n        std::cout &lt;&lt; \"Originator: My state has changed to: \" &lt;&lt; this-&gt;state_ &lt;&lt; \"\\n\";\n    }\n};\n\n// \u5177\u4f53\u5907\u5fd8\u5f55\nclass ConcreteMemento : public Memento {\nprivate:\n    std::string state_;\n    std::string date_;\n\npublic:\n    ConcreteMemento(std::string state) : state_(state) {\n        this-&gt;state_ = state;\n        time_t now = time(0);\n        this-&gt;date_ = ctime(&amp;now);\n    }\n\n    std::string state() const override {\n        return this-&gt;state_;\n    }\n    std::string getName() const override {\n        return this-&gt;date_ + \" / (\" + this-&gt;state_.substr(0, 9) + \"...)\";\n    }\n    std::string date() const override {\n        return this-&gt;date_;\n    }\n};\n\n// \u8d1f\u8d23\u4eba\nclass Caretaker {\nprivate:\n    std::vector&lt;Memento *&gt; mementos_;\n    Originator *originator_;\n\npublic:\n    Caretaker(Originator *originator) : originator_(originator) {\n        this-&gt;originator_ = originator;\n    }\n\n    void backup() {\n        std::cout &lt;&lt; \"\\nCaretaker: Saving Originator's state...\\n\";\n        this-&gt;mementos_.push_back(this-&gt;originator_-&gt;save());\n    }\n\n    void undo() {\n        if (!this-&gt;mementos_.size()) {\n            return;\n        }\n        Memento *memento = this-&gt;mementos_.back();\n        this-&gt;mementos_.pop_back();\n        std::cout &lt;&lt; \"Caretaker: Restoring state to: \" &lt;&lt; memento-&gt;getName() &lt;&lt; \"\\n\";\n        try {\n            this-&gt;originator_-&gt;restore(memento);\n        } catch (...) {\n            this-&gt;undo();\n        }\n    }\n\n    void showHistory() const {\n        std::cout &lt;&lt; \"Caretaker: Here's the list of mementos:\\n\";\n        for (Memento *memento : this-&gt;mementos_) {\n            std::cout &lt;&lt; memento-&gt;getName() &lt;&lt; \"\\n\";\n        }\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid ClientCode() {\n    Originator *originator = new Originator(\"Super-duper-super-puper-super.\");\n    Caretaker *caretaker = new Caretaker(originator);\n    caretaker-&gt;backup();\n    originator-&gt;doSomething();\n\n    caretaker-&gt;backup();\n    originator-&gt;doSomething();\n\n    caretaker-&gt;backup();\n    originator-&gt;doSomething();\n\n    std::cout &lt;&lt; \"\\n\";\n    caretaker-&gt;showHistory();\n\n    std::cout &lt;&lt; \"\\nClient: Now, let's rollback!\\n\\n\";\n    caretaker-&gt;undo();\n\n    std::cout &lt;&lt; \"\\nClient: Once more!\\n\\n\";\n    caretaker-&gt;undo();\n\n    delete originator;\n    delete caretaker;\n}\n\nint main() {\n    std::srand(static_cast&lt;unsigned int&gt;(std::time(NULL)));\n    ClientCode();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u5907\u5fd8\u5f55\uff08Memento\uff09\uff1a\u5b58\u50a8\u539f\u53d1\u5668\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\u3002\u5907\u5fd8\u5f55\u53ef\u4ee5\u4fdd\u62a4\u5176\u5185\u5bb9\u4e0d\u88ab\u539f\u53d1\u5668\u5bf9\u8c61\u4e4b\u5916\u7684\u4efb\u4f55\u5bf9\u8c61\u6240\u8bbf\u95ee\u3002</li> <li>\u539f\u53d1\u5668\uff08Originator\uff09\uff1a\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u5176\u5f53\u524d\u5185\u90e8\u72b6\u6001\u7684\u5907\u5fd8\u5f55\u5bf9\u8c61\uff0c\u5e76\u53ef\u4ee5\u4f7f\u7528\u5907\u5fd8\u5f55\u5bf9\u8c61\u6765\u6062\u590d\u5176\u5185\u90e8\u72b6\u6001\u3002</li> <li>\u8d1f\u8d23\u4eba\uff08Caretaker\uff09\uff1a\u8d1f\u8d23\u4fdd\u5b58\u5907\u5fd8\u5f55\u5bf9\u8c61\uff0c\u4f46\u4e0d\u4fee\u6539\u6216\u68c0\u67e5\u8fd9\u4e9b\u5907\u5fd8\u5f55\u5bf9\u8c61\u7684\u5185\u5bb9\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_23","title":"\u4e2d\u4ecb\u8005\u6a21\u5f0f","text":"<p>\u4e2d\u4ecb\u8005\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u5141\u8bb8\u4f60\u51cf\u5c11\u591a\u4e2a\u7c7b\u4e4b\u95f4\u7684\u76f8\u4e92\u4f9d\u8d56\uff0c\u4ece\u800c\u5c06\u8fd9\u4e9b\u7c7b\u4e4b\u95f4\u7684\u901a\u4fe1\u96c6\u4e2d\u5230\u4e00\u4e2a\u4e2d\u4ecb\u8005\u5bf9\u8c61\u4e2d\u3002\u8fd9\u79cd\u6a21\u5f0f\u975e\u5e38\u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u975e\u5e38\u590d\u6742\uff0c\u76f8\u4e92\u4f9d\u8d56\u7684\u60c5\u51b5\u3002\u901a\u8fc7\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff0c\u5404\u4e2a\u5bf9\u8c61\u4e0d\u76f4\u63a5\u901a\u4fe1\uff0c\u800c\u662f\u901a\u8fc7\u4e2d\u4ecb\u8005\u5bf9\u8c61\u6765\u8fdb\u884c\u4ea4\u4e92\uff0c\u4ece\u800c\u4f7f\u5176\u66f4\u5bb9\u6613\u8bbe\u8ba1\u3001\u7406\u89e3\u548c\u7ef4\u62a4\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nclass BaseComponent;\n\n// \u4e2d\u4ecb\u8005\u63a5\u53e3\nclass Mediator {\npublic:\n    virtual void notify(BaseComponent *sender, std::string event) const = 0;\n};\n\n// \u57fa\u7840\u7ec4\u4ef6\nclass BaseComponent {\nprotected:\n    Mediator *mediator_;\n\npublic:\n    BaseComponent(Mediator *mediator = nullptr) : mediator_(mediator) {}\n\n    void set_mediator(Mediator *mediator) {\n        this-&gt;mediator_ = mediator;\n    }\n};\n\n// \u5177\u4f53\u7ec4\u4ef6A\nclass ComponentA : public BaseComponent {\npublic:\n    void doA() {\n        std::cout &lt;&lt; \"Component A does A.\\n\";\n        this-&gt;mediator_-&gt;notify(this, \"A\");\n    }\n\n    void doB() {\n        std::cout &lt;&lt; \"Component A does B.\\n\";\n        this-&gt;mediator_-&gt;notify(this, \"B\");\n    }\n};\n\n// \u5177\u4f53\u7ec4\u4ef6B\nclass ComponentB : public BaseComponent {\npublic:\n    void doC() {\n        std::cout &lt;&lt; \"Component B does C.\\n\";\n        this-&gt;mediator_-&gt;notify(this, \"C\");\n    }\n\n    void doD() {\n        std::cout &lt;&lt; \"Component B does D.\\n\";\n        this-&gt;mediator_-&gt;notify(this, \"D\");\n    }\n};\n\n// \u5177\u4f53\u4e2d\u4ecb\u8005\nclass ConcreteMediator : public Mediator {\nprivate:\n    ComponentA *componentA_;\n    ComponentB *componentB_;\n\npublic:\n    ConcreteMediator(ComponentA *c1, ComponentB *c2) : componentA_(c1), componentB_(c2) {\n        this-&gt;componentA_-&gt;set_mediator(this);\n        this-&gt;componentB_-&gt;set_mediator(this);\n    }\n\n    void notify(BaseComponent *sender, std::string event) const override {\n        if (event == \"A\") {\n            std::cout &lt;&lt; \"Mediator reacts on A and triggers following operations:\\n\";\n            this-&gt;componentB_-&gt;doC();\n        }\n        if (event == \"D\") {\n            std::cout &lt;&lt; \"Mediator reacts on D and triggers following operations:\\n\";\n            this-&gt;componentA_-&gt;doB();\n            this-&gt;componentB_-&gt;doC();\n        }\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid clientCode() {\n    ComponentA *c1 = new ComponentA;\n    ComponentB *c2 = new ComponentB;\n    ConcreteMediator *mediator = new ConcreteMediator(c1, c2);\n\n    std::cout &lt;&lt; \"Client triggers operation A.\\n\";\n    c1-&gt;doA();\n\n    std::cout &lt;&lt; \"\\n\";\n    std::cout &lt;&lt; \"Client triggers operation D.\\n\";\n    c2-&gt;doD();\n\n    delete c1;\n    delete c2;\n    delete mediator;\n}\n\nint main() {\n    clientCode();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u4e2d\u4ecb\u8005\u63a5\u53e3\uff08Mediator\uff09\uff1a\u5b9a\u4e49\u7528\u4e8e\u901a\u4fe1\u7684\u63a5\u53e3\u3002\u4e2d\u4ecb\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u6216\u5177\u4f53\u7c7b\u3002</li> <li>\u5177\u4f53\u4e2d\u4ecb\u8005\uff08Concrete Mediator\uff09\uff1a\u5b9e\u73b0\u4e2d\u4ecb\u8005\u7684\u63a5\u53e3\u5e76\u534f\u8c03\u76f8\u5173\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002\u5177\u4f53\u4e2d\u4ecb\u8005\u77e5\u9053\u6240\u6709\u7684\u5177\u4f53\u7ec4\u4ef6\uff0c\u5e76\u8d1f\u8d23\u5b9e\u73b0\u5b83\u4eec\u4e4b\u95f4\u7684\u901a\u4fe1\u903b\u8f91\u3002</li> <li>\u57fa\u7840\u7ec4\u4ef6\uff08Base Component\uff09\uff1a\u5305\u542b\u6307\u5411\u4e2d\u4ecb\u8005\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u7ec4\u4ef6\u4e0d\u76f4\u63a5\u4e0e\u5176\u4ed6\u7ec4\u4ef6\u901a\u4fe1\uff0c\u800c\u662f\u901a\u8fc7\u4e2d\u4ecb\u8005\u6765\u5b9e\u73b0\u4ea4\u4e92\u3002</li> <li>\u5177\u4f53\u7ec4\u4ef6\uff08Concrete Components\uff09\uff1a\u5b9e\u73b0\u5404\u81ea\u7684\u529f\u80fd\uff0c\u5f53\u9700\u8981\u4e0e\u5176\u4ed6\u7ec4\u4ef6\u901a\u4fe1\u65f6\uff0c\u4f7f\u7528\u4e2d\u4ecb\u8005\u5bf9\u8c61\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u8d1f\u8d23\u521b\u5efa\u7ec4\u4ef6\u548c\u4e2d\u4ecb\u8005\u5bf9\u8c61\uff0c\u5e76\u542f\u52a8\u5b83\u4eec\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_24","title":"\u8fed\u4ee3\u5668\u6a21\u5f0f","text":"<p>\u8fed\u4ee3\u5668\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u4f60\u987a\u5e8f\u5730\u8bbf\u95ee\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\uff0c\u800c\u65e0\u9700\u66b4\u9732\u5176\u5e95\u5c42\u7684\u8868\u793a\uff08\u5217\u8868\u3001\u5806\u6808\u3001\u6811\u7b49\uff09\u3002\u8fd9\u79cd\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u6cd5\u6765\u8bbf\u95ee\u5bf9\u8c61\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u66b4\u9732\u5e95\u5c42\u5b9e\u73b0\u7684\u7ec6\u8282\u3002</p> <p>\u8fed\u4ee3\u5668\u6a21\u5f0f\u6d89\u53ca\u4e24\u4e2a\u5173\u952e\u89d2\u8272\uff1a\u8fed\u4ee3\u5668\uff08Iterator\uff09\u548c\u96c6\u5408\uff08Collection\uff09\u3002\u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u904d\u5386\u96c6\u5408\u7684\u63a5\u53e3\uff0c\u800c\u96c6\u5408\u5219\u63d0\u4f9b\u4e86\u521b\u5efa\u8fed\u4ee3\u5668\u7684\u63a5\u53e3\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;iterator&gt;\n\n// \u8fed\u4ee3\u5668\u63a5\u53e3\ntemplate &lt;typename T, typename U&gt;\nclass Iterator {\npublic:\n    typedef typename std::vector&lt;T&gt;::iterator iter_type;\n    virtual ~Iterator() {}\n\n    virtual U begin() = 0;\n    virtual U end() = 0;\n    virtual iter_type next() = 0;\n    virtual bool isDone() = 0;\n    virtual iter_type current() = 0;\n};\n\n// \u5177\u4f53\u96c6\u5408\ntemplate &lt;class T&gt;\nclass Container {\n    friend class Iterator&lt;T, Container&lt;T&gt;&gt;;\n\npublic:\n    void add(T a) {\n        m_data.push_back(a);\n    }\n\n    Iterator&lt;T, Container&lt;T&gt;&gt; *createIterator() {\n        return new ConcreteIterator&lt;T, Container&lt;T&gt;&gt;(this);\n    }\n\nprivate:\n    std::vector&lt;T&gt; m_data;\n};\n\n// \u5177\u4f53\u8fed\u4ee3\u5668\ntemplate &lt;class T, class U&gt;\nclass ConcreteIterator : public Iterator&lt;T, U&gt; {\npublic:\n    ConcreteIterator(U *c) : m_container(c), m_iter(c-&gt;m_data.begin()) {}\n\n    typename Iterator&lt;T, U&gt;::iter_type begin() override {\n        return m_container-&gt;m_data.begin();\n    }\n\n    typename Iterator&lt;T, U&gt;::iter_type end() override {\n        return m_container-&gt;m_data.end();\n    }\n\n    typename Iterator&lt;T, U&gt;::iter_type next() override {\n        return ++m_iter;\n    }\n\n    bool isDone() override {\n        return (m_iter == m_container-&gt;m_data.end());\n    }\n\n    typename Iterator&lt;T, U&gt;::iter_type current() override {\n        return m_iter;\n    }\n\nprivate:\n    U *m_container;\n    typename std::vector&lt;T&gt;::iterator m_iter;\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid clientCode() {\n    Container&lt;int&gt; cont;\n\n    for (int i = 0; i &lt; 10; i++) {\n        cont.add(i);\n    }\n\n    Iterator&lt;int, Container&lt;int&gt;&gt; *it = cont.createIterator();\n\n    for (it-&gt;begin(); !it-&gt;isDone(); it-&gt;next()) {\n        std::cout &lt;&lt; *it-&gt;current() &lt;&lt; std::endl;\n    }\n\n    delete it;\n}\n\nint main() {\n    clientCode();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u8fed\u4ee3\u5668\u63a5\u53e3\uff08Iterator\uff09\uff1a\u5b9a\u4e49\u8bbf\u95ee\u548c\u904d\u5386\u5143\u7d20\u7684\u63a5\u53e3\u3002</li> <li>\u5177\u4f53\u8fed\u4ee3\u5668\uff08Concrete Iterator\uff09\uff1a\u5b9e\u73b0\u8fed\u4ee3\u5668\u63a5\u53e3\uff0c\u8d1f\u8d23\u7ba1\u7406\u8fed\u4ee3\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u7c7b\u77e5\u9053\u5982\u4f55\u904d\u5386\u96c6\u5408\u7684\u5143\u7d20\u3002</li> <li>\u96c6\u5408\uff08Collection\uff09\uff1a\u63d0\u4f9b\u4e00\u79cd\u65b9\u5f0f\u6765\u521b\u5efa\u4e00\u4e2a\u4e0e\u5176\u5bb9\u5668\u517c\u5bb9\u7684\u8fed\u4ee3\u5668\u3002\u96c6\u5408\u5bf9\u8c61\u901a\u5e38\u5305\u542b\u5143\u7d20\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u6765\u8bbf\u95ee\u8fed\u4ee3\u5668\u5b9e\u4f8b\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u4f7f\u7528\u8fed\u4ee3\u5668\u6a21\u5f0f\u6765\u904d\u5386\u548c\u8bbf\u95ee\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_25","title":"\u547d\u4ee4\u6a21\u5f0f","text":"<p>\u547d\u4ee4\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u5c06\u8bf7\u6c42\u6216\u7b80\u5355\u64cd\u4f5c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u3002\u8fd9\u79cd\u6a21\u5f0f\u5141\u8bb8\u53c2\u6570\u5316\u5ba2\u6237\u7aef\u4e0e\u8bf7\u6c42\u7684\u961f\u5217\u6216\u8bf7\u6c42\u7684\u6267\u884c\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u64a4\u9500\u64cd\u4f5c\u7684\u80fd\u529b\u3002\u547d\u4ee4\u6a21\u5f0f\u901a\u5e38\u7528\u4e8e\u5b9e\u73b0\u4e8b\u52a1\u6027\u884c\u4e3a\u3001\u65e5\u5fd7\u8bf7\u6c42\u3001\u961f\u5217\u8bf7\u6c42\u7b49\u3002</p> <p>\u547d\u4ee4\u6a21\u5f0f\u4e3b\u8981\u6d89\u53ca\u4e09\u4e2a\u89d2\u8272\uff1a\u547d\u4ee4\uff08Command\uff09\u3001\u63a5\u6536\u8005\uff08Receiver\uff09\u548c\u8c03\u7528\u8005\uff08Invoker\uff09\u3002\u547d\u4ee4\u5c01\u88c5\u4e86\u5bf9\u63a5\u6536\u8005\u7684\u8c03\u7528\uff0c\u8c03\u7528\u8005\u901a\u8fc7\u547d\u4ee4\u63a5\u53e3\u6267\u884c\u547d\u4ee4\uff0c\u800c\u63a5\u6536\u8005\u5219\u6267\u884c\u4e0e\u8bf7\u6c42\u76f8\u5173\u7684\u64cd\u4f5c\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n\n// \u547d\u4ee4\u63a5\u53e3\nclass Command {\npublic:\n    virtual ~Command() {}\n    virtual void execute() const = 0;\n};\n\n// \u63a5\u6536\u8005\nclass Receiver {\npublic:\n    void doSomething(const std::string &amp;a) {\n        std::cout &lt;&lt; \"Receiver: Working on (\" &lt;&lt; a &lt;&lt; \".)\\n\";\n    }\n    void doSomethingElse(const std::string &amp;b) {\n        std::cout &lt;&lt; \"Receiver: Also working on (\" &lt;&lt; b &lt;&lt; \".)\\n\";\n    }\n};\n\n// \u5177\u4f53\u547d\u4ee4\nclass SimpleCommand : public Command {\nprivate:\n    std::string payload_;\n\npublic:\n    explicit SimpleCommand(std::string payload) : payload_(payload) {}\n    void execute() const override {\n        std::cout &lt;&lt; \"SimpleCommand: See, I can do simple things like printing (\" &lt;&lt; this-&gt;payload_ &lt;&lt; \")\\n\";\n    }\n};\n\nclass ComplexCommand : public Command {\nprivate:\n    Receiver *receiver_;\n    std::string a_;\n    std::string b_;\n\npublic:\n    ComplexCommand(Receiver *receiver, std::string a, std::string b) : receiver_(receiver), a_(a), b_(b) {}\n    void execute() const override {\n        std::cout &lt;&lt; \"ComplexCommand: Complex stuff should be done by a receiver object.\\n\";\n        this-&gt;receiver_-&gt;doSomething(this-&gt;a_);\n        this-&gt;receiver_-&gt;doSomethingElse(this-&gt;b_);\n    }\n};\n\n// \u8c03\u7528\u8005\nclass Invoker {\nprivate:\n    Command *on_start_;\n    Command *on_finish_;\n\npublic:\n    ~Invoker() {\n        delete on_start_;\n        delete on_finish_;\n    }\n\n    void setOnStart(Command *command) {\n        this-&gt;on_start_ = command;\n    }\n    void setOnFinish(Command *command) {\n        this-&gt;on_finish_ = command;\n    }\n\n    void doSomethingImportant() {\n        std::cout &lt;&lt; \"Invoker: Does anybody want something done before I begin?\\n\";\n        if (this-&gt;on_start_) {\n            this-&gt;on_start_-&gt;execute();\n        }\n        std::cout &lt;&lt; \"Invoker: ...doing something really important...\\n\";\n        std::cout &lt;&lt; \"Invoker: Does anybody want something done after I finish?\\n\";\n        if (this-&gt;on_finish_) {\n            this-&gt;on_finish_-&gt;execute();\n        }\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid clientCode() {\n    Invoker *invoker = new Invoker;\n    invoker-&gt;setOnStart(new SimpleCommand(\"Say Hi!\"));\n    Receiver *receiver = new Receiver;\n    invoker-&gt;setOnFinish(new ComplexCommand(receiver, \"Send email\", \"Save report\"));\n    invoker-&gt;doSomethingImportant();\n\n    delete invoker;\n    delete receiver;\n}\n\nint main() {\n    clientCode();\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u547d\u4ee4\u63a5\u53e3\uff08Command\uff09\uff1a\u5b9a\u4e49\u4e86\u6267\u884c\u64cd\u4f5c\u7684\u63a5\u53e3\uff0c\u901a\u5e38\u53ea\u6709\u4e00\u4e2a <code>execute</code> \u65b9\u6cd5\u3002</li> <li>\u5177\u4f53\u547d\u4ee4\uff08Concrete Command\uff09\uff1a\u5b9e\u73b0\u547d\u4ee4\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u63a5\u6536\u8005\u548c\u884c\u4e3a\u4e4b\u95f4\u7684\u7ed1\u5b9a\u5173\u7cfb\u3002\u5f53\u547d\u4ee4\u7684 <code>execute</code> \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c\u63a5\u6536\u8005\u4f1a\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002</li> <li>\u63a5\u6536\u8005\uff08Receiver\uff09\uff1a\u77e5\u9053\u5982\u4f55\u6267\u884c\u4e0e\u6267\u884c\u64cd\u4f5c\u8bf7\u6c42\u76f8\u5173\u7684\u64cd\u4f5c\u3002</li> <li>\u8c03\u7528\u8005\uff08Invoker\uff09\uff1a\u8bf7\u6c42\u547d\u4ee4\u5bf9\u8c61\u6267\u884c\u8bf7\u6c42\u3002\u8c03\u7528\u8005\u6301\u6709\u547d\u4ee4\u5bf9\u8c61\uff0c\u5e76\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u8c03\u7528\u547d\u4ee4\u5bf9\u8c61\u7684 <code>execute</code> \u65b9\u6cd5\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u521b\u5efa\u5177\u4f53\u547d\u4ee4\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u5176\u63a5\u6536\u8005\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/22%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_26","title":"\u8d23\u4efb\u94fe\u6a21\u5f0f","text":"<p>\u8d23\u4efb\u94fe\u6a21\u5f0f\u662f\u4e00\u79cd\u884c\u4e3a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u5c06\u8bf7\u6c42\u6cbf\u7740\u5904\u7406\u8005\u94fe\u4f20\u9012\u3002\u8bf7\u6c42\u4ece\u4e00\u4e2a\u5904\u7406\u8005\u4f20\u9012\u5230\u4e0b\u4e00\u4e2a\u5904\u7406\u8005\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u5904\u7406\u8005\u5904\u7406\u5b83\u4e3a\u6b62\u3002\u8fd9\u79cd\u6a21\u5f0f\u901a\u5e38\u7528\u4e8e\u5904\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8bf7\u6c42\uff0c\u6bcf\u4e2a\u5904\u7406\u8005\u90fd\u6709\u673a\u4f1a\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\u6216\u5c06\u5176\u4f20\u9012\u7ed9\u94fe\u4e0a\u7684\u4e0b\u4e00\u4e2a\u5904\u7406\u8005\u3002</p> <p>\u8d23\u4efb\u94fe\u6a21\u5f0f\u6d89\u53ca\u4e24\u4e2a\u5173\u952e\u89d2\u8272\uff1a\u5904\u7406\u8005\uff08Handler\uff09\u548c\u5177\u4f53\u5904\u7406\u8005\uff08Concrete Handlers\uff09\u3002\u5904\u7406\u8005\u5b9a\u4e49\u4e86\u5904\u7406\u8bf7\u6c42\u7684\u63a5\u53e3\uff0c\u800c\u5177\u4f53\u5904\u7406\u8005\u5b9e\u73b0\u4e86\u5728\u94fe\u4e2d\u5904\u7406\u8bf7\u6c42\u7684\u5177\u4f53\u903b\u8f91\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\n// \u62bd\u8c61\u5904\u7406\u8005\nclass Handler {\nprotected:\n    Handler *next_handler_;\n\npublic:\n    Handler() : next_handler_(nullptr) {}\n\n    Handler* setNext(Handler *handler) {\n        this-&gt;next_handler_ = handler;\n        return handler;\n    }\n\n    virtual std::string handle(std::string request) {\n        if (this-&gt;next_handler_) {\n            return this-&gt;next_handler_-&gt;handle(request);\n        }\n\n        return {};\n    }\n};\n\n// \u5177\u4f53\u5904\u7406\u8005A\nclass ConcreteHandlerA : public Handler {\npublic:\n    std::string handle(std::string request) override {\n        if (request == \"A\") {\n            return \"ConcreteHandlerA: I'll handle the \" + request + \".\\n\";\n        } else {\n            return Handler::handle(request);\n        }\n    }\n};\n\n// \u5177\u4f53\u5904\u7406\u8005B\nclass ConcreteHandlerB : public Handler {\npublic:\n    std::string handle(std::string request) override {\n        if (request == \"B\") {\n            return \"ConcreteHandlerB: I'll handle the \" + request + \".\\n\";\n        } else {\n            return Handler::handle(request);\n        }\n    }\n};\n\n// \u5ba2\u6237\u7aef\u4ee3\u7801\nvoid clientCode(Handler &amp;handler) {\n    std::vector&lt;std::string&gt; requests = {\"A\", \"B\", \"C\"};\n    for (const std::string &amp;request : requests) {\n        const std::string result = handler.handle(request);\n        if (!result.empty()) {\n            std::cout &lt;&lt; \"  \" &lt;&lt; result;\n        } else {\n            std::cout &lt;&lt; \"  \" &lt;&lt; request &lt;&lt; \" was left untouched.\\n\";\n        }\n    }\n}\n\nint main() {\n    ConcreteHandlerA *handler1 = new ConcreteHandlerA;\n    ConcreteHandlerB *handler2 = new ConcreteHandlerB;\n    handler1-&gt;setNext(handler2);\n\n    std::cout &lt;&lt; \"Chain: HandlerA &gt; HandlerB\\n\\n\";\n    clientCode(*handler1);\n    std::cout &lt;&lt; \"\\n\";\n\n    std::cout &lt;&lt; \"Subchain: HandlerB\\n\\n\";\n    clientCode(*handler2);\n\n    delete handler1;\n    delete handler2;\n\n    return 0;\n}\n</code></pre> <p>\u5b9e\u73b0\u8981\u70b9</p> <ol> <li>\u5904\u7406\u8005\u63a5\u53e3\uff08Handler\uff09\uff1a\u5b9a\u4e49\u4e00\u4e2a\u5904\u7406\u8bf7\u6c42\u7684\u63a5\u53e3\uff0c\u901a\u5e38\u5305\u62ec <code>setNext</code> \u65b9\u6cd5\u6765\u8bbe\u7f6e\u94fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5904\u7406\u8005\uff0c\u5e76\u5305\u62ec <code>handle</code> \u65b9\u6cd5\u6765\u5904\u7406\u8bf7\u6c42\u3002</li> <li>\u5177\u4f53\u5904\u7406\u8005\uff08Concrete Handlers\uff09\uff1a\u5b9e\u73b0\u5904\u7406\u8005\u63a5\u53e3\u7684\u7c7b\u3002\u6bcf\u4e2a\u5177\u4f53\u5904\u7406\u8005\u5904\u7406\u5b83\u6240\u8d1f\u8d23\u7684\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u4f20\u9012\u7ed9\u94fe\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5904\u7406\u8005\u3002</li> <li>\u5ba2\u6237\u7aef\u4ee3\u7801\uff08Client\uff09\uff1a\u8d1f\u8d23\u521b\u5efa\u5904\u7406\u8005\u94fe\uff0c\u5e76\u63d0\u4ea4\u8bf7\u6c42\u5230\u94fe\u4e0a\u3002\u5ba2\u6237\u7aef\u53ef\u80fd\u4e0d\u77e5\u9053\u94fe\u4e2d\u5177\u4f53\u7684\u5904\u7406\u8005\uff0c\u53ea\u9700\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u94fe\u7684\u5934\u90e8\u3002</li> <li>\u8bf7\u6c42\uff08Request\uff09\uff1a\u53ef\u4ee5\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b\u6240\u6709\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u5904\u7406\u8005\u9700\u8981\u8fd9\u4e9b\u4fe1\u606f\u6765\u5904\u7406\u8bf7\u6c42</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/Socket%E7%BC%96%E7%A8%8B/","title":"Socket\u7f16\u7a0b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/Socket%E7%BC%96%E7%A8%8B/#_1","title":"\u80cc\u666f","text":"<p>\u4ee5C/C++\u8bed\u8a00\u4e3a\u4f8b\uff0c\u8be6\u7ec6\u9610\u8ff0Socket\u7f16\u7a0b\u8fc7\u7a0b\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/Socket%E7%BC%96%E7%A8%8B/#_2","title":"\u8fc7\u7a0b","text":"<p>\u521d\u59cb\u5316</p> <p>\u7b2c\u4e00\u6b65\u662f\u521d\u59cb\u5316\u73af\u5883\u3002\u5bf9\u4e8eLinux\u73af\u5883\uff0c\u76f4\u63a5\u5f15\u5165\u6240\u9700\u5934\u6587\u4ef6\u5373\u53ef\uff1a</p> C++<pre><code>#include &lt;sys/socket.h&gt;                         // \u5f15\u5165socket\u6570\u636e\u7c7b\u578b\u4e0e\u65b9\u6cd5\uff0c\u5982struct sockaddr\u3001socket()\u3001bind()\u7b49\n#include &lt;unistd.h&gt;                             // \u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u65b9\u6cd5\uff0c\u5982close()\n#include &lt;netinet/in.h&gt;                         // \u5305\u542b\u4e86\u7528\u4e8eIP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u7b49\u6570\u636e\u7ed3\u6784\uff0c\u5982IPPROTO_IP\n</code></pre> <p>\u5bf9\u4e8eWindwos\u73af\u5883\uff0c\u9664\u4e86\u5f15\u5165\u5934\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u5bf9\u7cfb\u7edf\u63a5\u53e3\u521d\u59cb\u5316\uff1a</p> C++<pre><code>#include \"winsock.h\"                                    // Windows\u7684socket\u90fd\u5728\u8fd9\u4e2a\u5934\u6587\u4ef6\u91cc\n\n/* \u521d\u59cb\u5316WindowsAPI */\nWSADATA wsaData;                                        // \u521d\u59cb\u5316\u53d8\u91cf\nif (WSAStartup(MAKEWORD(2, 2), &amp;wsaData) != 0) {        // \u4f20\u5165\u7248\u672c\u4e0e\u53d8\u91cf\u5e76\u542f\u52a8\n    std::cout &lt;&lt; \"WSA Start Up Error\" &lt;&lt; std::endl;\n    return;\n}\nstd::cout &lt;&lt; \"WSA Start Up\" &lt;&lt; std::endl;\n</code></pre> <p>\u9664\u4e86\u7a0b\u5e8f\u4ee3\u7801\u610f\u4ee5\u5916\uff0c\u5728\u7f16\u8bd1\u65f6\u8fd8\u9700\u8981\u6302\u8f7d\u7cfb\u7edf\u81ea\u5e26\u7684\u5916\u90e8\u5e93\uff1a</p> CMake<pre><code>...\ntarget_link_libraries(socket_example_code wsock32)      # \u4ee5CMake\u914d\u7f6e\u6587\u4ef6\u4e3a\u4f8b\uff0c\u5f15\u5165wsock32\n</code></pre> <p>\u9519\u8bef\u4fe1\u606f</p> <p>\u4e3a\u4e86\u83b7\u53d6Socket\u8fde\u63a5\u4e2d\u7684\u5f02\u5e38\u72b6\u6001\uff0c\u6211\u4eec\u8981\u5728\u6bcf\u4e00\u6b65\u90fd\u6dfb\u52a0\u9519\u8bef\u5904\u7406\uff0c\u8fd9\u4e0d\u4ec5\u5728Socket\u4e2d\u5f88\u6709\u7528\u3002</p> <p>\u5728Linux\u4e2d\uff0c\u5b9e\u9645\u7684\u9519\u8bef\u7801\u5b58\u50a8\u5728\u5168\u5c40\u53d8\u91cf <code>errno</code> \u4e2d\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5e93\u51fd\u6570strerror(errno)\u5f88\u5bb9\u6613\u7684\u83b7\u53d6\u9519\u8bef\u4fe1\u606f\uff1a</p> C++<pre><code>printf(\"Linux Socket Have A Error: %s\", strerror(errno));\n</code></pre> <p>\u800cWindows\u7684\u5904\u7406\u5c31\u9ebb\u70e6\u5f88\u591a\u4e86\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7Windows\u63a5\u53e3\u5f97\u5230\u7c7b\u4f3cerrno\u4e00\u6837\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u5bf9\u5176\u89e3\u6790\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\u6765\u663e\u793a\u9519\u8bef\u4fe1\u606f\uff1a</p> C++<pre><code>// \u9519\u8bef\u6d88\u606f\u6253\u5370\u51fd\u6570\nvoid errorMessage(std::string errorMessage) {\n    int wsaLastError = WSAGetLastError();       //\u7528\u4e8e\u5728\u8c03\u7528 Winsock \u51fd\u6570\u51fa\u9519\u65f6\u83b7\u53d6\u9519\u8bef\u4ee3\u7801\n    if (wsaLastError == 0) {\n        std::cerr &lt;&lt; \"Unidentified Problem, please check the remote.\" &lt;&lt; std::endl;\n        return;\n    }\n\n    std::vector&lt;char&gt; errorText(256);\n    // \u8c03\u7528 FormatMessageA \u6765\u83b7\u53d6\u9519\u8bef\u6d88\u606f\n    FormatMessageA(\n            FORMAT_MESSAGE_FROM_SYSTEM, // \u4f7f\u7528\u7cfb\u7edf\u6d88\u606f\u8868\u6765\u683c\u5f0f\u5316\u9519\u8bef\u4ee3\u7801\n            nullptr,                    // \u6ca1\u6709\u6307\u5b9a\u989d\u5916\u7684\u6d88\u606f\u6e90\n            wsaLastError,               // \u8981\u683c\u5f0f\u5316\u7684\u9519\u8bef\u4ee3\u7801\uff0c\u901a\u5e38\u662f WSAGetLastError \u7684\u8fd4\u56de\u503c\n            0,                          // \u9009\u62e9\u5408\u9002\u7684\u8bed\u8a00ID\uff0c0 \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u8bed\u8a00\n            errorText.data(),           // \u6307\u5411\u5b58\u50a8\u9519\u8bef\u6d88\u606f\u7684\u7f13\u51b2\u533a\u7684\u6307\u9488\n            errorText.size(),           // \u7f13\u51b2\u533a\u7684\u5927\u5c0f\n            nullptr);                   // \u6ca1\u6709\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u5217\u8868\n    std::cerr &lt;&lt; errorMessage &lt;&lt; wsaLastError &lt;&lt; \" - \" &lt;&lt; errorText.data() &lt;&lt; std::endl;\n}\n\nerrorMessage(\"Windows Socket Have A Error: \");\n</code></pre> <p>\u5bf9\u8c61\u521b\u5efa</p> <p>\u5728Linux\u7684\u7f16\u7a0b\u827a\u672f\u91cc\uff0c\u6709\u4e00\u4e2a\u54f2\u5b66\u601d\u60f3\uff1a</p> <p>\u4e00\u5207\u7686\u6587\u4ef6(Everything is a file)</p> <p>\u65e0\u8bba\u662f\u6570\u636e\u3001\u9a71\u52a8\u3001\u8bbe\u5907\u3001\u63a5\u53e3\uff0c\u5728Linux\u91cc\u7684\u4efb\u4f55\u4e1c\u897f\u90fd\u662f\u662f\u7528\u6587\u4ef6\u8868\u793a\u4e86\u3002\u672c\u8d28\u4e0a\uff0c\u5c31\u662f\u6709\u8981\u6709\u8fd9\u4e48\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8ba9\u6211\u4eec\u53ef\u4ee5\u64cd\u4f5c\u5b83\u3002</p> C++<pre><code>int socketFD;                   // \u5728Linux\u4e2d\u58f0\u660e\u53d8\u91cf\nSOCKET win_socket;              // \u5728Windows\u4e2d\u58f0\u660e\u53d8\u91cf\n</code></pre> <p>\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u3001\u4e0d\u540c\u7684\u8bed\u8a00\u521b\u5efasocket\u5bf9\u8c61\u7684\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\u3002Linux\u4e2d\uff0csocketFD\u5c31\u662f\u4e00\u4e2aint\u7c7b\u578b\u6570\u636e\uff0c\u800cWindows\u4e2d\u4e0edefine\u597d\u7684unsigned int\u6570\u636e\u3002</p> <p>Linux\u4e0eWindows\u8c03\u7528\u63a5\u53e3\u7684\u65b9\u5f0f\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u8fd4\u56de\u503c\u7565\u6709\u4e0d\u540c\uff0c\u6bd4\u5982Linux\u521b\u5efasocket\u5931\u8d25\u662f\u8fd4\u56de-1\uff0c\u800cWindows\u662f\u8fd4\u56de0\uff0c\u56e0\u6b64\u5bf9\u4e8e\u9519\u8bef\u5904\u7406\u8981\u6709\u4e00\u4e9b\u533a\u522b\u3002</p> <p>\u5bf9\u4e8eSocket\u7684\u8d4b\u503c\uff1a</p> C++<pre><code>socketFD = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);\nif (socketFD &lt; 0) {\n    printf(\"Linux Create Socket Failed. err: %s\", strerror(errno));     // \u9519\u8bef\u6253\u5370\n    return -1;                                                          // \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\n}\n\nwin_socket = socket(AF_INET, SOCK_STREAM, IPPROTO_IP);\nif (win_socket == INVALID_SOCKET) {\n    errorMessage(\"Windows Create Socket Failed. err: \");                // \u9519\u8bef\u6253\u5370\n    return -1;                                                          // \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\n}\n</code></pre> <p>\u4e8c\u8005\u90fd\u53ef\u4ee5\u901a\u8fc7socket\u8d4b\u503c\uff0c\u4e14\u4f20\u9012\u7684\u53c2\u6570\u4e5f\u5df2\u77e5\uff0c\u53ea\u662f\u8fd4\u56de\u503c\u4e0d\u540c\u3002</p> <p>AF_INET\uff1a\u5730\u5740\u65cf\uff08Address Family\uff09\uff0cAF_INET\u8868\u793a\u56e0\u7279\u7f51\u5730\u5740\u65cf\uff0c\u5982UDP, TCP\u7b49\u3002</p> <p>SOCK_STREAM\uff1aSocket\u7c7b\u578b\uff0c\u8fd9\u91cc\u4f7f\u7528\u6d41\u5f0f\u4f20\u8f93\u3002\u8fd8\u6709\u6570\u636e\u62a5\u4f20\u8f93\u3001\u539f\u751f\u5957\u63a5\u5b57\u7b49\u7b49\u3002</p> <p>IPPROTO_TCP\uff1aSocket\u4f7f\u7528\u7684\u534f\u8bae\uff0c\u8fd9\u91cc\u5b9a\u4e49\u4e86TCP\u534f\u8bae\u3002</p> <p>\u5bf9\u4e8eTCP\u4f20\u8f93\uff0c\u7528\u4e0a\u8ff0\u5b9a\u4e49\u5373\u53ef\uff0c\u5176\u4ed6\u5e38\u7528\u7684\u8bbe\u7f6e\uff1a</p> C++<pre><code>socket = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);                      // UDP \u5957\u63a5\u5b57\uff08\u65e0\u8fde\u63a5\u7684\u4e0d\u53ef\u9760\u6570\u636e\u4f20\u8f93\uff09\uff1a\nsocket = socket(AF_INET, SOCK_RAW, IPPROTO_RAW);                        // \u539f\u59cb\u5957\u63a5\u5b57\uff08\u7528\u4e8e\u76f4\u63a5\u8bbf\u95ee\u7f51\u7edc\u534f\u8bae\uff09\uff1a\nsocket = socket(AF_INET6, SOCK_STREAM, IPPROTO_TCP);                    // \u4f7f\u7528 IPv6 \u7684 TCP \u5957\u63a5\u5b57\uff1a\nsocket = socket(AF_INET6, SOCK_DGRAM, IPPROTO_UDP);                     // \u4f7f\u7528 IPv6 \u7684 UDP \u5957\u63a5\u5b57\uff1a\n\nsocket = socket(AF_INET, SOCK_RAW, IPPROTO_ICMP);                       // \u539f\u59cb ICMP \u5957\u63a5\u5b57\nsocket = socket(AF_INET, SOCK_RAW, IPPROTO_IGMP);                       // \u539f\u59cb IGMP \u5957\u63a5\u5b57\nsocket = socket(AF_INET, SOCK_RAW, IPPROTO_ARP);                        // \u539f\u59cb ARP \u5957\u63a5\u5b57\nsocket = socket(AF_INET, SOCK_RAW, IPPROTO_IP);                         // \u539f\u59cb IP \u5957\u63a5\u5b57\n\nsocket = socket(AF_PACKET, SOCK_RAW, htons(ETH_P_ALL));                 // \u4e32\u53e3\u5957\u63a5\u5b57\uff08\u7528\u4e8e\u4e32\u53e3\u901a\u4fe1\uff09\uff1a\nsocket = socket(AF_BLUETOOTH, SOCK_STREAM, BTPROTO_RFCOMM);             // \u84dd\u7259\u5957\u63a5\u5b57\uff08\u7528\u4e8e\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\uff09\uff1a\n</code></pre> <p>\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1\u4fdd\u8bc1\u517c\u5bb9\u6027\uff0cWindows\u548cLinux\u7684\u5b8f\u5b9a\u4e49\u547d\u540d\u5927\u81f4\u4e00\u81f4\uff0c\u4f46\u5728\u4f7f\u7528\u65f6\uff0c\u8fd8\u9700\u8981\u68c0\u67e5\u4e00\u4e0b\u662f\u5426\u6709\u5bf9\u5e94\u7684\u63a5\u53e3\u652f\u6301\u3002</p> <p>\u57df\u7ed1\u5b9a</p> <p>\u57df\u540d\u3001\u534f\u8bae\u3001\u7aef\u53e3\uff0c\u8fd9\u4e09\u8005\u7684\u7ec4\u5408\u4e3a\u57df\u3002</p> <p>\u5f53\u505a\u670d\u52a1\u7aef\uff0c\u7b49\u5f85\u5916\u6765\u7684Socket\u8fde\u63a5\u65f6\uff0cSocket\u9996\u5148\u8981\u505a\u4e00\u4e2a\u57df\u7ed1\u5b9a\u3002</p> C++<pre><code>struct sockaddr_in socket_addr;                                                 // \u58f0\u660e\u5730\u5740\u53c2\u6570\nmemset(&amp;sockAddr, 0, sizeof(sockAddr));                                         // \u521d\u59cb\u5316socket_addr\u4e3a0\n\nsocket_addr.sin_family = AF_INET;                                               // \u534f\u8bae\nsocket_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");                           // \u57df\u540d\nsocket_addr.sin_port = htons(10086);                                            // \u7aef\u53e3\n\nif (bind(socketFD, (struct sockaddr *)&amp;socket_addr, sizeof(address)) &lt; 0) {     \n    printf(\"Linux Bind Socket Failed. err: %s\", strerror(errno));               // \u9519\u8bef\u6253\u5370\n    return -1;                                                                  // \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\n}\n</code></pre> <p>Linux\u4e0eWindows\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u4ee3\u7801\u8fdb\u884c\u7ed1\u5b9a\u3002\u8fd9\u91cc\u7684bind\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fstruct sockaddr *\uff0csockaddr \u662f\u6bd4 sockaddr_in \u66f4\u901a\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u76d1\u542c</p> <p>\u670d\u52a1\u7aef\u7ed1\u5b9a\u597d\u57df\u540e\uff0c\u5219\u53ef\u4ee5\u5f00\u59cb\u76d1\u542c\u4e86\uff0c\u6709\u4e24\u6b65\u9aa4\uff1a</p> <p>\u2460\u5efa\u7acb\u76d1\u542c\u670d\u52a1\u5668</p> C++<pre><code>if (listen(socketFD, 10) &lt; 0) {                                         // \u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u652f\u6301\u7684\u8fde\u63a5\u6570\n    printf(\"Listen Socket Failed. err: %s\", strerror(errno));           // \u9519\u8bef\u6253\u5370\n    close(socketFD);                                                    // \u76d1\u542c\u5931\u8d25\u5173\u95edSocket\n    return -1;                                                          // \u81ea\u5b9a\u4e49\u9519\u8bef\u5904\u7406\n}\n</code></pre> <p>\u2461\u63a5\u6536\u670d\u52a1\u7aef\u8fde\u63a5</p> C++<pre><code>int accept_socket = accept(socketFD, NULL, NULL);                               // Linux\nSOCKET accept_socket = accept(linkSocket, NULL, NULL);                          // Windows\n\nif (accept_socket &lt; 0) {                                                        // Linux\nif (accept_socket == INVALID_SOCKET) {                                          // Windows\n    printf(\"Accept Socket Failed. err: %s\", strerror(errno));\n    return -1;\n}\n</code></pre> <p>accept\u7684\u7b2c\u4e8c\u4e2a\u548c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f1a\u7ed9\u4f20\u5165\u7684\u53c2\u6570\u8bbe\u7f6esockaddr\u548csocklen\uff0c\u5982\u679c\u6709\u9700\u8981\uff0c\u53ef\u4ee5\u4f20\u5165\u4e24\u4e2a\u53d8\u91cf\u7684\u5730\u5740\u8d4b\u503c\u3002</p> <p>\u8fd9\u91cc\u548c\u521b\u5efaSocket\u4e00\u6837\uff0c\u4e8c\u8005\u7684\u8fd4\u56de\u503c\u4e0d\u540c\u3002</p> <p>\u8fde\u63a5</p> <p>\u670d\u52a1\u7aef\u5f00\u542f\u76d1\u542c\u540e\uff0c\u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u8fde\u63a5\u4e86\u3002</p> C++<pre><code>if (connect(socketFD, (struct sockaddr *) &amp;socket_addr, sizeof(socket_addr)) &lt; 0) {\n    printf(\"Connect Socket Failed. err: %s\", strerror(errno));\n    return -1;\n}\n</code></pre> <p>\u5ba2\u6237\u7aef\u7684connect\u548c\u670d\u52a1\u7aef\u7684bind\u53c2\u6570\u662f\u4e00\u81f4\u7684\u3002\u672c\u8d28\u4e0a\uff0c\u4e1c\u897f\u662f\u4e00\u6837\u7684\uff0c\u4e00\u4e2a\u662f\u6211\u7684\uff0c\u4e00\u4e2a\u662f\u6211\u8fde\u4f60\u7684\u3002</p> <p>\u6536\u53d1</p> <p>\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u7aef\u5efa\u7acb\u597d\u8fde\u63a5\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u6536\u53d1\u4e86\uff0c</p> C++<pre><code>char sendBuffer[1024];\nchar message[11] = \"I Love You\";\nsprintf(sendBuffer, \"I want tell you: %s\", message);                                    // \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n\nif (send(socketFD, sendBuffer, strlen(sendBuffer), 0) != strlen(sendBuffer)) {\n    printf(\"Send Socket Failed. err: %s\", strerror(errno));                             // \u9519\u8bef\u6253\u5370\n    close(socketFD);                                                                    // \u53d1\u9001\u5931\u8d25\u5173\u95edSocket\n    return -1;\n}\n</code></pre> <p>\u672c\u6587\u4f7f\u7528\u4e86sprintf\u6765\u683c\u5f0f\u5316\u53d1\u9001\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u4f7f\u7528\u4e86C++\u7684<code>std::string</code>\uff0c\u53ef\u4ee5\u8c03\u7528<code>.c_str()</code>\u6765\u683c\u5f0f\u6210char\u6570\u7ec4\u3002</p> <p>Linux\u7684send\u8fd4\u56de\u7684\u662f\u53d1\u9001\u7684\u957f\u5ea6\uff0c\u800cWindows\u5219\u8868\u793a\u662f\u5426\u53d1\u9001\u6210\u529f.</p> <p>\u5982\u679c\u662f\u53d1\u9001\u7684\u5b57\u7b26\u4e32\uff0c\u8981\u7528strlen\uff0c\u8db3\u591f\u5c31\u597d\u3002\u5982\u679c\u662f\u6307\u9488\u6570\u636e\uff0c\u5219\u7528sizeof\uff0c\u4fdd\u8bc1\u6570\u636e\u53d1\u9001\u5b8c\u6574\u3002</p> <p>\u5bf9\u4e8e\u63a5\u6536\u6765\u8bf4\uff0c\u8003\u8651\u7684\u8981\u6bd4\u53d1\u9001\u66f4\u591a\u4e00\u4e9b\uff0c\u5148\u770b\u4e0b\u6700\u57fa\u672c\u7684\u63a5\u6536\u6570\u636e\uff1a</p> C++<pre><code>char recvBuff[1024];\nint readLen = recv(socketFd, recvBuff, 1024, 0);\nif(readLen &lt; 0) {\n    printf(\"Recv Socket Failed. err: %s\", strerror(errno));                         // \u9519\u8bef\u6253\u5370\n    close(socketFD);                                                                // \u63a5\u6536\u5931\u8d25\u5173\u95edSocket\n    return -1;\n}\n</code></pre> <p>\u57fa\u4e8e\u7f51\u7edc\u60c5\u51b5\uff0c\u5728\u63a5\u6536\u65f6\u5019\u6211\u4eec\u5f80\u5f80\u5bb9\u6613\u78b0\u5230\u7c98\u5305\u7684\u60c5\u51b5\uff0cSocket\u5f88\u53ef\u80fd\u4f1a\u4e00\u6b21\u6536\u5230\u4e24\u4e2a\u5305\u3002\u6216\u8005\u4e22\u5305\uff0c\u53ea\u6709\u534a\u4e2a\u5305\uff0c\u4e00\u4e2a\u534a\u7684\u5305\u7b49\u60c5\u51b5\u3002\u4e3a\u4e86\u63d0\u9ad8\u5065\u58ee\u6027\uff0c\u6211\u4eec\u6700\u597d\u5bf9\u53d1\u9001\u7684\u6570\u636e\u6dfb\u52a0\u4e00\u4e2a\u7ed3\u675f\u6807\u5fd7\u4f4d\u3002</p> C++<pre><code>char sendBuffer[1024];\nchar message[11] = \"I Love You\";\nsprintf(sendBuffer, \"I want tell you: %s;end;\", message);   \n</code></pre> <p>\u8fd9\u6837\uff0c\u5f53\u6211\u4eec\u78b0\u5230<code>end;</code>\u7684\u65f6\u5019\uff0c\u5c31\u77e5\u9053\u4e00\u4e2a\u6570\u636e\u63a5\u6536\u5b8c\u6210\u4e86\u3002\u6211\u4eec\u65b0\u589e\u4e00\u4e2a\u53d8\u91cf\u7528\u4f5c\u5927\u7f13\u5b58\uff0c\u6bcf\u6b21recv\u7684\u6570\u636e\u653e\u5728\u5c0f\u7f13\u5b58\u3002\u7136\u540e\u6bcf\u4e00\u6b21\u8bfb\u53d6\u6570\u636e\u5904\u7406\u5b8c\u6574\u7684\u5e27\u3002</p> C++<pre><code>int FindEnd(char *receiveBuff) {\n    char *end;\n    if (receiveBuff == NULL) {\n        return 0;                       // \u5916\u4f20\u6307\u9488\u68c0\u7a7a\n    }\n\n    end = strstr(receiveBuff, \"end;\");  // \u627e\u5230\u7ed3\u675f\u6807\u5fd7\u4f4d\u7684\u4f4d\u7f6e\n    if (end != NULL) {\n        *end = '\\0';                    // \u8bbe\u7f6e\u7ed3\u675f\u6807\u5fd7\u4f4d\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u68c0\u6d4b\u5c31\u53ea\u5230\u8fd9\u91cc\u4e86\n        return 1;\n    }\n    return 0;\n}\n\nchar recv[1024];\nint recvLen = 0;\n\nint recvFunction() {\n    char recvOnce[256];\n    int recvOnceLen;\n\n    while(1) {\n        recvOnceLen = recv(socketFd, recvOnce, 256, 0);\n        if(recvOnceLen &lt; 0) {\n            printf(\"Recv Socket Failed. err: %s\", strerroor(errno));    \n            close(socketFD);\n            return -1;\n        }\n\n        if (memcpy_s(&amp;recv[recvLen], 1024, recvOnce, recvOnceLen) != 0) {\n            recvLen = 0;\n            printf(\"Recv Overflow\");    \n            return -1;\n        }\n\n        recvLen += recvOnceLen;\n        recv[recvLen] = '\\0';\n\n        while(FindEnd(recv)) {\n            int moveLen = 0;\n            moveLen = strlen(recv) + 4;         // 4\u4e3aend;\u7684\u957f\u5ea6\uff0c\u8fd9\u91ccmoveLen\u6307\u5411\u4e0b\u4e00\u4e2a\u5305\u7684\u8d77\u70b9\n            ...                                 // \u5904\u7406recv\n            recvLen -= moveLen;\n\n            memmove(recv, &amp;recv[moveLen], recvLen + 1);\n            // \u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u8981\u590d\u5236\u7684\u4f4d\u7f6e\n            // \u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u8981\u590d\u5236\u7684\u6570\u636e\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\n            // \u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u8981\u590d\u5236\u7684\u5b57\u8282\u7684\u6570\u91cf\n        }\n    }\n}\n</code></pre> <p>memmove\u7684\u7406\u89e3\u5982\u56fe\uff1a</p> <p></p> <p>I/O \u591a\u8def\u590d\u7528\uff1aselect/poll/epoll</p> <p>\u4e00\u4e2asocket\u8fde\u63a5\uff0c\u5728recv\u7684\u65f6\u5019\u662f\u963b\u585e\u7684\u3002</p> <p>\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2asocket\u670d\u52a1\u7aef\uff0c\u4e0a\u9762\u5efa\u7acb\u4e86\u4e24\u4e2asocket\u8fde\u63a5\u3002\u5982\u679c\u8981\u540c\u65f6recv\u8fd9\u4e24\u4e2asocket\uff0c\u90a3\u4e48\u6700\u521d\u6b65\u7684\u60f3\u6cd5\u5c31\u662f\u901a\u8fc7\u591a\u7ebf\u7a0b\u7684\u65b9\u5f0f\uff0c\u6bcf\u4e00\u4e2asocket\u5efa\u7acb\u4e00\u4e2a\u7ebf\u7a0b\u3002</p> <p>\u591a\u7ebf\u7a0b\u5b58\u5728\u7684\u95ee\u9898\uff1a</p> <p>\u2460\u591a\u7ebf\u7a0b\u56fa\u6709\u95ee\u9898\uff1a\u591a\u7ebf\u7a0b\u7f16\u7a0b\u9700\u8981\u8003\u8651\u540c\u6b65\u673a\u5236\uff0c\u4ee5\u786e\u4fdd\u5171\u4eab\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u2461\u8d44\u6e90\u6d6a\u8d39\uff1arecv\u65f6\uff0c\u7ebf\u7a0b\u4f1a\u8fdb\u884c\u8f6e\u8be2\uff0c\u5360\u7528CPU\u8d44\u6e90\u3002</p> <p>\u7cfb\u7edf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u673a\u5236\u6765\u5b9e\u73b0\u4e00\u4e2a\u8fdb\u7a0b\u6765\u7ef4\u62a4\u591a\u4e2a Socket\uff0c\u4ee5\u964d\u4f4e\u591a\u7ebf\u7a0b\u7684\u6027\u80fd\u635f\u8017\uff1a\u901a\u8fc7\u4e00\u4e2a\u8f6e\u8be2\u591a\u4e2asocket\u662f\u5426\u6709\u6570\u636e\u5230\u6765\uff0c\u5bf9\u6709\u6570\u636e\u7684socket\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u91cc\u6210\u4e3a\u591a\u8def\u590d\u7528\u3002</p> <p>select/poll</p> <p>select \u5b9e\u73b0\u591a\u8def\u590d\u7528\u7684\u65b9\u5f0f\uff1a\u63d0\u4f9b\u4e00\u4e2a\u96c6\u5408FdSet\uff0c\u5c06\u8981\u76d1\u542c\u7684socket\u6dfb\u52a0\u5230\u8fd9\u4e2a\u96c6\u5408\u91cc\u3002\u901a\u8fc7\u5185\u6838\u68c0\u67e5\u8fd9\u4e9bsocket\u662f\u5426\u6709\u7f51\u7edc\u4e8b\u4ef6\u53d1\u751f\uff0c\u5bf9\u6709\u4e8b\u4ef6\u7684socket\u8fdb\u884c\u6807\u8bb0\uff0c\u7136\u540e\u8fd4\u56de\u3002</p> <p>select \u4f7f\u7528\u56fa\u5b9a\u957f\u5ea6\u7684 BitsMap\uff0c\u8868\u793a\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\uff0c\u800c\u4e14\u6240\u652f\u6301\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e2a\u6570\u662f\u6709\u9650\u5236\u7684\uff0c\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u7531\u5185\u6838\u4e2d\u7684 FD_SETSIZE \u9650\u5236\uff0c \u9ed8\u8ba4\u6700\u5927\u503c\u4e3a <code>1024</code>\uff0c\u53ea\u80fd\u76d1\u542c 0~1023 \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</p> <p>poll \u4e0d\u518d\u7528 BitsMap \u6765\u5b58\u50a8\u6240\u5173\u6ce8\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u53d6\u800c\u4ee3\u4e4b\u7528\u52a8\u6001\u6570\u7ec4\uff0c\u4ee5\u94fe\u8868\u5f62\u5f0f\u6765\u7ec4\u7ec7\uff0c\u7a81\u7834\u4e86 select \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2a\u6570\u9650\u5236\uff0c\u5f53\u7136\u8fd8\u4f1a\u53d7\u5230\u7cfb\u7edf\u6587\u4ef6\u63cf\u8ff0\u7b26\u9650\u5236\u3002</p> <p>\u8fd9\u91cc\u53ea\u5bf9select\u4e3e\u4f8b\uff1a</p> C++<pre><code>fd_set fdSet;\nmaxFd = -1;\n\nFD_ZERO(&amp;fdSet);\n\nint accept_socketA = accept(socketFD, NULL, NULL);\nint accept_socketB = accept(socketFD, NULL, NULL);\nint accept_socketC = accept(socketFD, NULL, NULL);\nint accept_socketD = accept(socketFD, NULL, NULL);\n\nFD_SET(accept_socketA, &amp;fdSet);\nmaxFd = (accept_socketA &gt; maxFd) ? accept_socketA : maxFd;\nFD_SET(accept_socketB, &amp;fdSet);\nmaxFd = (accept_socketB &gt; maxFd) ? accept_socketB : maxFd;  \nFD_SET(accept_socketC, &amp;fdSet);\nmaxFd = (accept_socketC &gt; maxFd) ? accept_socketC : maxFd;  \nFD_SET(accept_socketD, &amp;fdSet);\nmaxFd = (accept_socketD &gt; maxFd) ? accept_socketD : maxFd;  \n\nint ret = select(maxFd + 1, &amp;fdSet, NULL, NULL, NULL);\nif(ret &lt; 0) {\n    return ;\n}\n\nif (FD_ISSET(accept_socketA, &amp;fdSet)) {\n    // recv\u5e76\u5904\u7406\n}\nif (FD_ISSET(accept_socketB, &amp;fdSet)) {\n    // recv\u5e76\u5904\u7406\n}\nif (FD_ISSET(accept_socketC, &amp;fdSet)) {\n    // recv\u5e76\u5904\u7406\n}\nif (FD_ISSET(accept_socketD, &amp;fdSet)) {\n    // recv\u5e76\u5904\u7406\n}\n\nclose(accept_socketA);\naccept_socketA = -1                 // \u5173\u95ed\u5e76\u4e0d\u518d\u68c0\u6d4bsocket\u53d8\u5316\n</code></pre> <p>epoll</p> <p>epoll \u901a\u8fc7\u4e24\u4e2a\u65b9\u9762\uff0c\u5f88\u597d\u89e3\u51b3\u4e86 select/poll \u7684\u95ee\u9898\u3002</p> <p>\u7b2c\u4e00\u70b9\uff0c\u5728\u5185\u6838\u91cc\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u8ddf\u8e2a\u8fdb\u7a0b\u6240\u6709\u5f85\u68c0\u6d4b\u7684\u6587\u4ef6\u63cf\u8ff0\u5b57\u3002</p> <p>\u7b2c\u4e8c\u70b9\uff0c epoll \u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u7684\u673a\u5236\uff0c\u4ee5\u94fe\u8868\u8bb0\u5f55\u5c31\u7eea\u4e8b\u4ef6\uff0c\u907f\u514d\u8f6e\u8be2\u3002</p> <p>\u4f7f\u7528\u53c2\u8003\uff1a https://subingwen.cn/linux/epoll/index.html</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/","title":"\u51fd\u6570\u8017\u65f6\u8ba1\u7b97","text":"<p>\u5728\u4ee3\u7801\u6027\u80fd\u5206\u6790\u4e2d\uff0c\u51fd\u6570\u8017\u65f6\u662f\u5e38\u7528\u7684\u5173\u952e\u6307\u6807\u4e4b\u4e00\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7cbe\u786e\u5b9a\u4f4d\u6027\u80fd\u74f6\u9888\u4f4d\u7f6e\uff0c\u5e76\u91c7\u53d6\u9488\u5bf9\u6027\u7684\u4f18\u5316\u63aa\u65bd\u3002</p> <p>\u5e38\u7528\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5982 atrace\uff0c\u5df2\u7ecf\u652f\u6301\u4e86\u51fd\u6570\u8017\u65f6\u8ba1\u7b97\u529f\u80fd\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u5b9a\u5236\u5316\u4e00\u4e9b\u529f\u80fd\uff0c\u4f8b\u5982\uff1a\u5206\u6790\u51fd\u6570\u7684\u975e\u8c03\u7528\u8017\u65f6\uff0c\u5c31\u9700\u8981\u81ea\u5df1\u8fdb\u884c\u5b9e\u73b0\u4e86\u3002</p> <p>\u672c\u6587\u5c06\u7b80\u5355\u4ecb\u7ecd\u4e00\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7528\u4e8e\u8ba1\u7b97\u51fd\u6570\u7684\u5b8c\u6574\u8017\u65f6\u4e0e\u975e\u8c03\u7528\u8017\u65f6\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_2","title":"\u51fd\u6570\u6253\u6869\u70b9","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_3","title":"\u65f6\u95f4\u51fd\u6570","text":"<p>\u8ba1\u7b97\u51fd\u6570\u6027\u80fd\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8ba1\u7b97\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u7684\u65f6\u95f4\u5dee\u3002\u56e0\u6b64\uff0c\u8981\u5bf9\u65f6\u95f4\u76f8\u5173\u7684\u5e93\u6709\u6240\u4e86\u89e3\u3002</p> <p>\u4ee5C++\u4e3a\u4f8b\uff0c \"chrono\" \u662f C++ \u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u63d0\u4f9b\u4e86\u65f6\u95f4\u76f8\u5173\u7684\u529f\u80fd\uff0c\u5305\u62ec\u65f6\u949f\u3001\u65f6\u95f4\u70b9\u548c\u6301\u7eed\u65f6\u95f4\u7684\u5904\u7406\uff1a</p> C++<pre><code>#include &lt;chrono&gt;\n/* \u5f53\u524d\u7cfb\u7edf\u65f6\u95f4 */\nauto now = std::chrono::system_clock::now();\nstd::cout &lt;&lt; std::ctime(&amp;timestamp) &lt;&lt; std::endl;//Fri Feb  4 12:30:00 2024\n\n/* \u7a33\u5b9a\u7684\u65f6\u949f\uff0c\u5176\u9012\u589e\u901f\u7387\u4e0d\u53d7\u7cfb\u7edf\u65f6\u949f\u8c03\u6574\u7684\u5f71\u54cd\u3002\u901a\u5e38\u7528\u4e8e\u6d4b\u91cf\u65f6\u95f4\u95f4\u9694 */\nauto start = std::chrono::steady_clock::now();\nauto end = std::chrono::steady_clock::now();\n\n/* \u76f8\u5f53\u4e8e steady_clock \u7684\u9ad8\u7cbe\u5ea6\u7248\u672c */\nauto start = std::chrono::high_resolution_clock::now();\nauto end = std::chrono::high_resolution_clock::now();\n\n/* \u8ba1\u7b97\u65f6\u95f4\u5dee */\nstd::chrono::duration&lt;double&gt; elapsed = end - start;    // C++\u7684\u591a\u6001\u4f7f\u5f97\u5176\u5dee\u503c\u53ef\u4ee5\u8fd4\u56de\n                                                        // std::chrono::duration&lt;double&gt;\n/* \u8f6c\u6362\u65f6\u95f4\u5355\u4f4d */\nstd::chrono::microseconds duration = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(elapsed);\nstd::chrono::minutes duration = std::chrono::duration_cast&lt;std::chrono::minutes&gt;(elapsed);\nstd::chrono::seconds duration = std::chrono::duration_cast&lt;std::chrono::seconds&gt;(elapsed);\nstd::chrono::milliseconds duration = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(elapsed);\nstd::chrono::microseconds duration = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(elapsed);\nstd::chrono::nanoseconds duration = std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(elapsed);\nauto duration = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(elapsed); //\u7b80\u6d01\n\n/* \u8fd4\u56de\u65f6\u95f4\u5b57\u7b26\u4e32 */\nstd::cout &lt;&lt; duration.count() &lt;&lt; std::endl;\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_4","title":"\u6253\u6869","text":"<p>\u901a\u8fc7\u5bf9\u51fd\u6570\u8fdb\u884c\u6253\u6869\uff0c\u8ba1\u7b97\u5dee\u503c\uff0c\u4ece\u800c\u5f97\u5230\u51fd\u6570\u8fd0\u884c\u7684\u5b8c\u6574\u6027\u80fd\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e24\u6570\u4e4b\u548c\u7684\u793a\u4f8b\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n\nstd::vector&lt;int&gt; twoSum(std::vector&lt;int&gt; &amp;nums, int target) {\n    /* \u6253\u6869\u70b91 */\n    std::unordered_map&lt;int, int&gt; numMap;\n    for (int i = 0; i &lt; nums.size(); ++i) {\n        int complement = target - nums[i];\n        // \u67e5\u627e complement \u662f\u5426\u5728 map \u4e2d\n        auto it = numMap.find(complement);\n        if (it != numMap.end()) {\n            // \u627e\u5230\u4e86\u4e24\u4e2a\u6570\u7684\u7d22\u5f15\n            return {it-&gt;second, i};\n        }\n        // \u5c06\u5f53\u524d\u6570\u53ca\u5176\u7d22\u5f15\u6dfb\u52a0\u5230 map \u4e2d\n        numMap[nums[i]] = i;\n    }\n    /* \u6253\u6869\u70b92 */\n\n    // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5bf9\uff0c\u8fd4\u56de\u7a7a\u5411\u91cf\n    return {};\n}\n</code></pre> <p>\u6709\u4eba\u76f8\u7231</p> <p>\u6709\u4eba\u591c\u91cc\u770b\u6d77</p> <p>\u6709\u4ebaLeetcode\u7b2c\u4e00\u9898\u505a\u4e0d\u51fa\u6765</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_5","title":"\u53d8\u79cd","text":"<p>\u5bf9\u4e8eC++\u800c\u8a00\uff0c\u6709\u4e00\u4e2a\u66f4cool\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n\nclass TimeProfiler {\npublic:\n    TimeProfiler() {\n        // \u6253\u6869\u70b91\uff1a\u5f00\u59cb\u8ba1\u65f6\n    }\n\n    ~TimeProfiler() {\n        // \u6253\u6869\u70b92\uff1a\u7ed3\u675f\u8ba1\u65f6\u5e76\u8f93\u51fa\u65f6\u95f4\u5dee\n    }\n};\n\nstd::vector&lt;int&gt; twoSum(std::vector&lt;int&gt; &amp;nums, int target) {\n    TimeProfiler timeProfiler;\n    std::unordered_map&lt;int, int&gt; numMap;\n    for (int i = 0; i &lt; nums.size(); ++i) {\n        int complement = target - nums[i];\n        // \u67e5\u627e complement \u662f\u5426\u5728 map \u4e2d\n        auto it = numMap.find(complement);\n        if (it != numMap.end()) {\n            // \u627e\u5230\u4e86\u4e24\u4e2a\u6570\u7684\u7d22\u5f15\n            return {it-&gt;second, i};\n        }\n        // \u5c06\u5f53\u524d\u6570\u53ca\u5176\u7d22\u5f15\u6dfb\u52a0\u5230 map \u4e2d\n        numMap[nums[i]] = i;\n    }\n\n    // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5bf9\uff0c\u8fd4\u56de\u7a7a\u5411\u91cf\n    return {};\n}\n</code></pre> <p>\u8fd9\u6837\u7684\u5b9e\u73b0\uff1a</p> <ol> <li>RAII\uff08Resource Acquisition Is Initialization\uff09\u6a21\u5f0f\uff1a\u6839\u636e\u7c7b\u7684\u7279\u6027\uff0c\u5728\u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u6267\u884c\u6253\u6869\u70b92\uff0c\u76f8\u6bd4\u624b\u52a8\u6253\u70b9\u4f4d\u7f6e\u66f4\u53ef\u9760\uff1b</li> <li>\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1a\u5f15\u5165\u4e86\u7c7b\uff0c\u5c31\u53ef\u4ee5\u5229\u7528\u591a\u6001\u548c\u7ee7\u627f\u6765\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u6253\u6869\u65b9\u6cd5\uff0c\u53ef\u4ee5\u9002\u914d\u4e0d\u540c\u7684\u5e73\u53f0\u3001\u4e0d\u540c\u7684\u6253\u6869\u903b\u8f91\u4ee5\u53ca\u4e0d\u540c\u7684\u8fd4\u56de\u7ed3\u679c\u7b49\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_6","title":"\u65f6\u95f4\u8ba1\u7b97","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_7","title":"\u51fd\u6570\u8c03\u7528\u6808","text":"<p>\u5047\u8bbe\u6211\u4eec\u7684\u7a0b\u5e8f\u6709\u5f88\u591a\u7684\u65b9\u6cd5\uff0c\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u51fd\u6570\u8c03\u7528\u6808\uff1a</p> Text Only<pre><code>startShopping()\n\u2502\n\u251c\u2500\u2500 loginUser()\n\u2502    \u2502\n\u2502    \u251c\u2500\u2500 verifyCredentials()\n\u2502    \u2502    \u2502\n\u2502    \u2502    \u2514\u2500\u2500 checkDatabase()\n\u2502    \u2502\n\u2502    \u2514\u2500\u2500 loadUserProfile()\n\u2502         \u2502\n\u2502         \u251c\u2500\u2500 fetchUserDetails()\n\u2502         \u2502\n\u2502         \u2514\u2500\u2500 fetchUserPreferences()\n\u2502\n\u251c\u2500\u2500 showCatalog()\n\u2502    \u2502\n\u2502    \u251c\u2500\u2500 fetchProductList()\n\u2502    \u2502\n\u2502    \u2514\u2500\u2500 displayProducts()\n\u2502\n\u2514\u2500\u2500 processPayment()\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_8","title":"\u51fd\u6570\u5b8c\u6574\u65f6\u95f4","text":"<p>\u5bf9\u4e8e\u51fd\u6570\u7684\u5b8c\u6574\u5b9e\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5b9e\u73b0\u4e86TimeProfiler\u7c7b\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u51fd\u6570\u7684\u5f00\u59cb\u90fd\u58f0\u660e\u8fd9\u4e2a\u7c7b\u5373\u53ef\u3002</p> <p>\u4f46\u662f\uff0c\u73b0\u5728\u6211\u6709\u4e00\u4e9b\u60f3\u6cd5\uff1a</p> <p>\u2460\u7c7b\u7684\u6210\u5458\u7ba1\u7406\u5f88\u9ebb\u70e6\uff0c\u6211\u4eec\u4e0d\u9700\u8981</p> <p>\u2461\u6211\u4eec\u5e0c\u671b\u80fd\u770b\u5230\u7684\u6574\u4e2a\u5904\u7406\u8fc7\u7a0b\u6e05\u6670\u3001\u5b8c\u6574\uff0c\u4e0d\u8981\u88ab\u6784\u9020\u4e0e\u6790\u6784\u51fd\u6570\u5206\u5f00</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u7a0d\u5fae\u6539\u53d8\u4e00\u4e0b\u5b9e\u73b0\u7684\u903b\u8f91\uff0c\u7c7b\u7684\u6784\u9020\u4e0e\u6790\u6784\u51fd\u6570\u4e0d\u8d1f\u8d23\u5b9e\u73b0\u903b\u8f91\uff0c\u53ea\u8d1f\u8d23\u53c2\u6570\u4f20\u9012\u3002\u7531\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\u5b9e\u73b0\u65f6\u95f4\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n#include &lt;string&gt;\n#include &lt;chrono&gt;\n#include &lt;stack&gt;\n\n// \u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u662f\u6808\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6808\u5b58\u50a8\u8c03\u7528\u65f6\u95f4\n// \u51fd\u6570\u5f00\u59cb\u65f6\uff0c\u5165\u6808start\uff0c\u7ed3\u675f\u65f6\uff0c\u8ba1\u7b97\u5dee\u503c\u7136\u540e\u51fa\u6808\u3002\nstd::stack&lt;std::chrono::high_resolution_clock::time_point&gt; timeStack;\n\nvoid functionTimeProfiler(const std::string&amp; markerName, bool start) {\n    if (start) {\n        timeStack.push(std::chrono::high_resolution_clock::now());\n    } else {\n        // \u8ba1\u7b97\u5dee\u503c\n        auto end = std::chrono::high_resolution_clock::now();\n        std::chrono::duration&lt;double&gt; elapsed = end - timeStack.top();\n        timeStack.pop();\n        std::chrono::microseconds duration = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(elapsed);\n\n        // \u6253\u5370\n        std::cout &lt;&lt; markerName &lt;&lt; \" time: \" &lt;&lt; duration.count() &lt;&lt; \" microseconds\" &lt;&lt; std::endl;\n    }\n}\n\nclass TimeProfiler {\npublic:\n    TimeProfiler(const std::string&amp; markerName): markerName(markerName) {\n        functionTimeProfiler(markerName, true);\n    }\n\n    ~TimeProfiler() {\n        functionTimeProfiler(markerName, false);\n    }\n\nprivate:\n    std::string markerName;\n};\n\nint startShopping() {\n    TimeProfiler timeProfiler(\"startShopping\");\n\n    // ...\u51fd\u6570\u5b9e\u73b0\u903b\u8f91\uff0c\u7701\u7565\n}\n\n// ...\u5176\u4ed6\u65b9\u6cd5\u540cstartShopping\uff0c\u7701\u7565\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_9","title":"\u51fd\u6570\u975e\u8c03\u7528\u65f6\u95f4","text":"<p>\u73b0\u5728\u6709\u4e00\u4e2a\u9700\u6c42\uff0c\u76ee\u6807\u662f\u8ba1\u7b97\u51fd\u6570\u7684\u201c\u7eaf\u6267\u884c\u65f6\u95f4\u201d\uff0c\u5373\u9664\u53bb\u5176\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4ee5\u805a\u7126\u4e8e\u51fd\u6570\u672c\u8eab\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e <code>startShopping</code> \u51fd\u6570\uff0c\u5176\u975e\u8c03\u7528\u65f6\u95f4\u662f <code>startShopping</code> \u7684\u603b\u65f6\u95f4\u51cf\u53bb <code>loginUser</code>\u3001<code>showCatalog</code> \u548c <code>processPayment</code> \u7684\u603b\u65f6\u95f4\u3002</p> <p>\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\u89c4\u5f8b\uff0c\u6211\u4eec\u4ecd\u53ef\u4ee5\u5728\u51fd\u6570\u5165\u6808\u548c\u51fa\u6808\u8fdb\u884c\u64cd\u4f5c\uff1a</p> <ol> <li>\u51fd\u6570\u8c03\u7528\u7684\u5c42\u7ea7\u6027:</li> <li>\u51fd\u6570\u7684\u8c03\u7528\u662f\u5206\u5c42\u7684\uff0c\u4f8b\u5982\uff1a<code>startShopping</code> \u5728\u7b2c\u4e00\u5c42\uff0c\u800c\u5b83\u6240\u8c03\u7528\u7684\u51fd\u6570\uff08\u5982 <code>loginUser</code>\u3001<code>showCatalog</code> \u548c <code>processPayment</code>\uff09\u5728\u7b2c\u4e8c\u5c42\u3002</li> <li>\u975e\u8c03\u7528\u65f6\u95f4<code>selftime</code>\u7684\u65f6\u95f4\u662f\u5176\u5b8c\u6574\u65f6\u95f4<code>duration</code>\u51cf\u53bb\u5f53\u524d\u4e0b\u5c42\u51fd\u6570\u7684\u7d2f\u8ba1\u8c03\u7528\u65f6\u95f4<code>usedtime</code>\u3002</li> <li>\u51fd\u6570\u5165\u6808\u65f6\u7684\u64cd\u4f5c:</li> <li>\u5f00\u59cb\u8ba1\u65f6\u3002</li> <li>\u8c03\u7528\u5c42\u7ea7 (<code>level</code>) \u589e\u52a0\u3002</li> <li>\u51fd\u6570\u51fa\u6808\u65f6\u7684\u64cd\u4f5c:</li> <li>\u8ba1\u7b97\u5f53\u524d\u51fd\u6570\u7684\u6301\u7eed\u65f6\u95f4 (<code>duration</code>)\u3002</li> <li>\u8ba1\u7b97\u975e\u8c03\u7528\u65f6\u95f4\uff1a\u5f53\u524d\u51fd\u6570\u7684 <code>duration</code> \u51cf\u53bb\u4e0b\u5c42\u51fd\u6570\u7684\u7d2f\u8ba1\u8ba1\u65f6 <code>usedtime</code>\u3002</li> <li>\u672c\u5c42\u7684\u7d2f\u8ba1\u8c03\u7528\u65f6\u95f4<code>usedtime</code>\u589e\u52a0\u5f53\u524d\u51fd\u6570\u7684 <code>duration</code>\u3002</li> <li>\u4e0b\u5c42\u51fd\u6570\u7684 <code>duration</code> \u6e05\u96f6\uff0c\u4e3a\u672c\u5c42\u7684\u4e0b\u4e00\u4e2a\u51fd\u6570\u51c6\u5907\u3002\u4e0b\u5c42\u7684\u51fd\u6570\u603b\u8017\u65f6<code>usedtime</code>\u4ec5\u5728\u8ba1\u7b97\u5f53\u524d\u51fd\u6570\u7684\u975e\u8c03\u7528\u65f6\u95f4\u65f6\u6709\u7528\uff0c\u5f53\u5f53\u524d\u51fd\u6570\u51fa\u6808\u65f6\uff0c\u4e0b\u5c42\u7684duration\u8981\u6e05\u96f6\uff0c\u4ee5\u4fbf\u4e8e\u672c\u5c42\u7684\u4e0b\u4e00\u4e2a\u51fd\u6570\u8ba1\u7b97\u65f6\uff0c\u4e0b\u5c42\u7684<code>usedtime</code>\u91cd\u65b0\u8ba1\u65f6\u3002</li> <li>\u8c03\u7528\u5c42\u7ea7 (<code>level</code>) \u51cf\u5c11\u3002</li> </ol> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e0a\u8ff0\u65b9\u6cd5\u8fdb\u884c\u6539\u9020\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;unordered_map&gt;\n#include &lt;string&gt;\n#include &lt;chrono&gt;\n#include &lt;stack&gt;\n\nstd::vector&lt;double&gt; usedtime(32, 0);            // \u8bb0\u5f55\u6bcf\u4e00\u5c42\u7684duration\uff0c\u5047\u8bbe\u6700\u9ad8\u8c03\u7528\u5d4c\u5957\u5c42\u6570\u4e3a32\nint level = -1;                                 // \u4ee3\u8868\u5f53\u524d\u5c42\u6570\nstd::stack&lt;std::chrono::high_resolution_clock::time_point&gt; timeStack;\n\nvoid functionTimeProfiler(const std::string&amp; markerName, bool start) {\n    if (start) {\n        timeStack.push(std::chrono::high_resolution_clock::now());          // \u5bf9\u5e942-1: \u5f00\u59cb\u8ba1\u65f6\n        level += 1;                                                         // \u5bf9\u5e942-2: \u5c42\u7ea7\u589e\u52a0\n    } else {\n        // \u5bf9\u5e943-1: \u8ba1\u7b97\u5f53\u524d\u51fd\u6570\u6301\u7eed\u65f6\u95f4\n        std::chrono::duration&lt;double&gt; elapsed =\n            std::chrono::high_resolution_clock::now() - timeStack.top();\n        std::chrono::microseconds duration = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(elapsed);\n        timeStack.pop();\n\n        // \u5bf9\u5e943-2: \u8ba1\u7b97selftime\uff0c\u5373\u51fd\u6570\u7684\u975e\u8c03\u7528\u65f6\u95f4\n        double selfTime = duration.count() - usedtime[level + 1];\n        std::string seltimeStr = std::to_string(selfTime);\n\n        // \u5bf9\u5e943-3: \u672c\u5c42\u7684\u8c03\u7528\u8017\u65f6\u589e\u52a0\n        usedtime[level] += duration.count();\n\n        // \u5bf9\u5e943-4: \u4e0b\u5c42\u8c03\u7528\u8017\u65f6\u6e05\u96f6\n        usedtime[level + 1] = 0;\n\n        // \u5bf9\u5e943-5: \u5c42\u7ea7\u51cf\u5c11\n        level -= 1;\n\n        // \u8f93\u51fa\u7ed3\u679c\n        std::cout &lt;&lt; markerName &lt;&lt; \" time: \" &lt;&lt; duration.count() &lt;&lt; \" microseconds\" &lt;&lt; \", selftime: \" &lt;&lt; seltimeStr &lt;&lt; \" microseconds\" &lt;&lt; std::endl;\n    }\n}\n\n// ...\u5176\u4ed6\u51fd\u6570\u8c03\u7528\u903b\u8f91\u4e0d\u53d8\uff0c\u7701\u7565\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%87%BD%E6%95%B0%E8%80%97%E6%97%B6%E8%AE%A1%E7%AE%97/#_10","title":"\u603b\u7ed3","text":"<p>\u672c\u7bc7\u4e3b\u8981\u7528\u5230\uff1a</p> <ul> <li>\u65f6\u95f4\u5e93\u51fd\u6570\u7684\u4f7f\u7528</li> <li>\u7c7b\u4f5c\u7528\u57df\u7684\u5e94\u7528</li> <li>\u51fd\u6570\u7684\u5b8c\u6574\u65f6\u95f4\u8ba1\u7b97\u65b9\u6cd5</li> <li>\u51fd\u6570\u7684\u975e\u8c03\u7528\u65f6\u95f4\u8ba1\u7b97\u65b9\u6cd5</li> <li>\u4e24\u6570\u4e4b\u548c\u89e3\u6cd5</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/#_2","title":"\u6982\u5ff5","text":"<p>\u591a\u7ebf\u7a0b\u7f16\u7a0b\u662f\u4f7f\u7a0b\u5e8f\u80fd\u591f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u7684\u6280\u672f\uff0c\u662f\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u6548\u7387\u548c\u6027\u80fd\u7684\u91cd\u8981\u624b\u6bb5\u3002\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u901a\u5e38\u5305\u542b\u5728\u8fdb\u7a0b\u4e2d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u65f6\u90fd\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u4e0a\u4e0b\u6587\uff0c\u5305\u62ec\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u5bc4\u5b58\u5668\u96c6\u5408\u548c\u6808\u3002</p> <p>\u591a\u7ebf\u7a0b\u662f\u6307\u5728\u5355\u4e2a\u7a0b\u5e8f\u4e2d\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u8d44\u6e90\uff0c\u4ece\u800c\u63d0\u9ad8\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u6548\u7387\u3002\u7136\u800c\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e5f\u5b58\u5728\u6f5c\u5728\u7684\u98ce\u9669\uff0c\u5982\u6570\u636e\u7ade\u4e89\u548c\u6b7b\u9501\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\u5e94\u5408\u7406\u4f7f\u7528\u9501\uff0c\u907f\u514d\u591a\u7ebf\u7a0b\u7f16\u7a0b\u9020\u6210\u7684\u98ce\u9669\u3002</p> <p>\u591a\u7ebf\u7a0b\u65e2\u53ef\u4ee5\u5e76\u884c\u5904\u7406\uff08\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff09\uff0c\u4e5f\u53ef\u4ee5\u5e76\u53d1\u5904\u7406\uff08\u591a\u4e2a\u4efb\u52a1\u4ea4\u66ff\u8fdb\u884c\uff09\u3002\u5728\u5207\u6362\u7ebf\u7a0b\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u72b6\u6001\u5e76\u6062\u590d\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u72b6\u6001\u3002</p> <p>\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\uff0c\u591a\u7ebf\u7a0b\u6280\u672f\u80fd\u663e\u8457\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u8b6c\u5982\uff0c\u5728\u6570\u636e\u5904\u7406\u65f6\uff0c\u5c06\u6570\u636e\u5206\u5272\u5e76\u7531\u4e0d\u540c\u6838\u5fc3\u5e76\u884c\u5904\u7406\u80fd\u5927\u5e45\u7f29\u77ed\u8ba1\u7b97\u65f6\u95f4\u3002\u8fd9\u5728\u8ba1\u7b97\u82af\u7247\u4e0a\u5f97\u4ee5\u4f53\u73b0\uff0c2023\u5e74\u53d1\u552e\u7684M3\u82af\u7247\u7684Macbook\uff0c\u5c3d\u7ba1\u5176\u5236\u9020\u5de5\u827a\u7684\u8fdb\u6b65\u52303nm\uff0c\u4f46\u5355\u6838\u6027\u80fd\u5b9e\u9645\u5e76\u672a\u663e\u8457\u63d0\u5347\uff0c\u8001\u5e93\u514b\u901a\u8fc7\u5bf9\u6838\u73a9\u6cd5\uff08\u8fbe\u523016+40\u6838\u5fc3\uff09\uff0c\u786c\u662f\u5c06M3 Pro Max\u82af\u7247\u5728\u6027\u80fd\u4e0a\u63a5\u8fd1\u4e8eIntel\u768413900K\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u4ef7\u683c\u2026\u2026\u4f60\u61c2\u7684\u3002</p> <p>\u53e6\u5916\uff0c\u5728\u56fe\u5f62\u754c\u9762\u5e94\u7528\u4e2d\uff0c\u591a\u7ebf\u7a0b\u5bf9\u4e8e\u4fdd\u6301\u754c\u9762\u54cd\u5e94\u6027\u548c\u540e\u53f0\u4efb\u52a1\u7684\u540c\u65f6\u6267\u884c\u81f3\u5173\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5728Unity\u5e94\u7528\u4e2d\uff0c\u65e0\u8bba\u662f\u5728\u5b89\u5353\u5e73\u53f0\u8fd8\u662fOpenHarmony\u5e73\u53f0\u4e0a\uff0c\u5747\u8bbe\u6709\u4e24\u4e2a\u4e3b\u8981\u7ebf\u7a0b\uff1a<code>Main</code>\uff08\u8d1f\u8d23\u903b\u8f91\u5904\u7406\uff09\u548c<code>GFXDevice</code>\uff08\u8d1f\u8d23\u6e32\u67d3\uff09\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u80fd\u591f\u72ec\u7acb\u8fd0\u4f5c\uff0c\u4e0d\u4f1a\u76f8\u4e92\u9020\u6210\u963b\u585e\u3002</p> <p>\u7531\u4e8e\u786c\u4ef6\u9650\u5236\uff0c\u4e00\u4e2a\u6838\u7684\u8ba1\u7b97\u80fd\u529b\u662f\u6709\u9650\u7684\u3002\u968f\u7740\u8ba1\u7b97\u673a\u6027\u80fd\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5355\u6838\u5904\u7406\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e00\u5b9a\u74f6\u9888\u3002\u4e3a\u4e86\u63d0\u9ad8\u8ba1\u7b97\u673a\u7684\u6574\u4f53\u6027\u80fd\uff0c\u5fc5\u987b\u5229\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u4f18\u52bf\u3002\u5f53\u4ee3\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5f00\u53d1\u79bb\u4e0d\u5f00\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/#_3","title":"\u4f7f\u7528","text":"<p>\u4ee5C++\u4e3a\u4f8b\uff0cC++11\u6807\u51c6\u5e93\u5f15\u5165\u4e86<code>&lt;thread&gt;</code>\u5e93\uff0c\u4ee5\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002</p> <p>\u7b80\u5355\u793a\u4f8b</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u7ebf\u7a0b\u5c06\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\nvoid threadFunction() {\n    std::cout &lt;&lt; \"Hello, Thread!\" &lt;&lt; std::endl;\n}\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u6267\u884c\u4e0a\u9762\u5b9a\u4e49\u7684\u51fd\u6570\n    std::thread t(threadFunction);\n\n    // \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u7ee7\u7eed\u6267\u884c\n    std::cout &lt;&lt; \"Hello, Main!\" &lt;&lt; std::endl;\n\n    // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210\u4efb\u52a1\n    t.join();\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b<code>t</code>\uff0c\u7528\u4e8e\u6267\u884c\u540d\u4e3a<code>threadFunction</code>\u7684\u51fd\u6570\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5e76\u6253\u5370\u6d88\u606f\u3002\u901a\u8fc7<code>t.join()</code>\uff0c\u6211\u4eec\u786e\u4fdd\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u7ebf\u7a0b<code>t</code>\u5b8c\u6210\u5176\u4efb\u52a1\u3002</p> <p>\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ol> <li>\u7ebf\u7a0b\u542f\u52a8: \u4f7f\u7528<code>std::thread</code>\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u65b0\u7ebf\u7a0b\uff0c\u4e0e\u4e4b\u5173\u8054\u7684\u7ebf\u7a0b\u51fd\u6570\u5c31\u5f00\u59cb\u6267\u884c\u3002</li> <li>\u7b49\u5f85\u7ebf\u7a0b: \u4f7f\u7528<code>join()</code>\u65b9\u6cd5\uff0c\u963b\u585e\u8c03\u7528\u5b83\u7684\u7ebf\u7a0b\uff0c\u76f4\u5230\u4e0e <code>std::thread</code> \u5bf9\u8c61\u5173\u8054\u7684\u7ebf\u7a0b\u5b8c\u6210\u6267\u884c\u3002</li> <li>\u5206\u79bb\u7ebf\u7a0b: \u4f7f\u7528<code>detach()</code>\u65b9\u6cd5\u53ef\u4ee5\u5206\u79bb\u7ebf\u7a0b\u5728\u540e\u53f0\u8fd0\u884c\u3002\u4e00\u65e6\u7ebf\u7a0b\u88ab\u5206\u79bb\uff0c\u4f60\u4e0d\u80fd\u518d\u4e0e\u5b83\u540c\u6b65\uff0c\u5b83\u5c06\u72ec\u7acb\u8fd0\u884c\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/#_4","title":"\u98ce\u9669","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/#_5","title":"\u6570\u636e\u7ade\u4e89","text":"<p>\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u4f46\u662f\u5728\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff1a\u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u4e2a\u6570\u636e\uff0c\u5e76\u4e14\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u4fee\u6539\u8fd9\u4e2a\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u6570\u636e\u7ade\u4e89\u3002</p> <p>\u6211\u4eec\u5047\u8bbe\u6b63\u5728\u73a9\u8d85\u7ea7\u9a6c\u91cc\u5965\uff0c\u8d85\u7ea7\u9a6c\u91cc\u5965\u6709\u4e00\u4e2a\u91d1\u5e01\u7684\u6570\u636e\u3002\u6211\u4eec\u5047\u8bbe\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8d1f\u8d23\u9a6c\u91cc\u5965\u5403\u5230\u7684\u65f6\u5019\u589e\u52a0\u4e00\u4e2a\u91d1\u5e01\u3002\u53c8\u6709\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8d1f\u8d23\u9a6c\u91cc\u5965\u6b7b\u4ea1\u7684\u65f6\u5019\u6263\u9664\u4e00\u4e2a\u91d1\u5e01\u3002\u90a3\u4e48\u5f53\u9a6c\u91cc\u5965\u603b\u5171\u5403\u52301000\u4e2a\u91d1\u5e01\uff0c\u540c\u65f6\u603b\u5171\u6b7b\u8fc71000\u6b21\u540e\uff0c\u9a6c\u91cc\u5965\u8eab\u4e0a\u7684\u91d1\u5e01\u5e94\u8be5\u4e3a0\uff08\u8fd9\u8fb9\u5047\u8bbe\u91d1\u5e01\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nint marioCoins = 0; // \u9a6c\u91cc\u5965\u7684\u91d1\u5e01\u6570\u91cf\n\n// \u5403\u5230\u91d1\u5e01\u5566\uff1a\u589e\u52a0\u91d1\u5e01\nvoid collectCoins() {\n    for (int i = 0; i &lt; 1000; ++i) {\n        marioCoins++; // \u739b\u4e3d\u6361\u5230\u4e00\u4e2a\u91d1\u5e01\uff0c\u589e\u52a0\u91d1\u5e01\u6570\u91cf\n    }\n}\n\n// \u6b7b\u6389\u4e86\uff1a\u51cf\u5c11\u91d1\u5e01\nvoid spendCoins() {\n    for (int i = 0; i &lt; 1000; ++i) {\n        marioCoins--; // \u739b\u4e3d\u4f7f\u7528\u4e00\u4e2a\u91d1\u5e01\uff0c\u51cf\u5c11\u91d1\u5e01\u6570\u91cf\n    }\n}\n\nint main() {\n    std::thread collectorThread(collectCoins); // \u521b\u5efa\u7ebf\u7a0b\uff0c\u6267\u884c\u9a6c\u91cc\u5965\u5403\u5230\u4e86\u91d1\u5e01\u7684\u51fd\u6570\n    std::thread spenderThread(spendCoins); // \u521b\u5efa\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6267\u884c\u9a6c\u91cc\u5965\u6b7b\u6389\u65f6\u5019\u6263\u9664\u4e00\u4e2a\u91d1\u5e01\u7684\u51fd\u6570\n\n    // \u7b49\u5f85\u7ebf\u7a0b\u7ed3\u675f\n    collectorThread.join(); \n    spenderThread.join();\n\n    std::cout &lt;&lt; \"Mario's total coins: \" &lt;&lt; marioCoins &lt;&lt; std::endl; // \u770b\u770b\u9a6c\u91cc\u5965\u8fd8\u6709\u591a\u5c11\u91d1\u5e01\n\n    return 0;\n}\n</code></pre> <p>\u6b64\u65f6\u6267\u884c\u5f97\u5230\u7ed3\u679c\uff1a</p> Markdown<pre><code>Mario's total coins: 0\n</code></pre> <p>\u770b\u7740\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u6b21\u6570\u4ece1000\u589e\u52a0\u5230100000\uff1a</p> C++<pre><code>...\n// \u5403\u5230\u91d1\u5e01\u5566\uff1a\u589e\u52a0\u91d1\u5e01\nvoid collectCoins() {\n    for (int i = 0; i &lt; 100000; ++i) {\n        marioCoins++; // \u739b\u4e3d\u6361\u5230\u4e00\u4e2a\u91d1\u5e01\uff0c\u589e\u52a0\u91d1\u5e01\u6570\u91cf\n    }\n}\n\n// \u6b7b\u6389\u4e86\uff1a\u51cf\u5c11\u91d1\u5e01\nvoid spendCoins() {\n    for (int i = 0; i &lt; 100000; ++i) {\n        marioCoins--; // \u739b\u4e3d\u4f7f\u7528\u4e00\u4e2a\u91d1\u5e01\uff0c\u51cf\u5c11\u91d1\u5e01\u6570\u91cf\n    }\n}\n...\n</code></pre> <p>\u518d\u770b\u770b\u7ed3\u679c\uff1a</p> Text Only<pre><code>Mario's total coins: 91136\n</code></pre> <p>\u591a\u6267\u884c\u51e0\u6b21\uff1a</p> Text Only<pre><code>Mario's total coins: -44504\nMario's total coins: 1793\nMario's total coins: -5104\n</code></pre> <p>\u8fd9\u4e0b\u51fa\u73b0\u95ee\u9898\u4e86\uff0c\u968f\u7740\u5faa\u73af\u6b21\u6570\u589e\u52a0\uff0c\u6570\u636e\u7ade\u4e89\u7684\u6982\u7387\u4e5f\u968f\u4e4b\u589e\u5927\uff0c\u51fa\u73b0\u4e86\u9884\u671f\u610f\u5916\u7684\u7ed3\u679c\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528\u540c\u6b65\u673a\u5236\uff0c\u5982\u4e92\u65a5\u9501\uff08<code>std::mutex</code>\uff09\uff0c\u6765\u786e\u4fdd\u6bcf\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8bbf\u95ee<code>marioCoins</code>\u3002\u8fd9\u5c06\u907f\u514d\u6570\u636e\u7ade\u4e89\uff0c\u5e76\u786e\u4fdd\u6700\u7ec8\u7ed3\u679c\u662f\u6b63\u786e\u7684\u3002</p> C++<pre><code>...\nstd::mutex coinMutex; // \u7528\u4e8e\u4fdd\u62a4marioCoins\u7684\u4e92\u65a5\u9501\n\nvoid collectCoins() {\n    for (int i = 0; i &lt; 100000; ++i) {\n        std::lock_guard&lt;std::mutex&gt; lock(coinMutex);\n        marioCoins++; // \u5728\u4e92\u65a5\u9501\u4fdd\u62a4\u4e0b\u589e\u52a0\u91d1\u5e01\u6570\u91cf\n    }\n}\n\nvoid spendCoins() {\n    for (int i = 0; i &lt; 100000; ++i) {\n        std::lock_guard&lt;std::mutex&gt; lock(coinMutex);\n        marioCoins--; // \u5728\u4e92\u65a5\u9501\u4fdd\u62a4\u4e0b\u51cf\u5c11\u91d1\u5e01\u6570\u91cf\n    }\n}\n\n...\n</code></pre> <p>\u518d\u6b21\u67e5\u770b\u7ed3\u679c\uff1a</p> Text Only<pre><code>Mario's total coins: 0\n</code></pre> <p>OK\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\uff08\u5982\u679c\u7ebf\u7a0b\u6a21\u5f0f\u4f7f\u7528\u7684\u662fdetach\uff0c\u8981\u7b49\u5f85\u4e00\u6bb5\u5b9e\u9645\u786e\u4fdd\u7ebf\u7a0b\u6267\u884c\u5b8c\uff0c\u518d\u67e5\u770b\u7ed3\u679c\uff09\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/#_6","title":"\u8fed\u4ee3\u5668\u5931\u6548","text":"<p>\u8fed\u4ee3\u5668</p> <p>\u8fed\u4ee3\u5668\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u80fd\u591f\u904d\u5386\u4e00\u4e2a\u5bb9\u5668\uff08\u7279\u522b\u662fSTL\u5bb9\u5668\uff09\u7684\u5143\u7d20\u3002\u8fed\u4ee3\u5668\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u6307\u9488\uff1a\u5b83\u6307\u5411\u5bb9\u5668\u4e2d\u7684\u7279\u5b9a\u5143\u7d20\uff0c\u5e76\u63d0\u4f9b\u4e86\u8bbf\u95ee\u8be5\u5143\u7d20\u7684\u65b9\u6cd5\u3002\u8fed\u4ee3\u5668\u6709\u591a\u79cd\u7c7b\u578b\uff0c\u5e38\u89c1\u7684\u5305\u62ec\u8f93\u5165\u8fed\u4ee3\u5668\u3001\u8f93\u51fa\u8fed\u4ee3\u5668\u3001\u524d\u5411\u8fed\u4ee3\u5668\u3001\u53cc\u5411\u8fed\u4ee3\u5668\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\u8fd9\u4e9b\u7c7b\u578b\u6839\u636e\u5b83\u4eec\u652f\u6301\u7684\u64cd\u4f5c\uff08\u5982\u8bfb\u53d6\u3001\u5199\u5165\u3001\u524d\u540e\u79fb\u52a8\u7b49\uff09\u800c\u6709\u6240\u4e0d\u540c\u3002</p> <p>\u5728C++\u4e2d\uff0c\u8fed\u4ee3\u5668\u901a\u5e38\u901a\u8fc7STL\u5bb9\u5668\u7684\u65b9\u6cd5\u5982 <code>begin()</code> \u548c <code>end()</code> \u83b7\u5f97\u3002<code>begin()</code> \u8fd4\u56de\u6307\u5411\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u800c <code>end()</code> \u8fd4\u56de\u6307\u5411\u5bb9\u5668\u5c3e\u90e8\u7684\u8fed\u4ee3\u5668\uff08\u5373\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff09\u3002</p> <p>\u793a\u4f8b\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u904d\u5386vector\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3, 4, 5};\n\n    // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386vector\n    for (auto it = vec.begin(); it != vec.end(); ++it) {\n        std::cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u793a\u4f8b\uff1a\u901a\u8fc7\u8fed\u4ee3\u5668\u5224\u65ad\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5143\u7d20</p> C++<pre><code>//vector\nif (std::find(myVector.begin(), myVector.end(), valueToFind) != myVector.end()) {} \n\n//set\nif (nums_set.find(num) == nums_set.end()){}\n</code></pre> <p>\u8fed\u4ee3\u5668\u5931\u6548</p> <p>\u5728\u67d0\u4e9b\u64cd\u4f5c\u540e\uff0c\u5982\u5220\u9664\u6216\u63d2\u5165\u5143\u7d20\uff0c\u8fed\u4ee3\u5668\u53ef\u80fd\u4f1a\u5931\u6548\u3002\u5931\u6548\u7684\u8fed\u4ee3\u5668\u6307\u5411\u672a\u5b9a\u4e49\u7684\u5185\u5b58\u533a\u57df\uff0c\u7ee7\u7eed\u4f7f\u7528\u5b83\u5c06\u5bfc\u81f4\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</p> <p>\u8fd8\u662f\u4ee5\u9a6c\u91cc\u5965\u6361\u91d1\u5e01\u4e3e\u4f8b\uff0c\u6211\u4eec\u5047\u8bbe\u91d1\u5e01\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u901a\u8fc7\u7c7bCoin\u8fdb\u7a0b\u521b\u5efa\uff0c\u6211\u4eec\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u91d1\u5e01\uff0c\u73b0\u5728\u9a6c\u91cc\u5965\u83b7\u5f97\u4e86\u5927\u5956\uff0c\u6bcf\u79cd\u7c7b\u578b\u7684\u91d1\u5e01\u4f1a\u7ed9\u4ed6\u4e00\u767e\u4e2a\uff0c\u4f46\u662f\u5e93\u9738\u738b\u4e0d\u5f00\u5fc3\u4e86\uff0c\u62ff\u8d70\u4e86\u5176\u4e2d\u7684\u5076\u6570\u4e2a\uff1a</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;thread&gt;\n\nstruct Coin {\n    int x; // \u5047\u8bbe x \u4ee3\u8868\u91d1\u5e01\u7684\u4f4d\u7f6e\n    char category; // \u91d1\u5e01\u7684\u7c7b\u522b\n};\n\nstd::vector&lt;Coin&gt; globalVector;\n\nvoid collectAndRemoveCoins(char category) {\n    // \u9a6c\u91cc\u5965\u83b7\u5f97\u4e86\u5927\u5956\uff0c\u5f97\u5230\u4e00\u767e\u4e2a\u91d1\u5e01\n    for (int i = 0; i &lt; 100; ++i) {\n        globalVector.push_back({i, category});\n        std::this_thread::sleep_for(std::chrono::microseconds(10)); // \u62ff\u94b1\u9700\u8981\u4e00\u70b9\u65f6\u95f4\n    }\n\n    // \u5e93\u9738\u738b\u751f\u6c14\u4e86\uff0c\u593a\u8d70\u6240\u6709\u7684\u5076\u6570\u4f4d\u91d1\u5e01\n    for (auto it = globalVector.begin(); it != globalVector.end();) {\n        if (it-&gt;x % 2 == 0) {\n            it = globalVector.erase(it); // \u79fb\u9664\u91d1\u5e01\n            std::this_thread::sleep_for(std::chrono::microseconds(10)); // \u62a2\u94b1\u4e5f\u9700\u8981\u4e00\u70b9\u65f6\u95f4\n        } else {\n            ++it;\n        }\n    }\n}\n\nint main() {\n    std::thread workerA([]{ collectAndRemoveCoins('A'); });\n    std::thread workerB([]{ collectAndRemoveCoins('B'); });\n\n    workerA.join();\n    workerB.join();\n\n    // \u6253\u5370\u5269\u4f59\u7684\u91d1\u5e01\u4f4d\u7f6e\n    for (const auto&amp; coin : globalVector) {\n        std::cout &lt;&lt; coin.x &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>1 1 3 3 5 5 7 7 9 9 11 11 13 13 15 15 17 17 19 19 21 21 23 23 25 25 27 27 29 29 31 31 33 33 35 35 37 37 39 39 41 41 43 43 45 45 47 47 49 49 51 51 53 53 55 55 57 57 59 59 61 61 63 63 65 65 67 67 69 69 71 71 73 73 75 75 77 77 79 79 81 81 83 83 85 85 87 87 89 89 91 91 93 93 95 95 97 97 99 99 \n</code></pre> <p>\u7531\u4e8e\u7a0b\u5e8f\u6bd4\u8f83\u7b80\u5355\uff0c\u91d1\u5e01\u88ab\u89c4\u5219\u7684\u5b58\u5728\u4e86\u6570\u7ec4\u91cc\u3002</p> <p>\u90a3\u4e48\u5047\u8bbe\uff0c\u6211\u4eec\u6709\u56db\u7c7b\u91d1\u5e01\u5462\uff1f\u662f\u5426\u8fd8\u4f1a\u89c4\u5f8b\u7684\u653e\u8fdb\u9a6c\u91cc\u5965\u7684\u53e3\u888b\u91cc\u5462\uff1f</p> C++<pre><code>    ...\n    std::thread workerA([]{ collectAndRemoveCoins('A'); });\n    std::thread workerB([]{ collectAndRemoveCoins('B'); });\n    std::thread workerC([]{ collectAndRemoveCoins('C'); });\n    std::thread workerD([]{ collectAndRemoveCoins('D'); });\n\n    workerA.join();\n    workerB.join();\n    workerC.join();\n    workerD.join();\n    ...\n</code></pre> <p>\u5f88\u4e0d\u5e78\uff0c\u62a5\u9519\u4e86\uff1a</p> Text Only<pre><code>*** Error in `./a.out': double free or corruption (fasttop): 0x00007f0ec80008c0 ***\n*** Error in `./a.out': double free or corruption (fasttop): 0x00007f0ec80008c0 ***\n*** Error in `./a.out': double free or corruption (fasttop): 0x00007f0ec80008c0 ***\n</code></pre> <p>\u8fd9\u662f\u7531\u4e8e\uff0c\u5f53\u7ebf\u7a0b\u591a\u8d77\u6765\uff0c\u7a0b\u5e8f\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u8fd9\u76f8\u5f53\u4e8e\u9a6c\u91cc\u5965\u56db\u53ea\u624b\u5728\u5f80\u53e3\u888b\u91cc\u585e\u91d1\u5e01\uff0c\u5e93\u9738\u738b\u56db\u4e2a\u624b\u5728\u62a2\u91d1\u5e01\uff0c\u8fd9\u5c31\u5bfc\u81f4\u53ef\u80fd\u4f1a\u51fa\u73b0\u5e93\u9738\u738b\u76ef\u7740\u4e00\u4e2a\u91d1\u5e01\uff0c\u7ed3\u679c\u88ab\u53e6\u4e00\u53ea\u624b\u62a2\u5148\u6293\u8d70\u4e86\uff0c\u8fd9\u5728\u7a0b\u5e8f\u91cc\u5c31\u662f\u7a7a\u6307\u9488\u95ee\u9898\uff0c\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u56db\u79cd\u91d1\u5e01\u653e\u8fdb\u56db\u4e2a\u7ebf\u7a0b\u5bf9\u5e94\u7684\u53e3\u888b\u91cc\uff0c\u4ee5\u89e3\u51b3\u8fed\u4ee3\u5668\u5931\u6548\u7684\u95ee\u9898\uff1a</p> C++<pre><code>...\nthread_local std::vector&lt;Coin&gt; globalVector;\n...\n\nvoid collectAndRemoveCoins(char category) {\n    ...\n\n    // \u6253\u5370\u5269\u4f59\u7684\u91d1\u5e01\u4f4d\u7f6e\uff0c\u5c06main\u51fd\u6570\u91cc\u7684\u6253\u5370\u79fb\u52a8\u5230\u8fd9\u91cc\uff0c\u6807\u8bb0\u53e3\u888b\n    std::cout &lt;&lt; \"Remaining coins of category \" &lt;&lt; category &lt;&lt; \" at positions: \";\n    for (const auto&amp; coin : globalVector) {\n        std::cout &lt;&lt; coin.x &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n}\n...\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Text Only<pre><code>Remaining coins of category B at positions: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 \nRemaining coins of category C at positions: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 \nRemaining coins of category D at positions: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 \nRemaining coins of category A at positions: 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99 \n</code></pre> <p>\u5c3d\u7ba1\u987a\u5e8f\u6709\u4e9b\u4e0d\u540c\uff0c\u4f46\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u91d1\u5e01\u88ab\u6b63\u786e\u7684\u653e\u5230\u4e86\u53e3\u888b\u91cc\u3002</p> <p>PS\uff1athread_local\u5728mingw\u4f7f\u7528\u4f3c\u4e4e\u6709Bug\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u68c0\u7d22\u5728\u7ebfC++11\u7f16\u8bd1\u5668\u53ef\u6b63\u5e38\u8fd0\u884c\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/","title":"\u5f02\u6b65\u7f16\u7a0b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_2","title":"\u6982\u5ff5","text":"<p>\u5728\u7f16\u7a0b\u4e2d\uff0c\u65b9\u6cd5\u7684\u8c03\u7528\u4e00\u822c\u662f\u540c\u6b65\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5\u540e\uff0c\u9700\u8981\u7b49\u5f85\u65b9\u6cd5\u6267\u884c\u5b8c\u6bd5\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u6b65\u3002\u7136\u800c\uff0c\u6211\u4eec\u7ecf\u5e38\u9047\u5230\u9700\u8981\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u5982\u7f51\u7edc\u64cd\u4f5c\uff1a\u6211\u901a\u8fc7WEB\u9875\u9762\u5411\u670d\u52a1\u5668A\u53d1\u9001\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u901a\u8fc7AIGC\u7a0b\u5e8f\u5904\u7406\u5e76\u751f\u6210\u56fe\u7247\uff0c\u968f\u540e\u5c06\u56fe\u7247\u8fd4\u56de\u4ee5\u5728\u6d4f\u89c8\u5668\u4e0a\u663e\u793a\u3002\u597d\u5de7\u4e0d\u5de7\uff0c\u670d\u52a1\u5668\u662f\u9694\u58c1\u8001\u738b\u5bb6\u642d\u7684\uff0c\u8001\u738b\u5c0f\u65f6\u5019\u5403\u7ce0\u957f\u5927\u7684\uff0c\u5bb6\u91cc\u7a77\uff0c\u670d\u52a1\u5668\u6027\u80fd\u7279\u5dee\uff0c\u751f\u6210\u4e00\u5f20\u56fe\u7247\u8981\u4e94\u5206\u949f\u3002</p> <p>\u5982\u679c\u91c7\u7528\u540c\u6b65\u6267\u884c\u65b9\u5f0f\uff0c\u7cfb\u7edf\u8981\u4e00\u76f4\u7b49\u4e00\u76f4\u7b49\uff0c\u7b49\u5230\u8001\u738b\u628a\u56fe\u7247\u8fd4\u56de\uff0c\u624d\u80fd\u7ee7\u7eed\u8fd0\u884c\uff0c\u8fd9\u5c06\u4e25\u91cd\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5e72\u522b\u7684\uff0c\u5728\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7684\u540c\u65f6\u6267\u884c\u5176\u4ed6\u4efb\u52a1\uff0c\u4e4b\u540e\u5b9a\u671f\u68c0\u67e5\u662f\u5426\u63a5\u6536\u5230\u4e86\u54cd\u5e94\u3002\u8fd9\u5c31\u662f\u5f02\u6b65\u7f16\u7a0b\u3002\u5f02\u6b65\u7f16\u7a0b\u4f7f\u6211\u4eec\u80fd\u591f\u6709\u6548\u5730\u5904\u7406\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u7b49\u5f85\u3002</p> <p>\u5728\u4e00\u4e9b\u6587\u7ae0\u4e2d\uff0c\u5f02\u6b65\u7f16\u7a0b\u88ab\u63cf\u8ff0\u4e3a\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u3002\u7136\u800c\uff0c\u4f20\u7edf\u768422\u79cd\u8bbe\u8ba1\u6a21\u5f0f\u4e3b\u8981\u5173\u6ce8\u4e8e\u5bf9\u8c61\u548c\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u4e92\u52a8\uff0c\u800c\u8fd9\u4e0e\u5f02\u6b65\u7f16\u7a0b\u7684\u91cd\u70b9\u9887\u6709\u4e0d\u540c\u3002\u8fd9\u4e9b\u6a21\u5f0f\u7740\u773c\u4e8e\u7ed3\u6784\u548c\u884c\u4e3a\u6a21\u5f0f\uff0c\u800c\u5f02\u6b65\u7f16\u7a0b\u5219\u5173\u6ce8\u4e8e\u64cd\u4f5c\u7684\u6267\u884c\u65b9\u5f0f\uff0c\u4e24\u8005\u4e4b\u95f4\u5b58\u5728\u663e\u8457\u5dee\u5f02\u3002\u540c\u65f6\uff0c\u6709\u89c2\u70b9\u8ba4\u4e3a\u5f02\u6b65\u7f16\u7a0b\u662f\u4e00\u79cd\u7f16\u7a0b\u8303\u5f0f\uff0c\u4f46\u4f20\u7edf\u7684\u7f16\u7a0b\u8303\u5f0f\uff0c\u5982\u547d\u4ee4\u5f0f\u3001\u51fd\u6570\u5f0f\u6216\u54cd\u5e94\u5f0f\u7f16\u7a0b\uff0c\u4e3b\u8981\u5b9a\u4e49\u4e86\u7f16\u7a0b\u7684\u6574\u4f53\u98ce\u683c\u548c\u7ed3\u6784\uff0c\u5e76\u4e0d\u76f4\u63a5\u6d89\u53ca\u540c\u6b65\u4e0e\u5f02\u6b65\u7684\u5904\u7406\u65b9\u5f0f\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u503e\u5411\u4e8e\u5c06\u5f02\u6b65\u7f16\u7a0b\u5b9a\u4e49\u4e3a\u4e00\u79cd\u7f16\u7a0b\u6280\u672f\u6216\u5b9e\u8df5\u3002\u8fd9\u662f\u4e00\u79cd\u9488\u5bf9\u7279\u5b9a\u5e94\u7528\u573a\u666f\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u65e8\u5728\u63d0\u5347\u7a0b\u5e8f\u6027\u80fd\u7684\u4e00\u79cd\u624b\u6bb5\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_3","title":"\u5b9e\u73b0","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#1","title":"1. \u591a\u7ebf\u7a0b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_4","title":"\u6982\u5ff5","text":"<p>\u591a\u7ebf\u7a0b\u5141\u8bb8\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u72ec\u7acb\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u8fd9\u9002\u7528\u4e8e\u5904\u7406\u5e76\u884c\u8ba1\u7b97\u548c\u590d\u6742\u7684\u80cc\u666f\u4efb\u52a1\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_5","title":"\u793a\u4f8b","text":"<p>\u4e4b\u524d\u7684\u6587\u7ae0\u4e2d\u63d0\u5230\u8fc7\u7684\u793a\u4f8b</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u7ebf\u7a0b\u5c06\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\nvoid threadFunction() {\n    std::cout &lt;&lt; \"Hello, Thread!\" &lt;&lt; std::endl;\n}\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u6267\u884c\u4e0a\u9762\u5b9a\u4e49\u7684\u51fd\u6570\n    std::thread t(threadFunction);\n\n    // \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u7ee7\u7eed\u6267\u884c\n    std::cout &lt;&lt; \"Hello, Main!\" &lt;&lt; std::endl;\n\n    // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210\u4efb\u52a1\n    t.join();\n\n    return 0;\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#2","title":"2. \u4e8b\u4ef6\u5faa\u73af","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_6","title":"\u6982\u5ff5","text":"<p>\u4e8b\u4ef6\u5faa\u73af\u662f\u7528\u4e8e\u76d1\u542c\u548c\u54cd\u5e94\u7cfb\u7edf\u4e2d\u7684\u4e8b\u4ef6\u548c\u6d88\u606f\u7684\u4e00\u79cd\u7a0b\u5e8f\u7ed3\u6784\u3002\u5b83\u4e0d\u65ad\u68c0\u67e5\u5e76\u5904\u7406\u4e8b\u4ef6\u961f\u5217\u4e2d\u7684\u4e8b\u4ef6\u6216\u6d88\u606f\uff0c\u8fd9\u4e9b\u4e8b\u4ef6\u53ef\u80fd\u5305\u62ecIO\u64cd\u4f5c\u5b8c\u6210\u7684\u901a\u77e5\u3001\u7528\u6237\u4ea4\u4e92\u4e8b\u4ef6\u3001\u5b9a\u65f6\u5668\u89e6\u53d1\u7684\u56de\u8c03\u7b49\u3002\u8fd9\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e2d\u5c24\u5176\u91cd\u8981\uff0c\u5982\u5728JavaScript\u4e2d\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_7","title":"\u4e8b\u4ef6\u5faa\u73af\u7684\u57fa\u672c\u539f\u7406","text":"<ol> <li>\u4e3b\u7ebf\u7a0b\u6267\u884c\uff1a\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4e0a\u7684\u6240\u6709\u540c\u6b65\u4ee3\u7801\u9996\u5148\u88ab\u6267\u884c\u3002\u8fd9\u5305\u62ec\u53d8\u91cf\u58f0\u660e\u3001\u51fd\u6570\u8c03\u7528\u7b49\u3002</li> <li>\u4efb\u52a1\u8c03\u5ea6\uff1a\u5f53\u7a0b\u5e8f\u9047\u5230\u5f02\u6b65\u64cd\u4f5c\uff08\u5982\u5b9a\u65f6\u5668\u3001\u7f51\u7edc\u8bf7\u6c42\u3001\u6587\u4ef6\u8bfb\u5199\u7b49\uff09\u65f6\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4f1a\u88ab\u59d4\u6258\u7ed9\u76f8\u5e94\u7684\u7cfb\u7edf\u5b8c\u6210</li> <li>\u56de\u8c03\u961f\u5217\uff1a\u8fd9\u4e9b\u5f02\u6b65\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u5b83\u4eec\u7684\u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u653e\u5165\u4e00\u4e2a\u56de\u8c03\u961f\u5217\uff08\u6709\u65f6\u4e5f\u79f0\u4e3a\u6d88\u606f\u961f\u5217\uff09\u4e2d\u3002</li> <li>\u4e8b\u4ef6\u5faa\u73af\u68c0\u67e5\uff1a\u4e00\u65e6\u4e3b\u7ebf\u7a0b\u4e0a\u7684\u6240\u6709\u540c\u6b65\u4efb\u52a1\u5b8c\u6210\uff0c\u4e8b\u4ef6\u5faa\u73af\u5c31\u5f00\u59cb\u5de5\u4f5c\u3002\u5b83\u4e0d\u65ad\u68c0\u67e5\u56de\u8c03\u961f\u5217\u662f\u5426\u6709\u5f85\u5904\u7406\u7684\u4efb\u52a1\u3002</li> <li>\u56de\u8c03\u6267\u884c\uff1a\u5982\u679c\u961f\u5217\u4e2d\u6709\u5f85\u5904\u7406\u7684\u56de\u8c03\uff0c\u4e8b\u4ef6\u5faa\u73af\u4f1a\u5c06\u5b83\u4eec\u4f9d\u6b21\u79fb\u51fa\u961f\u5217\uff0c\u5e76\u653e\u5165\u4e3b\u7ebf\u7a0b\u6267\u884c\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_8","title":"\u793a\u4f8b","text":"<p>JavaScript\u4e8b\u4ef6\u961f\u5217\u673a\u5236\uff1a</p> JavaScript<pre><code>console.log(\"\u5f00\u59cb\");\n\nsetTimeout(() =&gt; {\n  console.log(\"\u5b9a\u65f6\u5668\u56de\u8c03\");\n}, 0);\n\nPromise.resolve().then(() =&gt; {\n  console.log(\"Promise\u56de\u8c03\");\n});\n\nconsole.log(\"\u7ed3\u675f\");\n\n//\u6253\u5370\u201c\u5f00\u59cb\u201d\uff08\u540c\u6b65\u4efb\u52a1\uff09\u3002\n//setTimeout\u7684\u56de\u8c03\u88ab\u52a0\u5165\u5b8f\u4efb\u52a1\u961f\u5217\u3002\n//Promise.then\u7684\u56de\u8c03\u88ab\u52a0\u5165\u5fae\u4efb\u52a1\u961f\u5217\u3002\n//\u6253\u5370\u201c\u7ed3\u675f\u201d\uff08\u540c\u6b65\u4efb\u52a1\uff09\u3002\n//\u6240\u6709\u540c\u6b65\u4efb\u52a1\u5b8c\u6210\uff0c\u4e8b\u4ef6\u5faa\u73af\u68c0\u67e5\u5fae\u4efb\u52a1\u961f\u5217\uff0c\u53d1\u73b0\u5e76\u6267\u884cPromise\u56de\u8c03\uff0c\u6253\u5370\u201cPromise\u56de\u8c03\u201d\u3002\n//\u5fae\u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\uff0c\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u5b8f\u4efb\u52a1\u961f\u5217\uff0c\u6267\u884csetTimeout\u7684\u56de\u8c03\uff0c\u6253\u5370\u201c\u5b9a\u65f6\u5668\u56de\u8c03\u201d\u3002\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#3-ioio","title":"3. \u5f02\u6b65IO\u548c\u975e\u963b\u585eIO","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_9","title":"\u6982\u5ff5","text":"<p>\u5f02\u6b65IO\u5141\u8bb8\u7a0b\u5e8f\u5728\u7b49\u5f85IO\u64cd\u4f5c\uff08\u5982\u8bfb\u5199\u6587\u4ef6\u3001\u7f51\u7edc\u901a\u4fe1\uff09\u5b8c\u6210\u65f6\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\u5f02\u6b65IO\u7531\u64cd\u4f5c\u7cfb\u7edf\u6216\u7279\u5b9a\u7684\u5e93\u5904\u7406\uff0c\u5f53IO\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u901a\u5e38\u4f1a\u89e6\u53d1\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6216\u4e8b\u4ef6\uff0c\u8fd9\u4e2a\u56de\u8c03\u6216\u4e8b\u4ef6\u4f1a\u88ab\u6dfb\u52a0\u5230\u4e8b\u4ef6\u961f\u5217\u4e2d\uff0c\u4f9b\u4e8b\u4ef6\u5faa\u73af\u540e\u7eed\u5904\u7406\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#io","title":"\u5f02\u6b65IO\u7684\u539f\u7406","text":"<ol> <li> <p>\u975e\u963b\u585e\u6027\uff1a\u5728\u540c\u6b65IO\u64cd\u4f5c\u4e2d\uff0c\u7a0b\u5e8f\u5728\u53d1\u8d77IO\u8bf7\u6c42\u540e\u5fc5\u987b\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\u624d\u80fd\u7ee7\u7eed\u6267\u884c\u3002\u76f8\u53cd\uff0c\u5728\u5f02\u6b65IO\u6a21\u578b\u4e2d\uff0c\u7a0b\u5e8f\u53d1\u8d77IO\u8bf7\u6c42\u540e\u53ef\u4ee5\u7acb\u5373\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u4ee3\u7801\u3002</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\uff1a\u5f02\u6b65IO\u901a\u5e38\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u7684\u652f\u6301\u3002\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u5b9e\u9645\u7684IO\u64cd\u4f5c\uff0c\u800c\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\u5f53IO\u64cd\u4f5c\u5b8c\u6210\uff08\u6216\u6570\u636e\u51c6\u5907\u5c31\u7eea\uff09\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u901a\u5e38\u662f\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u3001\u4e8b\u4ef6\u6216\u4fe1\u53f7\u3002</p> </li> <li> <p>\u56de\u8c03\u51fd\u6570\u4e0e\u4e8b\u4ef6\u961f\u5217</p> </li> <li> <p>\u56de\u8c03\u673a\u5236\uff1a\u4e00\u65e6\u5f02\u6b65IO\u64cd\u4f5c\u5b8c\u6210\uff0c\u7a0b\u5e8f\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u6216\u4e8b\u4ef6\u5904\u7406\u5668\u88ab\u89e6\u53d1\uff0c\u4ee5\u5904\u7406IO\u64cd\u4f5c\u7684\u7ed3\u679c\u3002</p> </li> <li> <p>\u4e8b\u4ef6\u961f\u5217\uff1a\u5728\u67d0\u4e9b\u7f16\u7a0b\u73af\u5883\u4e2d\uff0c\u8fd9\u4e9b\u56de\u8c03\u53ef\u80fd\u88ab\u653e\u5165\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217\u4e2d\uff0c\u968f\u540e\u7531\u4e8b\u4ef6\u5faa\u73af\u5904\u7406\u3002</p> </li> <li> <p>\u7f13\u51b2\u533a\u548c\u975e\u963b\u585e\u8c03\u7528\uff1a\u5f02\u6b65IO\u64cd\u4f5c\u53ef\u80fd\u6d89\u53ca\u7f13\u51b2\u533a\u7684\u4f7f\u7528\uff0c\u5176\u4e2d\u6570\u636e\u53ef\u4ee5\u88ab\u4e34\u65f6\u5b58\u50a8\u3002\u5728\u975e\u963b\u585eIO\u6a21\u578b\u4e2d\uff0c\u5982\u679c\u6570\u636e\u672a\u51c6\u5907\u597d\uff0cIO\u8c03\u7528\u4f1a\u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u72b6\u6001\uff0c\u8868\u793a\u6570\u636e\u5c1a\u672a\u53ef\u7528\uff0c\u800c\u4e0d\u662f\u7b49\u5f85\u6570\u636e\u3002</p> </li> <li> <p>\u591a\u7ebf\u7a0b\uff1a\u5728\u591a\u7ebf\u7a0b\u7684\u7f16\u7a0b\u73af\u5883\u4e2d\uff0c\u5f02\u6b65IO\u53ef\u80fd\u610f\u5473\u7740\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u6267\u884cIO\u64cd\u4f5c\uff0c\u800c\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</p> </li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_10","title":"\u793a\u4f8b","text":"<p>\u5728Node.js\u4e2d\u4f7f\u7528<code>fs</code>\u6a21\u5757\u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u3002</p> JavaScript<pre><code>const fs = require('fs');\n\nfs.readFile('example.txt', (err, data) =&gt; {\n    if (err) throw err;\n    console.log(data);\n});\n\nconsole.log('\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1');\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#4-promisesfutures","title":"4. Promises/Futures","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_11","title":"\u6982\u5ff5","text":"<p>Promises\u548cFutures\u662f\u5f02\u6b65\u7f16\u7a0b\u4e2d\u7684\u5173\u952e\u6982\u5ff5\uff0c\u5e7f\u6cdb\u7528\u4e8e\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u7528\u4e8e\u5904\u7406\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u5c3d\u7ba1\u5b83\u4eec\u5728\u4e0d\u540c\u8bed\u8a00\u4e2d\u7684\u5177\u4f53\u5b9e\u73b0\u53ef\u80fd\u6709\u6240\u4e0d\u540c\uff0c\u4f46\u57fa\u672c\u6982\u5ff5\u548c\u7528\u9014\u662f\u76f8\u4f3c\u7684\u3002</p> <ol> <li>Promises\uff1a</li> <li>\u5b9a\u4e49\uff1aPromise\u662f\u4e00\u4e2a\u4ee3\u8868\u4e86\u5f02\u6b65\u64cd\u4f5c\u6700\u7ec8\u5b8c\u6210\u6216\u5931\u8d25\u7684\u5bf9\u8c61\u3002\u5b83\u62e5\u6709\u4e00\u4e2a\u8868\u793a\u64cd\u4f5c\u6210\u529f\u6216\u5931\u8d25\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u4e00\u65e6\u8fd9\u4e2a\u72b6\u6001\u88ab\u8bbe\u5b9a\uff0c\u5b83\u5c31\u4e0d\u4f1a\u518d\u6539\u53d8\u3002</li> <li>\u72b6\u6001\uff1aPromise\u6709\u4e09\u79cd\u72b6\u6001\uff1apending\uff08\u5f85\u5b9a\uff09\u3001fulfilled\uff08\u6210\u529f\uff09\u548crejected\uff08\u5931\u8d25\uff09\u3002\u521d\u59cb\u72b6\u6001\u4e3apending\uff0c\u53ef\u4ee5\u8f6c\u53d8\u4e3afulfilled\u6216rejected\uff0c\u5e76\u4e14\u72b6\u6001\u4e00\u65e6\u6539\u53d8\u5c31\u4e0d\u4f1a\u518d\u53d8\u3002</li> <li>Futures\uff1a</li> <li>\u5b9a\u4e49\uff1aFuture\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8ePromise\u7684\u6982\u5ff5\uff0c\u901a\u5e38\u51fa\u73b0\u5728\u50cfJava\u3001Scala\u6216C++\u7b49\u8bed\u8a00\u4e2d\u3002\u5b83\u4ee3\u8868\u4e00\u4e2a\u5c1a\u672a\u5b8c\u6210\u4f46\u5c06\u6765\u4f1a\u5b8c\u6210\u7684\u64cd\u4f5c\uff0c\u5e76\u627f\u8bfa\u5728\u672a\u6765\u67d0\u4e2a\u65f6\u523b\u63d0\u4f9b\u7ed3\u679c\u3002</li> <li>\u72b6\u6001\u548c\u64cd\u4f5c\uff1aFuture\u53ef\u80fd\u6709\u672a\u5b8c\u6210\u548c\u5b8c\u6210\u4e24\u79cd\u72b6\u6001\u3002\u5b8c\u6210\u540e\uff0c\u5b83\u53ef\u4ee5\u88ab\u67e5\u8be2\u7ed3\u679c\u6216\u8005\u62a5\u544a\u9519\u8bef\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_12","title":"\u539f\u7406","text":"<ul> <li>\u5f02\u6b65\u64cd\u4f5c\u5c01\u88c5\uff1aFutures\u548cPromises\u5c01\u88c5\u4e86\u5f02\u6b65\u64cd\u4f5c\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\u6765\u8bbf\u95ee\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u5f53\u5f02\u6b65\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c\u4e0e\u4e4b\u76f8\u5173\u7684Future\u6216Promise\u88ab\u201c\u89e3\u51b3\u201d\uff0c\u5b58\u50a8\u64cd\u4f5c\u7684\u7ed3\u679c\u6216\u9519\u8bef\u4fe1\u606f\u3002</li> <li>\u975e\u963b\u585e\u884c\u4e3a\uff1a\u5b83\u4eec\u5141\u8bb8\u4ee3\u7801\u5728\u4e0d\u963b\u585e\u4e3b\u7ebf\u7a0b\u6216\u6267\u884c\u6d41\u7684\u60c5\u51b5\u4e0b\u7b49\u5f85\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u3002</li> <li>\u56de\u8c03\u673a\u5236\uff1aFutures\u548cPromises\u901a\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u5f0f\u6765\u9644\u52a0\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u5728\u5f02\u6b65\u64cd\u4f5c\u6210\u529f\u6216\u5931\u8d25\u65f6\u88ab\u8c03\u7528\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_13","title":"\u793a\u4f8b","text":"<p>\u5728JavaScript\u4e2d\u4f7f\u7528Promises\u3002</p> C++<pre><code>let promise = new Promise((resolve, reject) =&gt; {\n    setTimeout(() =&gt; {\n        resolve(\"\u64cd\u4f5c\u6210\u529f\");\n    }, 1000);\n});\n\npromise.then(result =&gt; console.log(result))\n       .catch(error =&gt; console.log(error));\n</code></pre> <p>\u5728C++\u4e2d\u4f7f\u7528Future</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;future&gt;\n#include &lt;thread&gt;\n#include &lt;chrono&gt;\n\nint performLongComputation() {\n    std::this_thread::sleep_for(std::chrono::seconds(1)); // \u6a21\u62df\u8017\u65f6\u64cd\u4f5c\n    return 42; // \u8fd4\u56de\u7ed3\u679c\n}\n\nint main() {\n    // \u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\n    std::future&lt;int&gt; result = std::async(performLongComputation);\n\n    // \u6267\u884c\u5176\u4ed6\u64cd\u4f5c...\n    std::cout &lt;&lt; \"\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002\\n\";\n\n    // \u7b49\u5f85\u5f02\u6b65\u64cd\u4f5c\u5b8c\u6210\u5e76\u83b7\u53d6\u7ed3\u679c\n    std::cout &lt;&lt; \"\u5f02\u6b65\u64cd\u4f5c\u7684\u7ed3\u679c\u662f: \" &lt;&lt; result.get() &lt;&lt; '\\n';\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#5","title":"5. \u534f\u7a0b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#coroutine","title":"\u534f\u7a0b\uff08Coroutine\uff09\u7684\u6982\u5ff5","text":"<p>\u534f\u7a0b\u662f\u4e00\u79cd\u7a0b\u5e8f\u7ec4\u4ef6\uff0c\u7528\u4e8e\u901a\u7528\u7684\u5b50\u7a0b\u5e8f\u7ba1\u7406\u3002\u5b83\u4eec\u7c7b\u4f3c\u4e8e\u51fd\u6570\uff0c\u4f46\u4e0e\u4f20\u7edf\u7684\u5b50\u7a0b\u5e8f\uff08\u5982\u51fd\u6570\u6216\u65b9\u6cd5\uff09\u4e0d\u540c\u7684\u662f\uff0c\u534f\u7a0b\u53ef\u4ee5\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u591a\u6b21\u8fdb\u5165\u548c\u9000\u51fa\u3002</p> <p>\u5173\u952e\u7279\u6027</p> <ol> <li>\u6682\u505c\u4e0e\u6062\u590d\uff1a\u534f\u7a0b\u53ef\u4ee5\u5728\u6267\u884c\u7684\u4efb\u610f\u4f4d\u7f6e\u6682\u505c\uff0c\u5e76\u5728\u7a0d\u540e\u4ece\u8be5\u4f4d\u7f6e\u6062\u590d\uff0c\u4fdd\u6301\u5176\u72b6\u6001\uff08\u5982\u5c40\u90e8\u53d8\u91cf\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668\uff09\u3002</li> <li>\u72ec\u7acb\u7684\u6267\u884c\u6808\uff1a\u6bcf\u4e2a\u534f\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u6267\u884c\u6808\uff0c\u4f46\u4e0e\u7ebf\u7a0b\u4e0d\u540c\uff0c\u534f\u7a0b\u7684\u6808\u662f\u975e\u62a2\u5360\u5f0f\u7684\uff0c\u9700\u8981\u663e\u5f0f\u7684\u64cd\u4f5c\u6765\u542f\u52a8\u6216\u505c\u6b62\u3002</li> <li>\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\uff1a\u4e0e\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\uff08\u5982\u7ebf\u7a0b\uff09\u76f8\u6bd4\uff0c\u534f\u7a0b\u91c7\u7528\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u5904\u7406\uff0c\u610f\u5473\u7740\u4e00\u4e2a\u534f\u7a0b\u5fc5\u987b\u4e3b\u52a8\u8ba9\u51fa\u63a7\u5236\u6743\uff0c\u5176\u4ed6\u534f\u7a0b\u624d\u80fd\u8fd0\u884c\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_14","title":"\u534f\u7a0b\u7684\u539f\u7406","text":"<p>\u534f\u7a0b\u80cc\u540e\u7684\u57fa\u672c\u539f\u7406\u6d89\u53ca\u8c03\u5ea6\u548c\u72b6\u6001\u7ba1\u7406\uff1a</p> <ol> <li>\u4e0a\u4e0b\u6587\u5207\u6362\uff1a\u6bcf\u5f53\u534f\u7a0b\u6682\u505c\u65f6\uff0c\u5176\u5f53\u524d\u7684\u4e0a\u4e0b\u6587\uff08\u5305\u62ec\u5c40\u90e8\u53d8\u91cf\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u7b49\uff09\u88ab\u4fdd\u5b58\u3002\u5f53\u534f\u7a0b\u6062\u590d\u6267\u884c\u65f6\uff0c\u8fd9\u4e9b\u4e0a\u4e0b\u6587\u88ab\u6062\u590d\uff0c\u4ece\u800c\u4f7f\u534f\u7a0b\u53ef\u4ee5\u4ece\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u3002</li> <li>\u72b6\u6001\u4fdd\u6301\uff1a\u534f\u7a0b\u80fd\u591f\u4fdd\u6301\u5176\u72b6\u6001\uff08\u5373\u534f\u7a0b\u5185\u90e8\u53d8\u91cf\u7684\u503c\uff09\uff0c\u8fd9\u4e0e\u666e\u901a\u51fd\u6570\u8c03\u7528\u4e0d\u540c\uff0c\u666e\u901a\u51fd\u6570\u8c03\u7528\u5b8c\u6210\u540e\u72b6\u6001\u5c31\u4f1a\u4e22\u5931\u3002</li> <li>\u8c03\u5ea6\u673a\u5236\uff1a\u534f\u7a0b\u7684\u8c03\u5ea6\u901a\u5e38\u662f\u7531\u5f00\u53d1\u8005\u6216\u534f\u7a0b\u5e93\u6765\u63a7\u5236\u7684\uff0c\u800c\u4e0d\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7ba1\u7406\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_15","title":"\u534f\u7a0b\u7684\u4f7f\u7528\u573a\u666f","text":"<p>\u534f\u7a0b\u7279\u522b\u9002\u5408\u4e8e\u9700\u8981\u5f02\u6b65\u548c\u5e76\u53d1\u5904\u7406\u7684\u5e94\u7528\uff0c\u5982\uff1a</p> <ul> <li>IO\u5bc6\u96c6\u578b\u5e94\u7528\uff1a\u5982\u7f51\u7edc\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u5e94\u7528\uff0c\u534f\u7a0b\u53ef\u4ee5\u5728\u7b49\u5f85IO\u64cd\u4f5c\uff08\u5982\u7f51\u7edc\u8bf7\u6c42\uff09\u671f\u95f4\u6682\u505c\uff0c\u5141\u8bb8\u5176\u4ed6\u534f\u7a0b\u8fd0\u884c\u3002</li> <li>\u534f\u4f5c\u5f0f\u4efb\u52a1\u5904\u7406\uff1a\u5728\u590d\u6742\u7684\u4efb\u52a1\u6d41\u6c34\u7ebf\u6216\u5de5\u4f5c\u6d41\u7a0b\u4e2d\uff0c\u534f\u7a0b\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ba1\u7406\u548c\u8c03\u5ea6\u591a\u4e2a\u76f8\u4e92\u4f9d\u8d56\u7684\u4efb\u52a1\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_16","title":"\u793a\u4f8b","text":"<p>Python\u4e2d\u7684\u534f\u7a0b</p> <p>Python\u901a\u8fc7<code>async</code>\u548c<code>await</code>\u5173\u952e\u5b57\u63d0\u4f9b\u4e86\u5bf9\u534f\u7a0b\u7684\u652f\u6301\uff0c\u7279\u522b\u662f\u5728<code>asyncio</code>\u6a21\u5757\u4e2d\uff1a</p> Python<pre><code>import asyncio\n\nasync def fetchData():\n    print(\"Fetching data\")\n    await asyncio.sleep(2)  # \u6a21\u62df\u5f02\u6b65IO\u64cd\u4f5c\n    print(\"Data fetched\")\n    return \"Data\"\n\nasync def main():\n    print(\"Starting main function\")\n    data = await fetchData()\n    print(f\"Received data: {data}\")\n\nasyncio.run(main())\n</code></pre> <p>\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c<code>fetchData</code>\u662f\u4e00\u4e2a\u5f02\u6b65\u51fd\u6570\uff08\u534f\u7a0b\uff09\uff0c\u5b83\u4f7f\u7528<code>await</code>\u6765\u6682\u505c\u6267\u884c\uff0c\u6a21\u62dfIO\u64cd\u4f5c\u3002\u4e3b\u51fd\u6570<code>main</code>\u4e5f\u662f\u4e00\u4e2a\u534f\u7a0b\uff0c\u5b83\u7b49\u5f85<code>fetchData</code>\u5b8c\u6210\u3002</p> <p>JavaScript\u4e2d\u7684\u7c7b\u4f3c\u534f\u7a0b\u673a\u5236</p> <p>\u867d\u7136JavaScript\u6ca1\u6709\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u534f\u7a0b\uff0c\u4f46\u5b83\u7684\u751f\u6210\u5668\uff08Generators\uff09\u548c<code>async/await</code>\u53ef\u4ee5\u7528\u4e8e\u7c7b\u4f3c\u7684\u76ee\u7684\uff1a</p> JavaScript<pre><code>javascriptCopy codefunction* generatorFunction() {\n    console.log(\"Started\");\n    yield; // \u6682\u505c\u6267\u884c\n    console.log(\"Resumed\");\n}\n\nconst generator = generatorFunction();\ngenerator.next(); // \u8f93\u51fa \"Started\"\ngenerator.next(); // \u8f93\u51fa \"Resumed\"\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u751f\u6210\u5668\u51fd\u6570<code>generatorFunction</code>\u901a\u8fc7<code>yield</code>\u5173\u952e\u5b57\u6682\u505c\u548c\u6062\u590d\u6267\u884c\u3002</p> <p>C++20\u534f\u7a0b</p> C++<pre><code>#include &lt;coroutine&gt;\n#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nstruct ReturnObject {\n    struct promise_type {\n        ReturnObject get_return_object() { return {}; }\n        std::suspend_never initial_suspend() { return {}; }\n        std::suspend_never final_suspend() noexcept { return {}; }\n        void unhandled_exception() {}\n    };\n};\n\nstruct Awaiter {\n    std::coroutine_handle&lt;&gt; *hp_;\n    bool await_ready() const noexcept { return false; }\n    void await_suspend(std::coroutine_handle&lt;&gt; h) { *hp_ = h; }\n    void await_resume() const noexcept {}\n};\n\nReturnObject example() {\n    static std::coroutine_handle&lt;&gt; h;\n    Awaiter a{&amp;h};\n    co_await a;\n    std::cout &lt;&lt; \"Hello from coroutine\\n\";\n    h.resume();\n}\n\nint main() {\n    example();\n    std::cout &lt;&lt; \"Hello from main\\n\";\n    return 0;\n}\n</code></pre> <p>\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0cC++20\u624d\u5f15\u5165\u534f\u7a0b\u7684\u652f\u6301\uff0c\u540e\u9762\u6709\u65f6\u95f4\uff0c\u5b66\u4e60\u5982\u4f55\u624b\u6495C++11\u534f\u7a0b\uff0c\u5e76\u5355\u72ec\u505a\u4e00\u7bc7\u6587\u7ae0\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#6","title":"6. \u56de\u8c03\u51fd\u6570","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_17","title":"\u6982\u5ff5","text":"<ul> <li>\u5b9a\u4e49\uff1a\u56de\u8c03\u51fd\u6570\u662f\u4e00\u4e2a\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u3002\u8fd9\u4e2a\u4f20\u9012\u7684\u51fd\u6570\uff08\u56de\u8c03\uff09\u7a0d\u540e\u5728\u7279\u5b9a\u4e8b\u4ef6\u6216\u6761\u4ef6\u89e6\u53d1\u65f6\u88ab\u8c03\u7528\u3002</li> <li>\u76ee\u7684\uff1a\u56de\u8c03\u7684\u4e3b\u8981\u76ee\u7684\u662f\u589e\u5f3a\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\uff0c\u4f7f\u51fd\u6570\u80fd\u591f\u5728\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u54cd\u5e94\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_18","title":"\u539f\u7406","text":"<ol> <li>\u6ce8\u518c\u56de\u8c03\uff1a\u5728\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u53e6\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002\u8fd9\u901a\u5e38\u79f0\u4e3a\u6ce8\u518c\u56de\u8c03\u51fd\u6570\u3002</li> <li>\u4e8b\u4ef6\u9a71\u52a8\u6216\u6761\u4ef6\u6ee1\u8db3\uff1a\u5f53\u67d0\u4e2a\u7279\u5b9a\u4e8b\u4ef6\u53d1\u751f\u6216\u7279\u5b9a\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u4e4b\u524d\u6ce8\u518c\u7684\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\u3002</li> <li>\u6267\u884c\u56de\u8c03\uff1a\u8c03\u7528\u56de\u8c03\u51fd\u6570\u901a\u5e38\u4f34\u968f\u7740\u4e00\u4e9b\u7279\u5b9a\u7684\u4fe1\u606f\uff0c\u5982\u4e8b\u4ef6\u8be6\u60c5\u6216\u5b8c\u6210\u7684\u4efb\u52a1\u7ed3\u679c\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_19","title":"\u5e94\u7528\u573a\u666f","text":"<ul> <li>\u5f02\u6b65\u7f16\u7a0b\uff1a\u5728\u5904\u7406\u5f02\u6b65\u64cd\u4f5c\uff0c\u5982\u7f51\u7edc\u8bf7\u6c42\u3001\u6587\u4ef6\u8bfb\u5199\u7b49\u65f6\uff0c\u4f7f\u7528\u56de\u8c03\u6765\u5904\u7406\u64cd\u4f5c\u5b8c\u6210\u540e\u7684\u7ed3\u679c\u3002</li> <li>\u4e8b\u4ef6\u76d1\u542c\uff1a\u5728\u56fe\u5f62\u7528\u6237\u754c\u9762\u7f16\u7a0b\u4e2d\uff0c\u7528\u4e8e\u54cd\u5e94\u7528\u6237\u4ea4\u4e92\uff0c\u5982\u6309\u94ae\u70b9\u51fb\u3001\u952e\u76d8\u4e8b\u4ef6\u7b49\u3002</li> <li>\u5b9a\u65f6\u5668\uff1a\u5728\u9700\u8981\u5b9a\u65f6\u6267\u884c\u4efb\u52a1\u7684\u573a\u5408\uff0c\u5982\u5b9a\u65f6\u66f4\u65b0\u754c\u9762\u6216\u68c0\u67e5\u6761\u4ef6\u3002</li> <li>\u9ad8\u9636\u51fd\u6570\uff1a\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u9ad8\u9636\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u5b9e\u73b0\u8bf8\u5982map\u3001filter\u3001reduce\u7b49\u64cd\u4f5c\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_20","title":"\u793a\u4f8b","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#javascript","title":"JavaScript\u4e2d\u7684\u56de\u8c03\u51fd\u6570","text":"JavaScript<pre><code>function fetchData(callback) {\n    setTimeout(() =&gt; {\n        // \u6a21\u62df\u5f02\u6b65\u6570\u636e\u83b7\u53d6\n        callback('\u6570\u636e');\n    }, 1000);\n}\n\nfetchData((data) =&gt; {\n    console.log('\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u83b7\u53d6\u7684\u6570\u636e:', data);\n});\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c<code>fetchData</code>\u51fd\u6570\u6a21\u62df\u5f02\u6b65\u6570\u636e\u83b7\u53d6\uff0c\u63a5\u53d7\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u5f53\u6570\u636e\u83b7\u53d6\u5b8c\u6210\uff08\u4f7f\u7528<code>setTimeout</code>\u6a21\u62df\uff09\uff0c\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\u5e76\u6253\u5370\u6570\u636e\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#c","title":"C++\u4e2d\u7684\u56de\u8c03\u51fd\u6570","text":"C++<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n\nvoid processData(std::function&lt;void(int)&gt; callback) {\n    int result = 10; // \u6a21\u62df\u6570\u636e\u5904\u7406\n    callback(result);\n}\n\nint main() {\n    processData([](int data) {\n        std::cout &lt;&lt; \"\u56de\u8c03\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u5904\u7406\u7684\u6570\u636e: \" &lt;&lt; data &lt;&lt; std::endl;\n    });\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2aC++\u793a\u4f8b\u4e2d\uff0c<code>processData</code>\u51fd\u6570\u5904\u7406\u4e00\u4e9b\u6570\u636e\uff0c\u5e76\u5728\u5b8c\u6210\u65f6\u8c03\u7528\u4f20\u5165\u7684\u56de\u8c03\u51fd\u6570\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/#_21","title":"\u603b\u7ed3","text":"<p>\u6700\u8fd1\u591a\u6b21\u7528\u5230\u4e86\u591a\u7ebf\u7a0b\u4e0e\u5f02\u6b65\u7f16\u7a0b\u3002\u4e0a\u8ff0\u516d\u79cd\u65b9\u5f0f\u6bcf\u4e00\u79cd\u5c55\u5f00\u90fd\u6709\u5f88\u6df1\u7684\u539f\u7406\u53ef\u63a2\u7a76\u3002\u5f88\u9057\u61be\uff0c\u672c\u4eba\u8fd8\u5f88\u83dc\uff0c\u8fd9\u7bc7\u505a\u4e00\u4e2a\u629b\u7816\u5f15\u7389\uff0c\u5728\u540e\u7eed\uff0c\u4f1a\u9010\u6e10\u5228\u6790\u6bcf\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u505a\u5230\u771f\u7684\u61c2\uff0c\u800c\u4e0d\u662f\u8868\u5c42\u8c03\u7528\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_1","title":"\u76f8\u540c\u5e8f\u5217\u521d\u59cb\u5316","text":"C++PythonTypeScript C++<pre><code>std::vector&lt;int&gt; array(len, 1); \nstd::deque&lt;int&gt; dq(len, 1);\nstd::list&lt;int&gt; lst(len, 1);\nstd::string str(len, '1'); // \u6ce8\u610f\uff1a\u8fd9\u91cc\u662f\u5b57\u7b26'1'\uff0c\u4e0d\u662f\u6574\u65701\n</code></pre> Python<pre><code>array = [1] * len                       # List\narray = (1,) * len                      # Tuple\narray = \"1\" * len                       # String\narray = list(1 for i in range(len))     # List\u3001Tuple\u3001Set\n</code></pre> TypeScript<pre><code>let array = new Array(len).fill(1);\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_2","title":"\u987a\u5e8f\u5e8f\u5217\u521d\u59cb\u5316","text":"C++PythonTypeScript C++<pre><code>// vector\u3001deque\u3001list\nstd::iota(array.begin(), array.end(), 1); \n</code></pre> Python<pre><code># List\u3001Tuple\u3001Set\narray = list(i for i in range(len))     \n</code></pre> TypeScript<pre><code>let sequence = Array.from({ length: len }, (_, i) =&gt; i + 1);\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_3","title":"\u8ba1\u6570","text":"C++PythonTypeScript C++<pre><code>// vector\u3001string\u3001list\u3001deque\u3001set\u3001map\nstd::count(nums.begin(), nums.end(),i) == 0\n</code></pre> Python<pre><code># List\u3001Tuple\u3001String\n    if nums.count(i) == 0\n</code></pre> TypeScript<pre><code>// Array\nif (nums.filter(item =&gt; item === i).length === 0)\n// String\nif (nums.split(i).length - 1 === 0)\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_4","title":"\u67e5\u627e","text":"C++PythonTypeScript C++<pre><code>// vector\u3001string\u3001list\u3001deque\u3001set\u3001map\nstd::find(nums.begin(), nums.end(), value) == nums.end());\n</code></pre> Python<pre><code># List\u3001Set\u3001Dictionary\u3001String\u3001Tuple\u3001Range\nif value in nums\n</code></pre> TypeScript<pre><code>// Array\nif (nums.includes(value))\n// Set\u3001Map \nif (nums.has(value))\n// String\nif (nums.indexOf(substring) === -1)\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_5","title":"\u7ffb\u8f6c","text":"C++PythonTypeScript C++<pre><code>// vector\u3001string\u3001list\u3001deque\nstd::reverse(nums.begin(), nums.end());\nstd::reverse(nums.begin(), nums.begin() + k);\nstd::reverse(nums.begin() + k, nums.end());\n</code></pre> Python<pre><code># List\nnums.reverse()\nnums[:k] = list(reversed(nums[:k]))\nnums[k:] = list(reversed(nums[k:]))\n\n# String\u3001Tuple\uff0c\u6ce8\u610f\u82e5\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u539f\u53d8\u91cf\u662f\u4e0d\u53d8\u7684\nnums = nums[::-1]\n</code></pre> TypeScript<pre><code>// array\nnums.reverse();\nnums.slice(0, k).reverse();\nnums.slice(k).reverse();\n\n// String\nreversedStr = str.split('').reverse().join('');\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/#_6","title":"\u6570\u7ec4\u4f20\u9012","text":"C++PythonTypeScript C++<pre><code>/* \u6539\u53d8\u539f\u6570\u7ec4 */\nvector&lt;int&gt;&amp; tmp = nums;\nvector&lt;int&gt;* tmp = &amp;nums;  // tmp \u662f\u6307\u5411 nums \u7684\u6307\u9488\nvoid func(vector&lt;int&gt;&amp; arr) {\n    // \u5728\u8fd9\u91cc\uff0c\u5bf9 arr \u6240\u505a\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4f1a\u5f71\u54cd\u4f20\u5165\u7684 nums\n}\n\n/* \u4e0d\u6539\u53d8\u539f\u6570\u7ec4 */\nvector&lt;int&gt; tmp = nums;\nvoid modifyArray(vector&lt;int&gt; arr) {\n    // \u5728\u8fd9\u91cc\uff0c\u5bf9 arr \u6240\u505a\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u4f20\u5165\u7684 nums\n}\n</code></pre> Python<pre><code># \u6539\u53d8\u539f\u6570\u7ec4\ntmp = nums          # \u5f15\u7528\ndef func(arr):\n    # \u5bf9 arr \u7684\u4fee\u6539\u4f1a\u5f71\u54cd nums\n\n# \u4e0d\u6539\u53d8\u539f\u6570\u7ec4\ntmp = nums[:]       # \u521b\u5efa\u5217\u8868\uff0c\u6d45\u62f7\u8d1d\ntmp[:] = nums       # \u5217\u8868\u8d4b\u503c\uff0c\u6d45\u62f7\u8d1d\ndef func(arr):\n    arr = arr[:]\n    # \u505a\u4e00\u5c42\u590d\u5236\uff0c\u907f\u514d\u5bf9\u539f\u6570\u7ec4\u5f71\u54cd\n</code></pre> TypeScript<pre><code>// \u6539\u53d8\u539f\u6570\u7ec4\nlet nums: number[] = [1, 2, 3, 4, 5];\nlet tmp: number[] = nums;  // \u5f15\u7528\nfunction func(arr: number[]): void {\n    // \u5bf9 arr \u7684\u4fee\u6539\u4f1a\u5f71\u54cd nums\n}\n\n// \u4e0d\u6539\u53d8\u539f\u6570\u7ec4\nlet tmpCopy: number[] = [...nums];  // \u4f7f\u7528\u6269\u5c55\u8fd0\u7b97\u7b26\u8fdb\u884c\u6d45\u62f7\u8d1d\nfunction modifyArray(arr: number[]): void {\n    // \u5728\u8fd9\u91cc\u5bf9 arr \u6240\u505a\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd nums\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%AF%B9%E8%B1%A1%E7%AE%A1%E7%90%86/","title":"\u5bf9\u8c61\u7ba1\u7406","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%AF%B9%E8%B1%A1%E7%AE%A1%E7%90%86/#_1","title":"\u5bf9\u8c61\u521b\u5efa","text":"C++PythonTypeScript C++<pre><code>// \u6808\u4e0a\u521b\u5efa\uff0c\u5757\u4f5c\u7528\u57df\uff0c\u4f5c\u7528\u57df\u7ed3\u675f\u76f4\u63a5\u9500\u6bc1\nListNode node(-1);\n// \u5806\u4e0a\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u624b\u52a8\u7ba1\u7406\nListNode* node = new ListNode(-1);\n\n// \u667a\u80fd\u6307\u9488\uff0c\u8d85\u51fa\u4f5c\u7528\u57df\u65f6\uff0c\u5b83\u6307\u5411\u7684\u5bf9\u8c61\u4f1a\u88ab\u81ea\u52a8\u9500\u6bc1\nstd::unique_ptr&lt;ListNode&gt; node(new ListNode(-1));\nauto node = std::make_unique&lt;ListNode&gt;(-1);\n\n// \u5bb9\u5668\u7ba1\u7406\nstd::vector&lt;ListNode&gt; nodes;\nnodes.emplace_back(-1);  // \u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u6784\u9020\u5bf9\u8c61\n</code></pre> Python<pre><code># \u81ea\u52a8\u7ba1\u7406\uff0c\u7c7b\u4f3c\u667a\u80fd\u6307\u9488\nnode = ListNode(-1)\n</code></pre> TypeScript<pre><code>// \u81ea\u52a8\u7ba1\u7406\uff0c\u7c7b\u4f3c\u667a\u80fd\u6307\u9488\nlet node = new ListNode(-1);\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/%E5%AF%B9%E8%B1%A1%E7%AE%A1%E7%90%86/#_2","title":"\u5bf9\u8c61\u7ba1\u7406","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/CMake%28Mingw%E7%A4%BA%E4%BE%8B%29/","title":"CMake(Mingw\u793a\u4f8b)","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/CMake%28Mingw%E7%A4%BA%E4%BE%8B%29/#_1","title":"\u80cc\u666f","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\uff08OS\uff09\u7684\u5e95\u5c42\u5b9e\u73b0\u5404\u5f02\uff0c\u5bfc\u81f4\u4e86\u4e0d\u540cOS\u95f4\u53ef\u6267\u884c\u6587\u4ef6\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002\u8fd9\u79cd\u95ee\u9898\u5728Linux\u73af\u5883\u4e2d\u5c24\u4e3a\u7a81\u51fa\uff0c\u56e0\u4e3aLinux\u4e0d\u4ec5\u6709\u591a\u79cd\u53d1\u884c\u7248\uff0c\u8fd8\u6709\u4f17\u591a\u7248\u672c\uff0c\u5373\u4f7f\u662f\u5fae\u5c0f\u7684\u7248\u672c\u66f4\u65b0\u4e5f\u53ef\u80fd\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u4e0d\u517c\u5bb9\u3002\u8fd9\u901a\u5e38\u8981\u6c42\u901a\u8fc7\u91cd\u65b0\u7f16\u8bd1\u6e90\u7801\u6765\u89e3\u51b3\u3002</p> <p>\u5728\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u9047\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u517c\u5bb9\u7684\u95ee\u9898\uff0c\u7740\u5b9e\u4ee4\u4eba\u56f0\u6270\u3002\u7b14\u8005\u7b2c\u4e00\u5e74\u7684\u5de5\u4f5c\u5c31\u662f\u5904\u7406\u7f51\u5361\u517c\u5bb9\u6027\uff0c\u4e00\u6b3e\u7f51\u5361\u53ef\u80fd\u9700\u8981\u5728\u6570\u5341\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u3002\u5728\u660e\u663e\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u65e0\u5173\u7684\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u7531\u4e8e\u7cfb\u7edf\u66f4\u65b0\u5bfc\u81f4\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u517c\u5bb9\u4ee4\u4eba\u5341\u5206\u5934\u75bc\u3002</p> <p>\u4e3a\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6848\u662f\u8de8\u5e73\u53f0\u7f16\u8bd1\u3002CMake\u662f\u4e00\u79cd\u5b9e\u73b0\u8de8\u5e73\u53f0\u7f16\u8bd1\u7684\u6784\u5efa\u7cfb\u7edf\uff0c\u53ef\u4ee5\u751f\u6210\u4e0d\u540c\u5e73\u53f0\u7684\u7f16\u8bd1\u811a\u672c\u3002Mellanox\u7f51\u5361\u9a71\u52a8\u548c\u7b14\u8005\u76ee\u524d\u6b63\u5728\u5b66\u4e60\u7684OpenGL\u4e2d\u4f7f\u7528\u7684GLFW\u5e93\u90fd\u91c7\u7528\u4e86CMake\uff0c\u4f7f\u7528\u8d77\u6765\u975e\u5e38\u4fbf\u6377\u3002</p> <p>\u5f53\u7136\uff0cCMake\u53ea\u662f\u4f17\u591a\u8de8\u5e73\u53f0\u7f16\u8bd1\u65b9\u6cd5\u4e2d\u7684\u4e00\u79cd\u3002\u4f8b\u5982\uff0c\u77e5\u540d\u7684DPDK\u5c31\u6ca1\u6709\u4f7f\u7528CMake\uff0c\u800c\u662f\u91c7\u7528\u4e86meson\u3002\u8fd9\u91cc\u53ea\u662f\u7b80\u5355\u63d0\u53ca\uff0c\u4e0d\u4f5c\u6df1\u5165\u8ba8\u8bba\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/CMake%28Mingw%E7%A4%BA%E4%BE%8B%29/#_2","title":"\u6b65\u9aa4","text":"<p>CMake\u5de5\u7a0b\u7684\u4e00\u822c\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u7f16\u5199\u6e90\u6587\u4ef6</li> </ol> <p>\u521b\u5efa\u6e90\u4ee3\u7801\u6587\u4ef6\uff0c\u4f8b\u5982 <code>.c</code>\u3001<code>.cpp</code> \u6216 <code>.h</code> \u6587\u4ef6\u3002</p> <ol> <li>\u7f16\u5199 CMakeLists.txt</li> </ol> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u6211\u4eec\u4e3b\u8981\u89e3\u51b3\u4ee5\u4e0b\u8fd9\u4e9b\u95ee\u9898\uff1a</p> <ol> <li>\u7f16\u8bd1\u5668\u9009\u62e9\uff1a\u6839\u636e\u60a8\u7684\u4ee3\u7801\u662f\u7528 C \u8fd8\u662f C++ \u7f16\u5199\u7684\u6765\u9009\u62e9\u7f16\u8bd1\u5668\uff0c\u5982 GCC\u3001Clang \u6216 MSVC\u3002</li> <li>\u7f16\u8bd1\u7248\u672c\uff1a\u6307\u5b9a\u7f16\u8bd1\u6807\u51c6\uff0c\u5982 C++11\u3001C++14\u3001C++17 \u7b49\uff0c\u8fd9\u5f71\u54cd\u53ef\u7528\u7684\u8bed\u8a00\u7279\u6027\u548c\u5e93\u3002</li> <li>\u7f16\u8bd1\u9009\u9879\uff1a\u8bbe\u7f6e\u7f16\u8bd1\u9009\u9879\uff0c\u5982\u4f18\u5316\u7ea7\u522b\u3001\u662f\u5426\u5c06\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\u7b49\uff0c\u8fd9\u4e9b\u9009\u9879\u6709\u52a9\u4e8e\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u6027\u80fd\u3002</li> <li>\u6e90\u6587\u4ef6\uff1a\u786e\u5b9a\u54ea\u4e9b\u6e90\u6587\u4ef6\u5c06\u88ab\u7f16\u8bd1\uff0c\u8fd9\u53ef\u80fd\u6d89\u53ca\u5230\u5728\u9879\u76ee\u4e2d\u5305\u542b\u6216\u6392\u9664\u7279\u5b9a\u6587\u4ef6\u6216\u6a21\u5757\u3002</li> <li>\u5916\u90e8\u5e93\u5f15\u7528\uff1a\u7ba1\u7406\u5bf9\u5916\u90e8\u5e93\u5982 GLFW\u3001Boost \u7b49\u7684\u5f15\u7528\uff0c\u5305\u62ec\u5b9a\u4f4d\u5e93\u6587\u4ef6\u548c\u6307\u5b9a\u94fe\u63a5\u9009\u9879\u3002</li> <li>\u5176\u4ed6\u914d\u7f6e\uff1a<ul> <li>\u6d4b\u8bd5\uff1a\u914d\u7f6e\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u3002</li> <li>\u5e73\u53f0\u7279\u5b9a\u914d\u7f6e\uff1a\u5982\u5bf9 Android\u3001Windows \u7b49\u64cd\u4f5c\u7cfb\u7edf\u7684\u7279\u6b8a\u5904\u7406\u3002</li> <li>\u6253\u5305\u548c\u5206\u53d1\uff1a\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684\u6253\u5305\u65b9\u5f0f\u53ca\u5206\u53d1\u6240\u9700\u7684\u6587\u4ef6\u548c\u4f9d\u8d56\u9879\u3002</li> <li>\u81ea\u5b9a\u4e49\u5b8f\uff1a\u5b9a\u4e49\u9884\u5904\u7406\u5668\u5b8f\uff0c\u7528\u4e8e\u6761\u4ef6\u7f16\u8bd1\u6216\u7b80\u5316\u4ee3\u7801\u3002</li> </ul> </li> <li>\u4f18\u5316\uff1a\u9664\u4e86\u7f16\u8bd1\u9009\u9879\u4e2d\u7684\u4f18\u5316\u7ea7\u522b\uff0c\u8fd8\u53ef\u80fd\u6d89\u53ca\u66f4\u5177\u4f53\u7684\u6027\u80fd\u8c03\u4f18\uff0c\u5982\u5185\u5b58\u7ba1\u7406\u3001\u5e76\u884c\u5904\u7406\u7b49\u3002</li> </ol> <p>CMake \u5c06\u8fd9\u4e9b\u95ee\u9898\u90fd\u653e\u5728 CMakeLists.txt \u6587\u4ef6\u91cc\uff0c\u4f9b\u6211\u4eec\u8fdb\u884c\u914d\u7f6e\u3002</p> <ol> <li> <p>\u751f\u6210 Makefile</p> </li> <li> <p>make</p> </li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/CMake%28Mingw%E7%A4%BA%E4%BE%8B%29/#_3","title":"\u793a\u4f8b","text":"<p>\u901a\u8fc7Socket\u7f16\u7a0b\u7684\u793a\u4f8b\uff0c\u5c55\u793aCMake\u7684\u4f7f\u7528\uff1a</p> <ol> <li>\u7f16\u5199\u6e90\u6587\u4ef6</li> </ol> <p>main.cpp</p> C++<pre><code>#include &lt;winsock2.h&gt;                //\u5f15\u7528\u7cfb\u7edf\u5e93\u6587\u4ef6\n#include \"include/DemoSocket.h\"      //\u5f15\u7528\u81ea\u5b9a\u4e49\u5934\u6587\u4ef6\n\nint main(int argc, char *argv[])\n{\n //\u5b9e\u73b0\u903b\u8f91\n ...\n\n    return 0;\n}\n</code></pre> <p>DemoSocket.h</p> C++<pre><code>// Socket\u7c7b\u5b9a\u4e49\uff0c\u63d0\u4f9b\u57fa\u672c\u7684\u7f51\u7edc\u901a\u4fe1\u63a5\u53e3\nclass DemoSocket\n{\n    // \u63a5\u53e3\u58f0\u660e\n    ...\n}\n</code></pre> <p>DemoSocket.cpp</p> C++<pre><code>// Socket\u7c7b\u5b9e\u73b0\n// \u63a5\u53e3\u5b9e\u73b0\nDemoSocket::DemoSocket(){\n    ...\n}\n...\n</code></pre> <ol> <li>\u7f16\u5199CMakeList.txt</li> </ol> CMake<pre><code># \u6307\u5b9aCMake\u7684\u6700\u4f4e\u7248\u672c\u8981\u6c42\ncmake_minimum_required(VERSION 3.10)\n\n# \u660e\u786e\u6307\u5b9aC\u548cC++\u7f16\u8bd1\u5668\u7684\u8def\u5f84\n# \u6ce8\u610f\uff1a\u5728\u591a\u5e73\u53f0\u9879\u76ee\u4e2d\u786c\u7f16\u7801\u8def\u5f84\u53ef\u80fd\u5bfc\u81f4\u53ef\u79fb\u690d\u6027\u95ee\u9898\nSET(CMAKE_C_COMPILER \"C:/msys64/mingw64/bin/gcc.exe\")\nSET(CMAKE_CXX_COMPILER \"C:/msys64/mingw64/bin/g++.exe\")\n\n# \u8bbe\u7f6e\u9879\u76ee\u540d\u79f0\uff0c\u8fd9\u91cc\u9879\u76ee\u540d\u79f0\u4e3a 'DemoSocket'\nproject(DemoSocket)\n\n# \u8bbe\u7f6eC++\u6807\u51c6\u4e3aC++11\uff0c\u5e76\u786e\u4fdd\u5176\u4e3a\u5fc5\u9700\n# \u8fd9\u610f\u5473\u7740\u5982\u679c\u7f16\u8bd1\u5668\u4e0d\u652f\u6301C++11\u6807\u51c6\uff0c\u5219\u4f1a\u62a5\u9519\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_STANDARD_REQUIRED True)\n\n# \u6dfb\u52a0\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6e90\u6587\u4ef6\n# \u8fd9\u91cc\u6dfb\u52a0\u4e86\u4e24\u4e2a\u6e90\u6587\u4ef6 'Main.cpp' \u548c 'DemoSocket.cpp'\n# CMake\u4f1a\u81ea\u52a8\u5904\u7406\u76f8\u5173\u7684\u5934\u6587\u4ef6\u4f9d\u8d56\nadd_executable(DemoSocket Main.cpp DemoSocket.cpp)\n\n# \u5c06\u5916\u90e8\u5e93\u94fe\u63a5\u5230\u9879\u76ee\n# \u8fd9\u91cc\u94fe\u63a5\u4e86 'wsock32' \u5e93\uff0c\u901a\u5e38\u7528\u4e8eWindows\u5e73\u53f0\u7684Socket\u7f16\u7a0b\ntarget_link_libraries(DemoSocket wsock32)\n</code></pre> <ol> <li>\u751f\u6210Makefile</li> </ol> Bash<pre><code>cmake -G \"MinGW Makefiles\" .. # \u8fd9\u91cc -G \u6307\u5b9a\u751f\u6210\u5668\uff0c\u6ce8\u610f\u540e\u9762\u6709.. \u8868\u793a\u9879\u76ee\u76ee\u5f55\uff0c\u4f7f\u7528\u8fd9\u6761\u547d\u4ee4\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210 Makefile\n</code></pre> <ol> <li>make</li> </ol> Bash<pre><code>mingw32-make.exe # mingw\u7684\u7f16\u8bd1\u5de5\u5177\n</code></pre> <p>\u7531\u4e8eWindows\u7cfb\u7edf\u7684\u7279\u6b8a\u6027\uff0c\u8fd9\u91cc\u63cf\u8ff0\u4e86Mingw\u7684\u547d\u4ee4\u4f7f\u7528\u65b9\u6cd5\uff08\u5c31\u4e24\u6761\u547d\u4ee4\u5751\u4e86\u6211\u4e00\u4e0b\u5348\uff09\u3002\u5728Linux\u7cfb\u7edf\u91cc\u5b9e\u73b0\u4f1a\u66f4\u7b80\u5355\uff1a</p> Bash<pre><code>cmake           #\u5982\u679c\u6ca1\u6709\u5c31\u88c5\u4e00\u4e0b\uff1aapt-get install cmake \u6216\u8005 yum install cmake\nmake\nmake install\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/Systrace%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/","title":"Systrace\u57fa\u672c\u539f\u7406","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/Systrace%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/#_1","title":"\u80cc\u666f","text":"<p>\u6027\u80fd\u5206\u6790\u5bf9\u4e8e\u5e94\u7528\u5f00\u53d1\u6781\u4e3a\u91cd\u8981\u3002\u4f5c\u4e3a\u4e00\u4e2a\u7ecf\u4e45\u4e0d\u8870\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0cLinux \u63d0\u4f9b\u4e86\u8ffd\u8e2a\u5206\u6790\uff08Tracing\uff09\u65b9\u6cd5\u3002\u8fd9\u79cd\u65b9\u6cd5\u5229\u7528\u5185\u6838\u4e2d\u7684\u5404\u79cd\u8ffd\u8e2a\u673a\u5236\u6765\u6536\u96c6\u7cfb\u7edf\u8fd0\u884c\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u901a\u8fc7\u8ffd\u8e2a\u5206\u6790\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u6536\u96c6\u5305\u62ec\u51fd\u6570\u8c03\u7528\u3001\u7cfb\u7edf\u8c03\u7528\u3001CPU \u8c03\u5ea6\u4e8b\u4ef6\u7b49\u5728\u5185\u7684\u6570\u636e\uff0c\u8fd9\u6709\u52a9\u4e8e\u8bc6\u522b\u6027\u80fd\u74f6\u9888\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0cFtrace \u4f5c\u4e3a\u4e00\u9879\u91cd\u8981\u5de5\u5177\uff0c\u5229\u7528\u5185\u6838\u4e2d\u7684\u8ffd\u8e2a\u70b9\uff08tracepoints\uff09\u548c\u5176\u4ed6\u673a\u5236\uff08\u5982\u51fd\u6570\u8ffd\u8e2a\u5668\u3001\u4e8b\u4ef6\u8ffd\u8e2a\u5668\u7b49\uff09\u6765\u641c\u96c6\u6570\u636e\uff0c\u4e3b\u8981\u7528\u4e8e\u5256\u6790 Linux \u5185\u6838\u7684\u6027\u80fd\u548c\u884c\u4e3a\u3002</p> <p>\u5728 Android \u7cfb\u7edf\u4e2d\uff0cATrace \u5141\u8bb8\u5f00\u53d1\u8005\u901a\u8fc7\u5728\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u4e2d\u6dfb\u52a0\u7279\u5b9a\u7684 API \u8c03\u7528\u6765\u542f\u7528\u8ffd\u8e2a\u70b9\uff0c\u5e76\u5728\u8fd0\u884c\u65f6\u6536\u96c6\u6027\u80fd\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8e\u5206\u6790 Android \u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u5982 UI \u6e32\u67d3\u3001\u7ebf\u7a0b\u6d3b\u52a8\u3001\u54cd\u5e94\u65f6\u95f4\u7b49\u3002</p> <p>Systrace \u662f Android4.1 \u4e2d\u65b0\u589e\u7684\u6027\u80fd\u6570\u636e\u91c7\u6837\u548c\u5206\u6790\u5de5\u5177\uff0c\u5b83\u7ed3\u5408\u4e86 Ftrace \u548c ATrace \u7684\u529f\u80fd\u3002\u5b83\u4f7f\u7528 Ftrace \u6765\u6536\u96c6\u7cfb\u7edf\u7ea7\u7684\u6027\u80fd\u6570\u636e\uff0c\u6536\u96c6 Android \u5173\u952e\u5b50\u7cfb\u7edf\u7684\u8fd0\u884c\u4fe1\u606f\uff0c\u5e76\u652f\u6301\u4f7f\u7528 ATrace \u63d2\u5165\u7684\u5e94\u7528\u7ea7\u8ffd\u8e2a\u70b9\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5168\u9762\u76f4\u89c2\u7684\u5206\u6790\u7cfb\u7edf\u60c5\u51b5\uff0c\u6539\u8fdb\u6027\u80fd\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/Systrace%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/#_2","title":"\u7ec4\u6210","text":"<p>Systrace \u7684\u6784\u6210\u5305\u62ec\u4e09\u5927\u90e8\u5206\uff1a</p> <ul> <li>Ftrace \u90e8\u5206\uff1a\u4f5c\u4e3a Linux \u5185\u6838\u7684\u8ffd\u8e2a\u6846\u67b6\uff0c\u8d1f\u8d23\u641c\u96c6\u5185\u6838\u5c42\u9762\u7684\u4e8b\u4ef6\u6570\u636e\uff0c\u4f8b\u5982 CPU \u8c03\u5ea6\u3001\u4e2d\u65ad\u5904\u7406\u548c\u7cfb\u7edf\u8c03\u7528\u7b49\u3002</li> <li>Atrace \u90e8\u5206\uff1a\u4e13\u4e3a Android \u5e73\u53f0\u8bbe\u8ba1\u7684\u8ffd\u8e2a\u5de5\u5177\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u5e94\u7528\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u8ffd\u8e2a\u70b9\uff0c\u7528\u4e8e\u641c\u96c6\u5e94\u7528\u8fd0\u884c\u65f6\u7684\u884c\u4e3a\u6570\u636e\u3002</li> <li>\u6570\u636e\u5206\u6790\uff1a\u63d0\u4f9b\u4e00\u4e2a\u56fe\u5f62\u5316\u754c\u9762\uff0c\u6574\u5408\u5e76\u5c55\u793a\u8fd9\u4e9b\u6570\u636e\uff0c\u5f62\u6210\u65f6\u95f4\u7ebf\u89c6\u56fe\uff0c\u534f\u52a9\u5f00\u53d1\u8005\u7406\u89e3\u5e94\u7528\u7a0b\u5e8f\u4e0e\u7cfb\u7edf\u7ea7\u522b\u6027\u80fd\u7684\u76f8\u4e92\u4f5c\u7528\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/Systrace%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/#_3","title":"\u4f7f\u7528","text":"<ol> <li>\u6dfb\u52a0\u5e94\u7528\u81ea\u5b9a\u4e49\u8ffd\u8e2a\u70b9\uff08\u53ef\u9009\uff09</li> </ol> <p>\u5728\u60a8\u5e0c\u671b\u76d1\u6d4b\u6027\u80fd\u7684\u4ee3\u7801\u90e8\u5206\u6dfb\u52a0\u81ea\u5b9a\u4e49\u8ffd\u8e2a\u70b9\uff1a</p> Text Only<pre><code>kotlinCopy codeimport android.os.Trace\n\nfun traceMethod() {\n    Trace.beginSection(\"traceMethodTrace\") // \u5728 Java \u4e2d\u4ee3\u7801\u76f8\u540c\n    // ...\u5b9e\u9645\u4ee3\u7801...\n    Trace.endSection()\n}\n</code></pre> <ol> <li>\u5f00\u542f Systrace</li> </ol> <p>\u5f53\u9700\u8981\u8fdb\u884c\u6027\u80fd\u5206\u6790\u65f6\uff0c\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u5f00\u542f Systrace\uff1a</p> Text Only<pre><code>bashCopy code\npython2 ./systrace.py -a com.DefaultCompany.modifytest\n</code></pre> <p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u4f7f\u7528 Python 2 \u8fd0\u884c\u811a\u672c\u3002</li> <li>platform-tools \u7248\u672c 33.0.0 \u662f\u6700\u540e\u4e00\u4e2a\u5305\u542b Systrace \u7684\u7248\u672c\u3002</li> <li> <p>\u4e0d\u4f7f\u7528 <code>-a</code> \u53c2\u6570\u5c06\u5bfc\u81f4 Trace \u4e2d\u7f3a\u5c11\u81ea\u5b9a\u4e49\u8ffd\u8e2a\u70b9\u3002</p> </li> <li> <p>\u8fd0\u884c\u5e94\u7528\u5e76\u6536\u96c6\u6570\u636e</p> </li> </ul> <p>\u5728 Systrace \u8fd0\u884c\u671f\u95f4\uff0c\u6b63\u5e38\u4f7f\u7528\u60a8\u7684\u5e94\u7528\u4ee5\u6536\u96c6\u6027\u80fd\u6570\u636e\u3002</p> <ol> <li>\u751f\u6210 Systrace \u62a5\u544a</li> </ol> <p>\u5e94\u7528\u8fd0\u884c\u7ed3\u675f\u540e\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a Systrace \u6027\u80fd\u62a5\u544a\u3002</p> <ol> <li>\u5206\u6790\u6027\u80fd</li> </ol> <p>\u8bbf\u95ee Perfetto UI \u5e76\u4e0a\u4f20 Systrace \u62a5\u544a\u4ee5\u5206\u6790\u5e94\u7528\u7684\u6027\u80fd\u8868\u73b0\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/Systrace%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/#openharmony","title":"\u5173\u4e8eOpenHarmony","text":"<p>OpenHarmony \u63d0\u4f9b\u4e86 HiTrace\uff0c\u5b83\u662f\u4e0e Systrace \u76f8\u5bf9\u5e94\u7684\u5de5\u5177\uff0c\u7528\u4e8e\u6267\u884c\u7c7b\u4f3c\u7684\u6027\u80fd\u8ffd\u8e2a\u64cd\u4f5c\u3002</p> <ol> <li> <p>\u6dfb\u52a0\u5e94\u7528\u81ea\u5b9a\u4e49\u8ffd\u8e2a\u70b9\uff08\u53ef\u9009\uff09:</p> </li> <li> <p>ArkTS:</p> Text Only<pre><code>import hitrace from '@ohos.hiTraceMeter';\n\nfunction traceMethod() {\n    hitrace.startTrace(\"TraceName\", 1001);\n    //...\u5b9e\u9645\u4ee3\u7801...\n    hitrace.finishTrace(\"TraceName\", 1001); // \u53c2\u6570\u5e94\u4e0e startTrace \u4e2d\u7684\u5bf9\u5e94\n}\n</code></pre> </li> <li> <p>Native C++:</p> C++<pre><code>#include &lt;hitrace/trace.h&gt;\n\nvoid traceMethod() {\n    OH_Hitrace_StartTrace(\"TraceName\");\n    //...\u5b9e\u9645\u4ee3\u7801...\n    OH_Hitrace_FinishTrace();\n}\n</code></pre> </li> <li> <p>\u542f\u52a8\u8ffd\u8e2a\uff1a</p> </li> </ol> <p>\u8fde\u63a5\u8bbe\u5907\u540e\uff0c\u6253\u5f00 HDC\uff08HarmonyOS Device Connect\uff09\u547d\u4ee4\u884c\u754c\u9762\uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u5f00\u59cb\u8ffd\u8e2a\uff1a</p> Bash<pre><code>hitrace --trace_begin -b 204800 app\n</code></pre> <p>-b\u53c2\u6570\u63d0\u9ad8\u7f13\u5b58\u5bb9\u91cf\uff0c\u5426\u5219\u4f1a\u6f0ftracepoint\u9020\u6210trace\u5d4c\u5957\u3002</p> <ol> <li>\u67e5\u770b\u7ed3\u679c\uff1a</li> </ol> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5bfc\u51fa\u8ffd\u8e2a\u7ed3\u679c\uff1a</p> Bash<pre><code>hitrace --trace_dump -o /data/local/tmp/test.ftrace\n</code></pre> <ol> <li>\u63d0\u53d6\u8ffd\u8e2a\u6587\u4ef6\uff1a</li> </ol> <p>\u4f7f\u7528 HDC \u5de5\u5177\u4ece\u8bbe\u5907\u83b7\u53d6\u8ffd\u8e2a\u6587\u4ef6\uff1a</p> Bash<pre><code>hdc file recv /data/local/tmp/test.ftrace test.ftrace\n</code></pre> <ol> <li>\u5206\u6790\u6027\u80fd</li> </ol> <p>\u200b       \u8bbf\u95ee Perfetto UI \u5e76\u4e0a\u4f20 Hitrace \u62a5\u544a\u4ee5\u5206\u6790\u5e94\u7528\u7684\u6027\u80fd\u8868\u73b0\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/","title":"\u6807\u51c6IO\u51fd\u6570\u2014\u2014popen","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/#iopopen","title":"\u6807\u51c6IO\u51fd\u6570\u2014\u2014popen","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/#_1","title":"\u7528\u6cd5","text":"<p>\u5982\u679c\u60f3\u5728\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fc7\u7a0b\u4e2d\u6267\u884c\u67d0\u4e2a\u547d\u4ee4\u884c\uff0c\u5e76\u4e14\u4e0e\u5f53\u524d\u7684\u7a0b\u5e8f\u4e0d\u51b2\u7a81\uff0c\u53ef\u4ee5\u901a\u8fc7popen\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u7279\u5b9a\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u5141\u8bb8\u7a0b\u5e8f\u4e0e\u8fd9\u4e2a\u8fdb\u7a0b\u8fdb\u884c\u4ea4\u4e92\u3002</p> C++<pre><code>FILE *popen(const char *command, const char *mode);         //\u539f\u578b\n                                                            //command: \u8981\u6267\u884c\u7684\u547d\u4ee4\n                                                            //mode: \u6307\u5b9a\u901a\u4fe1\u6a21\u5f0f\uff0c\u53ef\u4ee5\u662f \"r\"\uff08\u8bfb\uff09\u6216 \"w\"\uff08\u5199\uff09\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/#_2","title":"\u4ee3\u7801\u793a\u4f8b","text":"<p>Python\u662f\u4e00\u4e2a\u5b9e\u65f6\u7684\u89e3\u91ca\u5668\uff0c\u6bcf\u6b21\u8f93\u5165\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u8f93\u51fa\u663e\u793a\u3002\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u547d\u4ee4\u597d\u4ea4\u4e92\u793a\u4f8b\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/#_3","title":"\u4ee3\u7801","text":"C++<pre><code>#include &lt;stdio.h&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;thread&gt;\nint main()\n{\n    FILE *pythonPipe = popen(\"python -i\", \"w\"); // \u521d\u59cb\u5316\u547d\u4ee4\u4e0e\u6a21\u5f0f\u3002\u8bfb\u6a21\u5f0fr\uff0c\u5199\u6a21\u5f0fw\u3002\n    if (!pythonPipe)\n    { // \u4e0d\u8981\u5fd8\u8bb0\u9519\u8bef\u5904\u7406\n        perror(\"\u521d\u59cb\u5316\u5931\u8d25\");\n        return 1;\n    }\n\n    std::string pythonSentence;\n    bool isRunning = 1;\n    while (isRunning)\n    {\n        std::getline(std::cin, pythonSentence); // \u8f93\u5165\uff0c\u8fd9\u91cc\u4e0d\u8981\u7528std cin &gt;&gt; pythonSentence\uff0c\u56e0\u4e3a\u65e0\u6cd5\u83b7\u53d6\u7a7a\u767d\u7b26\n        pythonSentence += \"\\n\";                 // \u6ce8\u610f\uff0cpython\u662f\u884c\u7f13\u51b2\uff0c\u8981\u52a0\u5165\u6362\u884c\u7b26\u624d\u53ef\u4ee5\u53ca\u65f6\u56de\u663e\n\n        fprintf(pythonPipe, pythonSentence.c_str());\n        fflush(pythonPipe);                     // \u8f93\u5165\u5e76\u5237\u65b0\u7f13\u51b2\u533a\n\n        if (pythonSentence == \"exit()\\n\")\n        {\n            isRunning = false;                  // \u505c\u6b62\u6807\u8bc6\u7b26\n        }\n    }\n\n    pclose(pythonPipe);\n    return 0;\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/popen/#_4","title":"\u76f8\u5173\u51fd\u6570","text":"<ol> <li> <p>popen</p> </li> <li> <p>\u529f\u80fd: \u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff0c\u5e76\u8fde\u63a5\u8be5\u8fdb\u7a0b\u7684\u6807\u51c6\u8f93\u5165\u6216\u8f93\u51fa\u5230\u7ba1\u9053\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>FILE *popen(const char *command, const char *mode);\n</code></pre> <ul> <li><code>command</code>: \u8981\u6267\u884c\u7684\u547d\u4ee4\u3002</li> <li><code>mode</code>: \u6253\u5f00\u7ba1\u9053\u7684\u6a21\u5f0f\uff0c<code>\"r\"</code>\uff08\u8bfb\u6a21\u5f0f\uff09\u6216 <code>\"w\"</code>\uff08\u5199\u6a21\u5f0f\uff09\u3002</li> </ul> </li> <li> <p>perror</p> </li> <li> <p>\u529f\u80fd: \u6253\u5f53\u7cfb\u7edf\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u901a\u5e38\u4f1a\u8bbe\u7f6e\u5168\u5c40\u53d8\u91cf <code>errno</code>\u3002<code>perror</code> \u6839\u636e <code>errno</code> \u7684\u503c\u6253\u5370\u51fa\u76f8\u5e94\u7684\u9519\u8bef\u6d88\u606f\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>void perror(const char *s);\n</code></pre> <ul> <li><code>s</code>: \u8981\u6253\u5370\u7684\u6d88\u606f\u524d\u7f00\u3002</li> </ul> </li> <li> <p>fprintf</p> </li> <li> <p>\u529f\u80fd: \u683c\u5f0f\u5316\u8f93\u51fa\u51fd\u6570\uff0c\u7528\u4e8e\u5411\u6307\u5b9a\u7684\u6587\u4ef6\u6216\u6d41\u8f93\u51fa\u683c\u5f0f\u5316\u6587\u672c\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>int fprintf(FILE *stream, const char *format, ...);\n</code></pre> <ul> <li><code>stream</code>: \u6307\u5411 <code>FILE</code> \u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6307\u5b9a\u8f93\u51fa\u76ee\u6807\u3002</li> <li><code>format</code>: \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002</li> </ul> </li> <li> <p>fputs</p> </li> <li> <p>\u529f\u80fd: \u5411\u6307\u5b9a\u7684\u6587\u4ef6\u6216\u6d41\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>int fputs(const char *s, FILE *stream);\n</code></pre> <ul> <li><code>s</code>: \u8981\u5199\u5165\u7684\u5b57\u7b26\u4e32\u3002</li> <li><code>stream</code>: \u76ee\u6807\u6587\u4ef6\u6216\u6d41\u3002</li> </ul> </li> <li> <p>fflush</p> </li> <li> <p>\u529f\u80fd: \u6e05\u9664\u6587\u4ef6\u6d41\u7684\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u5c06\u7f13\u51b2\u533a\u4e2d\u7684\u6240\u6709\u672a\u5199\u6570\u636e\u5199\u5165\u5230\u57fa\u7840\u8f93\u51fa\u8bbe\u5907\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>int fflush(FILE *stream);\n</code></pre> <ul> <li><code>stream</code>: \u76ee\u6807\u6587\u4ef6\u6216\u6d41\u3002</li> </ul> </li> <li> <p>pclose</p> </li> <li> <p>\u529f\u80fd: \u5173\u95ed <code>popen</code> \u6253\u5f00\u7684\u6d41\u3002</p> </li> <li> <p>\u7528\u6cd5: </p> Text Only<pre><code>int pclose(FILE *stream);\n</code></pre> <ul> <li><code>stream</code>: \u7531 <code>popen</code> \u8fd4\u56de\u7684\u6d41\u3002</li> </ul> </li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/","title":"\u5173\u8054\u5bb9\u5668","text":"<p>\u5173\u8054\u5bb9\u5668\u662fC++\u6807\u51c6\u5e93\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u7528\u4e8e\u5b58\u50a8\u548c\u68c0\u7d22\u6309\u5173\u952e\u5b57\u6392\u5e8f\u7684\u6570\u636e\u3002\u8fd9\u7c7b\u5bb9\u5668\u5728\u6570\u636e\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u641c\u7d22\u64cd\u4f5c\u4e2d\u63d0\u4f9b\u9ad8\u6548\u7684\u6027\u80fd\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#1-set","title":"1. <code>set</code>","text":"<p>\u5b58\u50a8\u552f\u4e00\u5143\u7d20\u7684\u6709\u5e8f\u96c6\u5408\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li><code>insert</code>: \u63d2\u5165\u5143\u7d20\u3002</li> <li><code>erase</code>: \u5220\u9664\u5143\u7d20\u3002</li> <li><code>find</code>: \u67e5\u627e\u5143\u7d20\u3002</li> <li><code>count</code>: \u8ba1\u7b97\u5143\u7d20\u7684\u6570\u91cf\uff080\u62161\uff0c\u56e0\u4e3a\u5143\u7d20\u662f\u552f\u4e00\u7684\uff09\u3002</li> <li><code>begin</code>/<code>end</code>: \u83b7\u53d6\u8fed\u4ee3\u5668\u4ee5\u904d\u5386\u96c6\u5408\u3002</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\n\nint main() {\n    std::set&lt;int&gt; s;\n    s.insert(3);\n    s.insert(1);\n    s.insert(4);\n\n    // \u8f93\u51fa\u5143\u7d20\n    for (int x : s) {\n        std::cout &lt;&lt; x &lt;&lt; \" \"; // \u8f93\u51fa\uff1a1 3 4\n    }\n\n    // \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5b58\u5728\n    if (s.find(3) != s.end()) {\n        std::cout &lt;&lt; \"\\n3 is found\\n\";\n    }\n\n    // \u5220\u9664\u5143\u7d20\n    s.erase(3);\n\n    // \u518d\u6b21\u68c0\u67e5\n    if (s.find(3) == s.end()) {\n        std::cout &lt;&lt; \"3 is not found\\n\";\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#2-multiset","title":"2. <code>multiset</code>","text":"<p>\u4e0e<code>set</code>\u7c7b\u4f3c\uff0c\u4f46\u5141\u8bb8\u5143\u7d20\u91cd\u590d\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a\u540c<code>set</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;set&gt;\n\nint main() {\n    std::multiset&lt;int&gt; ms;\n    ms.insert(1);\n    ms.insert(1);\n    ms.insert(2);\n\n    // \u8f93\u51fa\u5143\u7d20\n    for (int x : ms) {\n        std::cout &lt;&lt; x &lt;&lt; \" \"; // \u8f93\u51fa\uff1a1 1 2\n    }\n\n    // \u8ba1\u7b971\u7684\u6570\u91cf\n    std::cout &lt;&lt; \"\\nCount of 1: \" &lt;&lt; ms.count(1) &lt;&lt; std::endl; // \u8f93\u51fa\uff1a2\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#3-map","title":"3. <code>map</code>","text":"<p>\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u6bcf\u4e2a\u952e\u552f\u4e00\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li><code>insert</code>: \u63d2\u5165\u952e\u503c\u5bf9\u3002</li> <li><code>erase</code>: \u6839\u636e\u952e\u5220\u9664\u952e\u503c\u5bf9\u3002</li> <li><code>find</code>: \u67e5\u627e\u952e\u3002</li> <li><code>operator[]</code>: \u8bbf\u95ee\u4e0e\u952e\u5173\u8054\u7684\u503c\u3002</li> <li><code>begin</code>/<code>end</code>: \u8fed\u4ee3\u5668\u3002</li> </ul> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nint main() {\n    std::map&lt;std::string, int&gt; m;\n    m[\"apple\"] = 5;\n    m[\"banana\"] = 3;\n    m.insert(std::make_pair(\"cherry\", 2));\n\n    // \u8f93\u51fa\u952e\u503c\u5bf9\n    for (auto&amp; p : m) {\n        std::cout &lt;&lt; p.first &lt;&lt; \": \" &lt;&lt; p.second &lt;&lt; std::endl;\n    }\n\n    // \u67e5\u627e\u952e\n    if (m.find(\"banana\") != m.end()) {\n        std::cout &lt;&lt; \"banana is found\\n\";\n    }\n\n    // \u5220\u9664\u952e\u503c\u5bf9\n    m.erase(\"apple\");\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#4-multimap","title":"4. <code>multimap</code>","text":"<p>\u7c7b\u4f3c\u4e8e<code>map</code>\uff0c\u4f46\u5141\u8bb8\u952e\u91cd\u590d\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5**\uff1a\u540c<code>map</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n\nint main() {\n    std::multimap&lt;std::string, int&gt; mm;\n    mm.insert(std::make_pair(\"apple\", 5));\n    mm.insert(std::make_pair(\"apple\", 10));\n    mm.insert(std::make_pair(\"banana\", 3));\n\n    // \u8f93\u51fa\u952e\u503c\u5bf9\n    for (auto&amp; p : mm) {\n        std::cout &lt;&lt; p.first &lt;&lt; \": \" &lt;&lt; p.second &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#5-unordered_set","title":"5. <code>unordered_set</code>","text":"<p>\u5b58\u50a8\u552f\u4e00\u5143\u7d20\u7684\u65e0\u5e8f\u96c6\u5408\uff0c\u57fa\u4e8e\u54c8\u5e0c\u8868\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a\u4e0e<code>set</code>\u7c7b\u4f3c\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u987a\u5e8f\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nint main() {\n    std::unordered_set&lt;int&gt; us;\n    us.insert(3);\n    us.insert(1);\n    us.insert(4);\n\n    // \u8f93\u51fa\u5143\u7d20\uff08\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\n    for (int x : us) {\n        std::cout &lt;&lt; x &lt;&lt; \" \";\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#6-unordered_multiset","title":"6. <code>unordered_multiset</code>","text":"<p>\u7c7b\u4f3c\u4e8e<code>unordered_set</code>\uff0c\u4f46\u5141\u8bb8\u5143\u7d20\u91cd\u590d\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a\u540c<code>unordered_set</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_set&gt;\n\nint main() {\n    std::unordered_multiset&lt;int&gt; ums;\n    ums.insert(1);\n    ums.insert(1);\n    ums.insert(2);\n\n    // \u8f93\u51fa\u5143\u7d20\uff08\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\n    for (int x : ums) {\n        std::cout &lt;&lt; x &lt;&lt; \" \";\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#7-unordered_map","title":"7. <code>unordered_map</code>","text":"<p>\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u4e0d\u4fdd\u8bc1\u987a\u5e8f\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a\u540c<code>map</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n\nint main() {\n    std::unordered_map&lt;std::string, int&gt; um;\n    um[\"apple\"] = 5;\n    um[\"banana\"] = 3;\n\n    // \u8f93\u51fa\u952e\u503c\u5bf9\uff08\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\n    for (auto&amp; p : um) {\n        std::cout &lt;&lt; p.first &lt;&lt; \": \" &lt;&lt; p.second &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/#8-unordered_multimap","title":"8. <code>unordered_multimap</code>","text":"<p>\u7c7b\u4f3c\u4e8e<code>unordered_map</code>\uff0c\u4f46\u5141\u8bb8\u952e\u91cd\u590d\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a\u540c<code>unordered_map</code>\u3002</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n\nint main() {\n    std::unordered_multimap&lt;std::string, int&gt; umm;\n    umm.insert(std::make_pair(\"apple\", 5));\n    umm.insert(std::make_pair(\"apple\", 10));\n    umm.insert(std::make_pair(\"banana\", 3));\n\n    // \u8f93\u51fa\u952e\u503c\u5bf9\uff08\u987a\u5e8f\u4e0d\u786e\u5b9a\uff09\n    for (auto&amp; p : umm) {\n        std::cout &lt;&lt; p.first &lt;&lt; \": \" &lt;&lt; p.second &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%88%B7%E9%A2%98%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/","title":"\u6392\u5e8f","text":"C++<pre><code>#include &lt;algorithm&gt;\nusing namespace std;\n\nchar cstr[] = \"example\";\nstring str = \"example\";\nvector&lt;string&gt; strs = {\"banana\", \"apple\", \"cherry\"};\n\nsort(cstr, cstr + strlen(cstr));\nsort(str.begin(), str.end());\nsort(strs.begin(), strs.end());\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%88%B7%E9%A2%98%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/#map","title":"Map\u904d\u5386","text":"C++<pre><code>for (auto i : xxmap)\n{\n    cout &lt;&lt; i.first &lt;&lt; \": \" &lt;&lt; i.second &lt;&lt; endl;\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/","title":"\u57fa\u672c\u64cd\u4f5c","text":"<p>push_back \u4e0e emplace_back</p> <p><code>push_back</code> \u548c <code>emplace_back</code> \u90fd\u662f\u5728 <code>std::vector</code> \u7684\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u5de5\u4f5c\u65b9\u5f0f\u7a0d\u6709\u4e0d\u540c\u3002</p> <ul> <li> <p>\u6784\u9020\u65b9\u5f0f\u4e0d\u540c</p> </li> <li> <p><code>push_back</code> \u4f1a\u79fb\u52a8\u6216\u62f7\u8d1d\u53c2\u6570\u2014\u2014\u53d6\u51b3\u4e8e\u5de6\u503c\u6216\u53f3\u503c\uff0c\u6765\u6dfb\u52a0\u5143\u7d20\u3002</p> </li> <li> <p><code>emplace_back</code> \u5219\u662f\u5c31\u5730\u6784\u9020\u65b0\u7684\u5143\u7d20\uff0c\u4e0d\u9700\u8981\u590d\u5236\u6216\u79fb\u52a8\u64cd\u4f5c\u3002</p> </li> <li> <p>\u63a5\u6536\u53c2\u6570\u4e0d\u540c</p> </li> <li> <p><code>push_back</code> \u63a5\u53d7\u4e00\u4e2a\u5b8c\u6574\u7684\u5bf9\u8c61\uff1a<code>qj.push_back({1, 2, 3});</code></p> </li> <li> <p>\u63a5\u53d7\u4e00\u7ec4\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u5fc5\u987b\u4e0e\u5bb9\u5668\u5143\u7d20\u7c7b\u578b\u7684\u67d0\u4e2a\u6784\u9020\u51fd\u6570\u5339\u914d\uff1a</p> C++<pre><code>vector&lt;tuple&lt;int,int,int,int&gt;&gt; em1;\nvector&lt;vector&lt;int&gt;&gt; em2;\nem1.emplace_back(1,2,3,4);                          // \u6b63\u786e\uff0c\u4e0etuple\u7684\u6784\u9020\u51fd\u6570\u76f8\u5339\u914d\nem2.emplace_back({1,2});                            // \u9519\u8bef\uff0c\u4e0d\u63a5\u6536\u5bf9\u8c61\nem2.emplace_back(1,2);                              // \u9519\u8bef\uff0cvector&lt;int&gt;\u6784\u9020\u51fd\u6570\u4e0d\u9700\u8981\u4e24\u4e2a\u53c2\u6570\nem2.emplace_back(std::vector&lt;int&gt;{1,2});            // \u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86\u6784\u9020\u51fd\u6570\u91cc\u7684\u79fb\u52a8\u62f7\u8d1d\u51fd\u6570\uff0c\u6548\u679c\u548cpush_back\u76f8\u540c\nem2.emplace_back(std::initializer_list&lt;int&gt;{1});    // \u6b63\u786e\u7528\u6cd5\uff0c\u8c03\u7528\u4e86vector&lt;int&gt;\u6784\u9020\u51fd\u6570initializer_list\n</code></pre> <p>\u6709\u4e2a\u5173\u952e\u70b9\u662f\uff1aemplace_back\u4e0d\u652f\u6301\u521d\u59cb\u5316\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\uff0c \u8fd9\u610f\u5473\u7740em2.emplace_back({1,2});\u662f\u4e0d\u53ef\u7528\u7684\u3002</p> </li> </ul> <p>int\u8f6c16\u8fdb\u5236</p> C++<pre><code>#include &lt;sstream&gt;\n\nint num = 255;\nstd::stringstream ss;\nss &lt;&lt; std::hex &lt;&lt; num;                      // \u5c0f\u5199\nss &lt;&lt; std::uppercase &lt;&lt; std::hex &lt;&lt; num;    // \u5927\u5199\nstd::string result = ss.str();\n</code></pre> Text Only<pre><code>std::string hex_str = \"ff\";\nint num = std::stoi(hex_str, nullptr, 16);\n</code></pre> <p>vector\u5904\u7406FIFO</p> Text Only<pre><code>std::vector&lt;int&gt; v;\nv.push_back(i);\nv.erase(v.begin());\n</code></pre> <p>queue\u5904\u7406FIFO</p> Text Only<pre><code>std::queue&lt;int&gt; q;\nwhile (!q.empty()){};\nq.push(i);\nq.front();\nq.pop();\n</code></pre> <p>\u533a\u522b\uff1aqueue\u66f4\u5feb\uff0c\u4f46\u662f\u65e0\u6cd5\u6309\u5e8f\u53f7\u8bbf\u95ee\u3002</p> <p>vector\u5904\u7406LIFO</p> Text Only<pre><code>std::vector&lt;int&gt; v;\nv.push_back(i);\nv.pop_back();\n</code></pre> <p><code>explicit</code> \u5173\u952e\u5b57\uff1a\u5e38\u7528\u4e8e\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u9632\u6b62\u7c7b\u6784\u9020\u51fd\u6570\u7684\u4e0d\u671f\u671b\u7684\u9690\u5f0f\u8f6c\u6362\u3002</p> <p>vector\u62fc\u63a5\uff1a<code>vec1.insert(vec1.end(), vec2.begin(), vec2.end());</code></p> <p>\u5bfb\u627e\u5b57\u7b26\u4e32\uff1a<code>str.find(\"aaa\") != std::string::npos</code></p> <p>\u6839\u636e\u952e\u503c\u79fb\u9664\u5143\u7d20\uff1a</p> C++<pre><code>for(auto it = myMap.begin(); it != myMap.end();) {\n    if(it-&gt;first.find(\"aa\") != std::string::npos) {\n        it = myMap.erase(it);\n    } else {\n        ++it;\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/","title":"\u5916\u90e8\u5e93\u5f15\u7528\u2014\u2014\u9759\u6001\u5e93\u3001\u94fe\u63a5\u5e93\u4e0e\u5171\u4eab\u5e93","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_2","title":"\u80cc\u666f","text":"<p>\u6211\u662f\u4e00\u4e2a\u559c\u6b22\u6253\u6e38\u620f\u7684\u4eba\u3002\u8bb0\u5f97\u8fd8\u5728 Windows 7 \u7684\u5e74\u4ee3\uff0c\u6bcf\u6b21\u91cd\u88c5\u7cfb\u7edf\u90fd\u8981\u987a\u624b\u4e0b\u8f7d\u4e00\u4e2a\u6e38\u620f\u7ec4\u4ef6\u5e93\u5e76\u5b89\u88c5\uff0c\u8fd9\u6837\u624d\u80fd\u987a\u5229\u6253\u5f00\u5404\u79cd\u6e38\u620f\u3002\u8981\u4e0d\u7136\uff0c\u5c31\u4f1a\u51fa\u73b0\u7f3a\u8fd9\u4e2a\u7f3a\u90a3\u4e2a\u7684\u60c5\u51b5\u3002</p> <p>\u4e0a\u5468\uff0c\u535a\u5fb7\u4e4b\u95e8 3 \u5b9e\u81f3\u540d\u5f52\uff0c\u62ff\u5230\u4e86 TGA \u5e74\u5ea6\u6700\u4f73\u6e38\u620f\uff082023\uff09\u3002\u53ef\u60dc\u7684\u662f\uff0c\u535a\u5fb7\u4e4b\u95e8 3 \u662f\u4e00\u4e2a\u4f4e\u9b54\u7684\u4e16\u754c\uff0c\u6211\u4ecd\u5f88\u6000\u5ff5\u5f53\u521d\u535a\u5fb7\u4e4b\u95e8 2 \u7684\u8fde\u9501\u610f\u5916\u4e09\u51cb\u6b7b\uff0c\u6295\u5f71\u62df\u50cf\u5929\u4f7f\u6d77\u3002</p> <p>\u4f46\u5f53\u6211\u62ff\u7740 2022 \u5e74\u7684 ROG \u5e7b 14 \u7ecf\u5178\u767d Win11 \u6253\u5f00\u8fd9\u6b3e 1998 \u5e74\u7684\u6e38\u620f\u65f6\uff0c\u610f\u6599\u4e4b\u4e2d\u5730\u62a5\u51fa\u4e86\u9519\u8bef\uff1a\u627e\u4e0d\u5230openal32.dll\u3002\u5f88\u663e\u7136\uff0c\u5982\u4eca\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c3d\u7ba1\u5df2\u7ecf\u4e0d\u518d\u9700\u8981\u50cf\u4e4b\u524d\u4e00\u6837\u9700\u8981\u9884\u5148\u5b89\u88c5\u6e38\u620f\u7ec4\u4ef6\uff0c\u4f46\u4ecd\u4e0d\u4f1a\u517c\u5bb9\u5982\u6b64\u53e4\u8001\u7684\u5e93\u4e86\u3002\u5728\u65e5\u5e38\u7f16\u7a0b\u4e2d\uff0c\u4e5f\u7ecf\u8fc7\u4f1a\u63a5\u89e6\u7c7b\u4f3c\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u8457\u540d\u7684OpenGL\u7684\u6559\u7a0b\uff1a</p> <p>\u91cc\u9762\u5c31\u901a\u8fc7CMake\u6784\u5efa\u4e86GLFW\uff0c\u7f16\u8bd1\u51faglfw3.lib\u88ab\u4f7f\u7528\u3002</p> <p>\u8fd8\u6709\u4e4b\u524d\u7684Socket\u7f16\u7a0b\u6587\u6863\u4e2d\uff0cWindows\u4f7f\u7528\u4e86\u63a5\u53e3\uff1awinsock32.dll.</p> <p>\u4ed6\u4eec\u90fd\u662f\u5c06\u5df2\u7ecf\u5199\u597d\u7684\u4e00\u90e8\u5206\u4ee3\u7801\uff0c\u76f4\u63a5\u62ff\u5230\u81ea\u5df1\u7684\u7a0b\u5e8f\u91cc\u4f7f\u7528\uff0c\u8fd9\u79cd\u65b9\u5f0f\u672c\u6587\u79f0\u4e4b\u4e3a\uff1a\u5916\u90e8\u5e93\u96c6\u6210\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_3","title":"\u6982\u5ff5","text":"<p>\u5916\u90e8\u5e93\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f\uff1a\u9759\u6001\u5e93\uff08Static Library\uff09\u548c\u52a8\u6001\u5e93\uff08Dynamic Library\uff09\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#static-library","title":"\u9759\u6001\u5e93\uff08Static Library\uff09","text":"<ol> <li>\u5b9a\u4e49\uff1a</li> <li>\u9759\u6001\u5e93\u662f\u4e00\u79cd\u5305\u542b\u4e86\u9884\u7f16\u8bd1\u7684\u4ee3\u7801\u548c\u51fd\u6570\u7684\u6587\u4ef6\uff0c\u901a\u5e38\u4ee5 <code>.lib</code> \u6216 <code>.a</code> \u6587\u4ef6\u683c\u5f0f\u5b58\u5728\u3002</li> <li>\u5f53\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u65f6\uff0c\u9759\u6001\u5e93\u4e2d\u7684\u4ee3\u7801\u4f1a\u88ab\u6574\u4f53\u590d\u5236\u5230\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002</li> <li>\u4f18\u70b9\uff1a</li> <li>\u6027\u80fd\uff1a\u7531\u4e8e\u6240\u6709\u7684\u4ee3\u7801\u90fd\u88ab\u5305\u542b\u5728\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u989d\u5916\u7684\u52a0\u8f7d\u65f6\u95f4\u3002</li> <li>\u72ec\u7acb\u6027\uff1a\u4e0d\u4f9d\u8d56\u4e8e\u5916\u90e8\u7684\u5e93\u6587\u4ef6\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u66f4\u5bb9\u6613\u5206\u53d1\u548c\u90e8\u7f72\u3002</li> <li>\u7f3a\u70b9\uff1a</li> <li>\u6587\u4ef6\u5927\u5c0f\uff1a\u9759\u6001\u5e93\u88ab\u6574\u5408\u5230\u6bcf\u4e2a\u4f7f\u7528\u5b83\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u53ef\u80fd\u5bfc\u81f4\u6587\u4ef6\u4f53\u79ef\u53d8\u5927\u3002</li> <li>\u66f4\u65b0\u4e0d\u4fbf\uff1a\u5982\u679c\u9759\u6001\u5e93\u66f4\u65b0\uff0c\u6240\u6709\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u90fd\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#dynamic-library","title":"\u52a8\u6001\u5e93\uff08Dynamic Library\uff09","text":"<ol> <li>\u5b9a\u4e49\uff1a</li> <li>\u52a8\u6001\u5e93\u662f\u4e00\u79cd\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u88ab\u52a0\u8f7d\u7684\u4ee3\u7801\u5e93\uff0c\u901a\u5e38\u4ee5 <code>.dll</code>\uff08\u5728Windows\u4e2d\uff09\u6216 <code>.so</code>\uff08\u5728Linux\u4e2d\uff09\u683c\u5f0f\u5b58\u5728\u3002</li> <li>\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u94fe\u63a5\u5230\u8fd9\u4e9b\u5e93\uff0c\u800c\u4e0d\u662f\u5728\u7f16\u8bd1\u65f6\u3002</li> <li>\u4f18\u70b9\uff1a</li> <li>\u8282\u7701\u7a7a\u95f4\uff1a\u591a\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u5e93\u6587\u4ef6\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u7684\u5b58\u50a8\u3002</li> <li>\u4fbf\u4e8e\u66f4\u65b0\uff1a\u66f4\u65b0\u52a8\u6001\u5e93\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u4f7f\u7528\u5b83\u7684\u7a0b\u5e8f\u3002</li> <li>\u7f3a\u70b9\uff1a</li> <li>\u4f9d\u8d56\u6027\uff1a\u7a0b\u5e8f\u8fd0\u884c\u65f6\u9700\u8981\u786e\u4fdd\u76f8\u5e94\u7684\u5e93\u6587\u4ef6\u53ef\u7528\u548c\u517c\u5bb9\u3002</li> <li>\u6027\u80fd\u5f71\u54cd\uff1a\u52a0\u8f7d\u52a8\u6001\u5e93\u53ef\u80fd\u4f1a\u7a0d\u5fae\u5ef6\u8fdf\u7a0b\u5e8f\u7684\u542f\u52a8\u65f6\u95f4\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#ps","title":"PS","text":"<p><code>.lib</code> \u6587\u4ef6\u901a\u5e38\u662f\u9759\u6001\u5e93\uff0c\u4f46\u5b83\u4eec\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u52a8\u6001\u94fe\u63a5\u5e93\uff08DLL\uff09\u7684\u5bfc\u5165\u5e93\uff08\u5c06.h\u4e0edll\u94fe\u63a5\uff0c\u6784\u5efaDLL\u65f6\u81ea\u52a8\u751f\u6210\uff0c\u9759\u6001\u94fe\u63a5\u5230dll\u65f6\u4f7f\u7528\uff09\u3002</p> <p>\u5728 Unix-like \u7cfb\u7edf\u4e2d\uff08\u5982 Linux \u6216 macOS\uff09\uff0c\u5e93\u6587\u4ef6\u901a\u5e38\u4ee5 <code>lib[name]</code> \u7684\u683c\u5f0f\u547d\u540d\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u540d\u4e3a \"example\" \u7684\u5e93\uff0c\u90a3\u4e48\u5b83\u7684\u52a8\u6001\u7248\u672c\u901a\u5e38\u4f1a\u88ab\u547d\u540d\u4e3a <code>libexample.so</code>\uff0c\u800c\u5b83\u7684\u9759\u6001\u7248\u672c\u5219\u4f1a\u88ab\u547d\u540d\u4e3a <code>libexample.a</code>\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_4","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u8fd9\u8fb9\u5199\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u793a\u4f8b</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_5","title":"\u7f16\u5199\u4ee3\u7801","text":"C<pre><code>// \u68c0\u67e5\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\uff0c\u5e76\u6839\u636e\u5e73\u53f0\u5b9a\u4e49\u9002\u5f53\u7684\u5b8f\n#if defined(__CYGWIN32__)\n    // \u5728 Cygwin \u73af\u5883\u4e0b\uff0c\u5b9a\u4e49\u8c03\u7528\u7ea6\u5b9a\u4e3a __stdcall\uff0c\u5e76\u5c06\u51fd\u6570\u5bfc\u51fa\u81f3 DLL\n    #define __STD_IFCALL __stdcall\n    #define EXPORT_INTERFACE __declspec(dllexport)\n#elif defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(_WIN64) || defined(WINAPI_FAMILY)\n    // \u5728 Windows \u5e73\u53f0\uff08\u5305\u62ec32\u4f4d\u548c64\u4f4d\uff09\u4e0b\uff0c\u540c\u6837\u5b9a\u4e49\u4e3a __stdcall \u8c03\u7528\u7ea6\u5b9a\uff0c\u5e76\u5bfc\u51fa\u81f3 DLL\n    #define __STD_IFCALL __stdcall\n    #define EXPORT_INTERFACE __declspec(dllexport)\n#elif defined(__MACH__) || defined(__ANDROID__) || defined(__linux__) || defined(LUMIN)\n    // \u5728\u7c7b Unix \u5e73\u53f0\uff08\u5982 macOS\u3001Android\u3001Linux\u3001Lumin\uff09\u4e0b\uff0c\u4e0d\u9700\u8981\u7279\u522b\u7684\u8c03\u7528\u7ea6\u5b9a\n    // \u4f7f\u7528\u9ed8\u8ba4\u7684\u51fd\u6570\u53ef\u89c1\u6027\u5c5e\u6027\u6765\u5bfc\u51fa\u51fd\u6570\uff0c\u4f9b\u5916\u90e8\u4f7f\u7528\u7684\u51fd\u6570\u663e\u5f0f\u5730\u8bbe\u7f6e\u53ef\u89c1\u6027\u5c5e\u6027\u662f\u4e00\u79cd\u826f\u597d\u7684\u7f16\u7a0b\u5b9e\u8df5\n    #define __STD_IFCALL\n    #define EXPORT_INTERFACE __attribute__ ((visibility (\"default\")))\n#else\n    // \u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\uff0c\u4e0d\u5b9a\u4e49\u4efb\u4f55\u7279\u522b\u7684\u8c03\u7528\u7ea6\u5b9a\u548c\u5bfc\u51fa\u65b9\u5f0f\n    #define __STD_IFCALL\n    #define EXPORT_INTERFACE\n#endif\n\n// \u4f7f\u7528 extern \"C\" \u4ee5\u786e\u4fdd C++ \u7f16\u8bd1\u5668\u6309\u7167 C \u8bed\u8a00\u7684\u94fe\u63a5\u89c4\u5219\u5904\u7406\u4ee5\u4e0b\u51fd\u6570\nextern \"C\" {\n    // \u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u5b8f\u6765\u786e\u4fdd\u51fd\u6570\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u6b63\u786e\u5bfc\u51fa\u548c\u8c03\u7528\n    EXPORT_INTERFACE const char* __STD_IFCALL printHello() {\n        // \u8fd4\u56de\u4e00\u4e2a\u7b80\u5355\u7684\u5b57\u7b26\u4e32\n        return \"Hello World!\";\n    }\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684 C/C++ \u5e93\u5b9a\u4e49\uff0c\u5b9a\u4e49\u4e00\u4e2aHelloWorld\u51fd\u6570\uff0c\u5e76\u786e\u4fdd\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u4e0a\u7684\u517c\u5bb9\u6027\uff0c\u4f7f\u7528C\u8bed\u8a00\u89c4\u8303\u6267\u884c\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_6","title":"\u6784\u5efa","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#windowsdlllib","title":"Windows\u5e73\u53f0\uff1a\u6784\u5efaDLL\u3001Lib","text":"<ol> <li>\u7f16\u5199\u6e90\u4ee3\u7801\uff1a\u8fd9\u662f\u5f00\u53d1\u4efb\u4f55\u8f6f\u4ef6\u7684\u7b2c\u4e00\u6b65\uff0c\u51c6\u5907\u597d\u60f3\u8981\u7f16\u8bd1\u6210DLL\u6216LIB\u7684\u6e90\u4ee3\u7801\u3002</li> <li>\u65b0\u5efaVisual Studio\u5e93\u9879\u76ee\uff1aVisual Studio\u662f\u4e00\u4e2a\u6d41\u884c\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\uff0c\u5b83\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c\u9879\u76ee\u7c7b\u578b\u3002\u5728Visual Studio\u4e2d\uff0c\u83dc\u5355\u680f-&gt;\u6587\u4ef6-&gt;\u65b0\u5efa-&gt;\u4ece\u73b0\u6709\u4ee3\u7801\u521b\u5efa\u9879\u76ee\u3002\u6839\u636e\u9700\u6c42\uff0c\u9879\u76ee\u7c7b\u578b\u9009\u62e9\u52a8\u6001\u94fe\u63a5\u5e93\uff08DLL\uff09\u6216\u8005\u9759\u6001\u94fe\u63a5\u5e93\uff08LIB\uff09\u3002</li> <li>\u6784\u5efa\u6587\u4ef6\uff1a\u5728Visual Studio\u4e2d\uff0c\u83dc\u5355\u680f-&gt;\u751f\u6210-&gt;\u751f\u6210\u89e3\u51b3\u65b9\u6848\u3002</li> <li>\u5bfb\u627e\u751f\u6210\u7684\u6587\u4ef6\uff1a\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u751f\u6210\u7684DLL\u6216LIB\u6587\u4ef6\u901a\u5e38\u4f4d\u4e8e\u9879\u76ee\u76ee\u5f55\u4e0b\u7684 <code>\\x64\\Debug</code>\uff08\u5bf9\u4e8e64\u4f4d\u7cfb\u7edf\uff09\u6216 <code>\\x86\\Debug</code>\uff08\u5bf9\u4e8e32\u4f4d\u7cfb\u7edf\uff09\u4e2d\u3002\u8fd9\u4e2a\u8def\u5f84\u53ef\u80fd\u4f1a\u6839\u636e\u4f60\u7684Visual Studio\u914d\u7f6e\u548c\u9879\u76ee\u8bbe\u7f6e\u6709\u6240\u4e0d\u540c\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#linuxso","title":"Linux\u5e73\u53f0\uff08\u9700\u8981\u627e\u65f6\u95f4\u9a8c\u8bc1\uff09\uff1a\u6784\u5efaso","text":"<ol> <li> <p>\u7f16\u5199\u6e90\u4ee3\u7801\uff1a\u51c6\u5907\u597d\u60f3\u8981\u7f16\u8bd1\u6210so\u7684\u6e90\u4ee3\u7801\u3002</p> </li> <li> <p>\u7f16\u8bd1\u6e90\u4ee3\u7801\u4e3a\u4e2d\u95f4\u5bf9\u8c61\u6587\u4ef6\uff1a\u4f7f\u7528 <code>-fPIC</code>\uff08Position Independent Code\uff09\u9009\u9879\u7f16\u8bd1\u4f60\u7684\u6e90\u4ee3\u7801\u4ee5\u751f\u6210\u5bf9\u8c61\u6587\u4ef6\u3002</p> </li> </ol> Bash<pre><code>gcc -fPIC -c example.c\n</code></pre> <ol> <li>\u521b\u5efa\u5171\u4eab\u5bf9\u8c61\u5e93\uff1a\u4f7f\u7528 <code>-shared</code> \u9009\u9879\u5c06\u5bf9\u8c61\u6587\u4ef6\u94fe\u63a5\u4e3a\u5171\u4eab\u5bf9\u8c61\u5e93\u3002\u4f8b\u5982\uff1a</li> </ol> Bash<pre><code>gcc -shared -o libexample.so example.o\n</code></pre> <p><code>-fPIC</code> \u662f\u4e00\u4e2a\u7528\u4e8eGNU\u7f16\u8bd1\u5668\u96c6\u5408\uff08GCC\uff09\u7684\u7f16\u8bd1\u5668\u9009\u9879\uff0c\u4ee3\u8868 \u201cPosition Independent Code\u201d\uff0c\u5373\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\u3002\u4f7f\u7528 <code>-fPIC</code> \u9009\u9879\u7f16\u8bd1\u7684\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u8fd9\u5bf9\u4e8e\u5171\u4eab\u5e93\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u4e3a\u5171\u4eab\u5e93\u53ef\u80fd\u88ab\u591a\u4e2a\u4e0d\u540c\u7684\u7a0b\u5e8f\u52a0\u8f7d\u5230\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002</p> <p>\u8fd9\u91cc\u5728Windows\u5e73\u53f0\u7531IDE\u5e2e\u5fd9\u5b9e\u73b0\u4e86\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#linuxa","title":"Linux\u5e73\u53f0\uff1a\u6784\u5efaa","text":"<ol> <li> <p>\u7f16\u5199\u6e90\u4ee3\u7801\uff1a\u521b\u5efa\u4f60\u7684\u6e90\u6587\u4ef6\uff0c\u5982 <code>example.c</code>\u3002</p> </li> <li> <p>\u7f16\u8bd1\u6e90\u4ee3\u7801\u4e3a\u4e2d\u95f4\u5bf9\u8c61\u6587\u4ef6\uff1a\u4e0d\u9700\u8981 <code>-fPIC</code>\uff0c\u9759\u6001\u5e93\u4e0d\u9700\u8981\u4f4d\u7f6e\u65e0\u5173\u4ee3\u7801\u3002</p> </li> </ol> Bash<pre><code>gcc -c example.c\n</code></pre> <ol> <li>\u521b\u5efa\u9759\u6001\u5e93\uff1a\u4f7f\u7528 <code>ar</code> \u5de5\u5177\u6765\u4ece\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u6587\u4ef6\u521b\u5efa\u9759\u6001\u5e93\u3002</li> </ol> Bash<pre><code>ar rcs libexample.a example.o\n</code></pre> <p><code>ar</code> \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u3001\u4fee\u6539\u4ee5\u53ca\u63d0\u53d6\u9759\u6001\u5e93\u6587\u4ef6\u7684\u5de5\u5177\uff0c\u5728Unix-like\u7cfb\u7edf\u4e2d\u5e7f\u6cdb\u4f7f\u7528\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#androidsoa","title":"Android\u5e73\u53f0\uff1a\u6784\u5efaso\u3001a","text":"<ol> <li> <p>\u7f16\u5199\u6e90\u4ee3\u7801\uff1a\u521b\u5efa\u4f60\u7684\u6e90\u6587\u4ef6\uff0c\u6b64\u5904\u4e0d\u9700\u8981\u901a\u8fc7Android Studio\u521b\u5efa\uff1b</p> </li> <li> <p>\u7f16\u5199\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\uff1a\u5305\u62ec<code>Android.mk</code>\u548c<code>Application.mk</code>\u3002\u8fd9\u4e9b\u6587\u4ef6\u5b9a\u4e49\u4e86\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u53c2\u6570\uff0c\u5982\u6a21\u5757\u540d\u3001\u6e90\u6587\u4ef6\u3001\u652f\u6301\u7684\u67b6\u6784\u3001\u4f18\u5316\u7ea7\u522b\u7b49\uff1a</p> </li> <li> <p><code>Android.mk</code> \u6587\u4ef6\u5b9a\u4e49\u4e86\u5982\u4f55\u7f16\u8bd1\u4f60\u7684\u4ee3\u7801\u548c\u9700\u8981\u7684\u5e93\u3002</p> Markdown<pre><code>include $(CLEAR_VARS)\n\n# \u8bbe\u7f6e\u6784\u5efa\u6a21\u5f0f\u4e3aARM\u67b6\u6784\nLOCAL_ARM_MODE  := arm\n# \u8bbe\u7f6e\u672c\u5730\u8def\u5f84\u4e3aNDK\u9879\u76ee\u8def\u5f84\nLOCAL_PATH      := $(NDK_PROJECT_PATH)\n# \u5b9a\u4e49\u6a21\u5757\u540d\u79f0\uff0c\u751f\u6210\u7684so\u6587\u4ef6\u5c06\u4ee5\u6b64\u547d\u540d\nLOCAL_MODULE    := libexample\n# \u8bbe\u7f6e\u7f16\u8bd1\u6807\u5fd7\uff0c-Werror\u8868\u793a\u5c06\u6240\u6709\u8b66\u544a\u89c6\u4e3a\u9519\u8bef\nLOCAL_CFLAGS    := -Werror\n# \u6307\u5b9a\u6e90\u6587\u4ef6\uff0c\u8fd9\u91cc\u662fexample.cpp\nLOCAL_SRC_FILES := example.cpp\n# \u6307\u5b9a\u8981\u94fe\u63a5\u7684\u5e93\uff0c\u8fd9\u91cc\u662fAndroid\u65e5\u5fd7\u5e93\nLOCAL_LDLIBS    := -llog\n\n# \u5305\u542b\u5171\u4eab\u5e93\u7684\u6784\u5efa\u811a\u672c\uff08so\uff09\ninclude $(BUILD_SHARED_LIBRARY)\n# \u5305\u542b\u9759\u6001\u5e93\u7684\u6784\u5efa\u811a\u672c\uff08a\uff09\n# include $(BUILD_STATIC_LIBRARY)\n</code></pre> </li> <li> <p><code>Application.mk</code> \u6587\u4ef6\u5b9a\u4e49\u4e86\u5e94\u7528\u7a0b\u5e8f\u7ea7\u522b\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5982\u652f\u6301\u7684ABI\uff08\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3\uff09\u548c\u76ee\u6807\u5e73</p> Markdown<pre><code># \u8bbe\u7f6e\u5e94\u7528\u7684\u4f18\u5316\u7ea7\u522b\u4e3a\u53d1\u5e03\u7248\nAPP_OPTIM        := release\n# \u8bbe\u7f6e\u652f\u6301\u7684ABI\u7c7b\u578b\uff0call\u8868\u793a\u652f\u6301\u6240\u6709\u7c7b\u578b\nAPP_ABI          := all\n# \u8bbe\u7f6e\u76ee\u6807Android\u5e73\u53f0\u7248\u672c\nAPP_PLATFORM     := android-21\n# \u6307\u5b9a\u4f7f\u7528\u7684\u6784\u5efa\u811a\u672c\u4e3aAndroid.mk\nAPP_BUILD_SCRIPT := Android.mk\n</code></pre> </li> <li> <p>\u4e0b\u8f7d\u5e76\u914d\u7f6eAndroid NDK\uff1a\u9700\u8981\u4eceAndroid Studio\u4e0b\u8f7d\u5e76\u5b89\u88c5NDK\uff08Native Development Kit\uff09\uff1a</p> </li> <li> <p>\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff1a\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u6765\u6307\u5411NDK\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u4ee5\u4fbf\u8c03\u7528ndk-build\u5de5\u5177\uff1a</p> </li> </ol> <p>${AndroidSDK}\\ndk${Version}\\build</p> <ol> <li>\u8fd0\u884c\u7f16\u8bd1\u547d\u4ee4\uff1a\u4f7f\u7528<code>ndk-build</code>\u547d\u4ee4\u6765\u7f16\u8bd1\u4ee3\u7801\uff1a</li> </ol> Text Only<pre><code>ndk-build NDK_PROJECT_PATH=. NDK_APPLICATION_MK=Application.mk\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_7","title":"\u94fe\u63a5","text":"<p>\u4ee5\u4e0b\u662f\u5c06\u4ee5\u7f16\u8bd1\u597d\u7684Lib\u3001DLL\u3001so\u548ca\u6587\u4ef6\u4f7f\u7528\u5b9e\u4f8b\uff0c\u8981\u6ce8\u610f\uff0c\u5177\u4f53\u7684\u94fe\u63a5\u65b9\u5f0f\u53ef\u80fd\u9700\u8981\u6839\u636e\u6839\u636e\u9879\u76ee\u8fdb\u884c\u8c03\u6574\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#windows-linux","title":"Windows \u3001Linux\u5e73\u53f0","text":"<p>1\u3001\u7f16\u5199\u5934\u6587\u4ef6\uff1a</p> C<pre><code>#include &lt;example.h&gt;\n</code></pre> <p>2\u3001\u7f16\u8bd1\u65f6\u5f15\u5165\u5e93\u6587\u4ef6\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\u5b8c\u6210\uff1a</p> <ul> <li>\u4f7f\u7528CMake\uff1a\u5728<code>CMakeLists.txt</code>\u6587\u4ef6\u4e2d\u6dfb\u52a0 <code>target_link_libraries(ProjectName example)</code> \u4ee5\u94fe\u63a5\u5e93\u3002</li> <li>\u4f7f\u7528GCC/G++\uff1a\u5728\u7f16\u8bd1\u547d\u4ee4\u4e2d\u4f7f\u7528 <code>-l</code> \u9009\u9879\u6765\u94fe\u63a5\u5e93\uff0c\u5e76\u7528 <code>-L</code> \u9009\u9879\u6765\u6307\u5b9a\u5e93\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4f8b\u5982\uff1a<code>gcc -o myprogram myprogram.c -L/path/to/libfolder -lexample</code>\u3002</li> <li>IDE\u914d\u7f6e\uff1a\u6839\u636e\u6240\u4f7f\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u7684\u5177\u4f53\u6307\u5357\u8fdb\u884c\u914d\u7f6e\u3002</li> </ul> <p>\u4ee5\u4e0a\u6b65\u9aa4Lib\u3001DLL\u3001so\u548ca\u901a\u7528\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#android","title":"Android \u5e73\u53f0","text":"<p>\u5728Android\u9879\u76ee\u4e2d\uff0c\u4f7f\u7528NDK\uff08Native Development Kit\uff09\u6765\u5f15\u5165\u672c\u5730<code>.so</code>\uff08\u5171\u4eab\u5e93\uff09\u548c<code>.a</code>\uff08\u9759\u6001\u5e93\uff09\u6587\u4ef6\uff0c\u53ef\u53c2\u8003\u4f7f\u7528CMake\u7684\u5f15\u5165\u65b9\u5f0f\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#unity","title":"\u5e94\u7528\u2014\u2014Unity\u539f\u751f\u63d2\u4ef6","text":"<p>\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u5728Unity\u4e2d\u901a\u8fc7\u5f15\u5165\u5e93\u7684\u65b9\u5f0f\u5b9e\u73b0\u7b2c\u4e09\u65b9\u63d2\u4ef6\u7684\u96c6\u6210\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_8","title":"\u81ea\u5b9a\u4e49\u63a5\u53e3","text":"<p>1. \u5f15\u5165Unity\u63d2\u4ef6\u63a5\u53e3</p> <ul> <li>\u5c06Unity\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>${Editor}\\2022.2.7f1c1\\Editor\\Data\\PluginAPI</code> \u6587\u4ef6\u5939\u590d\u5236\u5230\u9879\u76ee\u8def\u5f84\u4e2d\uff0c\u4ee5\u4fbf\u4e8e\u63a5\u53e3\u8c03\u7528\u3002</li> </ul> <p>2. \u7f16\u5199\u8de8\u7aef\u6e90\u4ee3\u7801</p> <ul> <li>Unity\u5df2\u652f\u6301\u8de8\u7aef\u63a5\u53e3\uff0c\u63a5\u53e3\u7684\u5b9e\u73b0\u53c2\u8003\u4f7f\u7528\u65b9\u6cd5\u4e00\u8282\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u6e90\u4ee3\u7801\uff08C++\uff09\uff1a</li> </ul> C++<pre><code>#include \"PluginAPI/IUnityProfilerCallbacks.h\"\n\nextern \"C\" {\n  UNITY_INTERFACE_EXPORT const char* UNITY_INTERFACE_API printHello() {\n     return \"Hello Plugin!\";\n  }\n}\n</code></pre> <p>3. \u63d2\u4ef6\u7f16\u8bd1</p> <ul> <li>\u6839\u636e\u4e0a\u8ff0\u8bf4\u660e\uff0c\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210 <code>ProfilerPlugin.dll</code> \u548c <code>libsmartPerf.so</code>\u3002</li> </ul> <p>4. \u63d2\u4ef6\u5b58\u653e</p> <ul> <li> <p>\u5728Unity\u9879\u76ee\u4e2d\uff0c\u5c06\u5bf9\u5e94\u67b6\u6784\u7684 <code>ProfilerPlugin.dll</code> \u548c <code>libsmartPerf.so</code> \u6587\u4ef6\u5b58\u653e\u81f3 <code>Assets</code> \u76ee\u5f55\u3002</p> </li> <li> <p>Unity\u5f15\u64ce\u4f1a\u81ea\u52a8\u68c0\u6d4b\u63d2\u4ef6\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u4e0d\u540c\u5e73\u53f0\u53ef\u80fd\u5b58\u5728\u76f8\u540c\u7684\u6587\u4ef6\u540d\uff08Linux\u3001Android\u3001OH\uff09\uff0c\u4ed6\u4eec\u7684so\u65e0\u6cd5\u901a\u7528\uff0c\u56e0\u6b64\u6700\u4f73\u5b9e\u8df5\u662f\u6839\u636e\u5b98\u65b9\u6587\u6863\u8bf4\u660e\uff0c\u5c06\u5176\u5b58\u653e\u5728\u4e0d\u540c\u7684\u76ee\u5f55\u91cc\uff1a</p> </li> </ul> <p>5. \u63d2\u4ef6\u8bbe\u7f6e</p> <ul> <li>\u5728Unity\u8d44\u6e90\u7ba1\u7406\u5668\u4e2d\u9009\u62e9\u63d2\u4ef6\u6587\u4ef6\uff0c\u7136\u540e\u5728\u53f3\u4fa7\u7684\u63d2\u4ef6\u8bbe\u7f6e\u4e2d\u52fe\u9009\u9002\u7528\u7684\u5e73\u53f0\u5e76\u8bbe\u7f6e\u6b63\u786e\u7684\u67b6\u6784\u3002</li> </ul> <p>6. \u7f16\u5199Unity\u811a\u672c</p> <ul> <li>\u5728Hierachy\u8f83\u4e0a\u5c42\u7ec4\u4ef6\u6dfb\u52a0\u5f15\u5165\u811a\u672c\u3002\u4ee5\u4e0b\u4e3a\u811a\u672c\u793a\u4f8b\u811a\u672c\u4ee3\u7801\uff0c\u7528\u4e8e\u8c03\u7528\u63d2\u4ef6\u5e76\u8f93\u51fa\u5176\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\uff1a</li> </ul> C#<pre><code>using UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Runtime.InteropServices;\nusing UnityEngine.Rendering;\n\npublic class SmartPerfTest : MonoBehaviour\n{\n    // \u5bfc\u5165\u5728C++\u63d2\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\n    [DllImport(\"smartPerf\")]\n    private static extern IntPtr printHello();\n\n    void Start() {\n        // \u5728\u6e38\u620f\u5f00\u59cb\u65f6\u6253\u5370\u6d88\u606f\n        Debug.Log(Marshal.PtrToStringAnsi(printHello()));\n    }\n\n    void Update() {\n        // \u6bcf\u5e27\u66f4\u65b0\u65f6\u518d\u6b21\u6253\u5370\u6d88\u606f\n        Debug.Log(Marshal.PtrToStringAnsi(printHello()));\n    }\n}\n</code></pre> <p>7. \u7f16\u8bd1\u8fd0\u884c</p> <ul> <li>\u7f16\u8bd1\u5e76\u8fd0\u884cUnity\u9879\u76ee\uff0c\u68c0\u67e5\u63d2\u4ef6\u662f\u5426\u6309\u9884\u671f\u5de5\u4f5c\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E5%A4%96%E9%83%A8%E5%BA%93%E5%BC%95%E7%94%A8/#_9","title":"\u5b98\u65b9\u63a5\u53e3","text":"<p>\u81ea\u5b9a\u4e49\u63a5\u53e3\u662f\u6211\u4eec\u81ea\u5df1\u5199\u4e00\u4e2afunction\u5e76entern\u51fa\u53bb\u4f9b\u6e38\u620f\u811a\u672c\u4f7f\u7528\u3002</p> <p>\u540c\u6837\u7684\uff0c\u5f15\u64ce\u5185\u90e8\u4e5f\u6709\u81ea\u5df1\u63d0\u4f9b\u7684\u7684function\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5extern\u5230\u63d2\u4ef6\u5185\u5b9e\u73b0\u8c03\u7528\uff0c\u6bd4\u5982UnityPluginLoad\u3002</p> <p>\u5b9e\u73b0\u63d2\u4ef6\u52a0\u8f7d\u65f6\u7684\u65e5\u5fd7\u6253\u5370\uff1a</p> C++<pre><code>#include \"PluginAPI/IUnityInterfaces.h\"\n#include \"PluginAPI/IUnityLog.h\"\n\n// \u58f0\u660e\u65e5\u5fd7\u63a5\u53e3\u6307\u9488\nIUnityLog* unityLogPtr = nullptr;\n\nextern \"C\" void UNITY_INTERFACE_EXPORT UNITY_INTERFACE_API UnityPluginLoad(IUnityInterfaces* unityInterfaces)\n{\n    unityLogPtr = unityInterfaces-&gt;Get&lt;IUnityLog&gt;(); // \u83b7\u53d6\u65e5\u5fd7\u63a5\u53e3\n    if (unityLogPtr)\n    {\n        // \u6253\u5370\u201cHello Plugin\u201d\n        unityLogPtr-&gt;Log(\"Hello Plugin\");\n    }\n}\n</code></pre> <p>\u7136\u540e\uff0c\u5728\u811a\u672c\u76f4\u63a5\u5b9a\u4e49<code>[DllImport(\"smartPerf\")]</code>\u540e\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u8f7d\u63d2\u4ef6\u65f6\u6253\u5370\u201dHello Plugin\u201c\uff0c\u800c\u4e0d\u9700\u8981\u518d\u6b21\u5b9a\u4e49\u4ec0\u4e48\u51fd\u6570\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u5229\u7528\u4e86Unity\u5f15\u64ce\u7684\u5185\u5efa\u673a\u5236\uff0c\u7b80\u5316\u4e86\u63d2\u4ef6\u4e0e\u6e38\u620f\u811a\u672c\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002\u66f4\u591a\u76f8\u5173\u63a5\u53e3\u7684\u4fe1\u606f\u53ef\u4ee5\u5728Unity\u7684\u5b98\u65b9\u6587\u6863\u4e2d\u627e\u5230\u3002\u8fd9\u91cc\u4e0d\u518d\u505a\u8fdb\u4e00\u6b65\u9610\u8ff0\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/","title":"\u7b80\u6613\u65e5\u5fd7\u7cfb\u7edf","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_2","title":"\u80cc\u666f","text":"<p>2022\u5e74\u6bd5\u4e1a\u540e\uff0c\u6211\u52a0\u5165\u4e86\u9cb2\u9e4f\u56e2\u961f\uff0c\u4e13\u6ce8\u4e8e\u670d\u52a1\u5668\u7f51\u5361\u9886\u57df\u7684\u6280\u672f\u3002\u6211\u7684\u4e3b\u8981\u5de5\u4f5c\u805a\u7126\u4e8eLinux\u670d\u52a1\u5668\u7684\u7f51\u5361\u9886\u57df\uff0c\u5305\u62ec\u81ea\u5df1\u52a8\u624b\u642d\u5efa\u73af\u5883\u3001\u901a\u8fc7\u547d\u4ee4\u884c\u4e0e\u670d\u52a1\u5668\u5bf9\u8bdd\u3001\u9605\u8bfb\u590d\u6742\u7684\u7cfb\u7edf\u65e5\u5fd7\u7ed9\u6211\u7559\u4e0b\u7684\u8baf\u606f\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u50cf\u662f\u4e00\u4f4d\u4fa6\u63a2\uff0c\u6211\u9700\u8981\u7528\u86db\u4e1d\u9a6c\u8ff9\u89e3\u51b3\u4e00\u4e2a\u53c8\u4e00\u4e2a\u6311\u6218\uff0c\u786e\u4fdd\u7f51\u5361\u6b63\u5e38\u8fd0\u884c\uff0c\u6ee1\u8db3\u5ba2\u6237\u548c\u516c\u53f8\u7684\u4e1a\u52a1\u9700\u6c42\u3002</p> <p>2023\u5e74\uff0c\u56e0\u4e2a\u4eba\u539f\u56e0\uff0c\u6211\u79bb\u5f00\u4e86\u9cb2\u9e4f\u56e2\u961f\uff0c\u8f6c\u81f3\u7ec8\u7aef\u6e38\u620f\u4e2d\u5fc3\u90e8\u95e8\uff0c\u6d89\u8db3\u6211\u6700\u559c\u7231\u7684\u6e38\u620f\u9886\u57df\u3002\u9886\u5bfc\u4e86\u89e3\u5230\u6211\u7684\u5174\u8da3\uff0c\u7ed9\u6211\u5206\u914d\u4e86Unity\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u81ea\u6b64\uff0c\u6211\u5f00\u59cb\u8d1f\u8d23Unity\u6027\u80fd\u5206\u6790\u76f8\u5173\u7684\u9879\u76ee\u3002\u4e3a\u4e86\u7406\u89e3 Unity \u539f\u751f Profiler \u8fd0\u884c\u7684\u539f\u7406\uff0c\u6211\u52a0\u4e86\u6570\u767e\u6570\u5343\u884c\u6253\u5370\uff0c\u7f16\u8bd1\u4e86\u4e00\u6b21\u53c8\u4e00\u6b21\u3002\u65e5\u5fd7\u5bf9\u4e8e\u7406\u89e3\u7a0b\u5e8f\u7684\u884c\u4e3a\u3001\u4f18\u5316\u6027\u80fd\u3001\u4ee5\u53ca\u8c03\u8bd5\u6e38\u620f\u4e2d\u7684\u9519\u8bef\u81f3\u5173\u91cd\u8981\u3002\u901a\u8fc7\u8be6\u7ec6\u7684\u65e5\u5fd7\u5206\u6790\uff0c\u6211\u80fd\u591f\u8ffd\u8e2a\u5230Unity\u539f\u751fProfiler\u673a\u5236\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\uff0c\u4fdd\u8bc1\u9ad8\u8d28\u91cf\u7684\u5b8c\u6210\u4e86Unity\u5728\u9e3f\u8499Profiler\u4e0a\u7684\u9002\u914d\u3002</p> <p>\u65e5\u5fd7\u7cfb\u7edf\u7801\u519c\u5de5\u4f5c\u4e2d\u4e0d\u53ef\u6216\u7f3a\u7684\u5de5\u5177\u3002\u5b83\u5c31\u50cf\u4e00\u9762\u955c\u5b50\uff0c\u53cd\u6620\u51fa\u7cfb\u7edf\u8fd0\u884c\u7684\u6bcf\u4e00\u4e2a\u7ec6\u8282\u3002\u5728\u6211\u7684\u5f53\u524d\u5de5\u4f5c\u4e2d\uff0c\u6211\u6b63\u7740\u624b\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5fd7\u7cfb\u7edf\uff0c\u4ee5\u76d1\u63a7\u67d0\u4e9b\u6570\u636e\u7684\u52a8\u6001\u53d8\u5316\u3002\u8fd9\u4e2a\u7ecf\u9a8c\u8ba9\u6211\u5bf9\u65e5\u5fd7\u7cfb\u7edf\u6709\u4e86\u521d\u6b65\u7684\u638c\u63e1\uff0c\u6211\u5bf9\u6b64\u8fdb\u884c\u4e86\u603b\u7ed3\uff0c\u4fbf\u4e8e\u672a\u6765\u7684\u53c2\u8003\u548c\u4f7f\u7528\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_3","title":"\u751f\u6210\u65e5\u5fd7","text":"<p>\u5728\u4e0d\u8003\u8651\u591a\u7ebf\u7a0b\u3001\u5e76\u53d1\u3001\u9501\u548c\u9519\u8bef\u5904\u7406\u7b49\u590d\u6742\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4\u5b9e\u73b0\u4e00\u4e2a\u57fa\u672c\u7684\u65e5\u5fd7\u7cfb\u7edf\uff1a</p> <ol> <li> <p>\u5b9e\u73b0\u65f6\u95f4\u6233</p> </li> <li> <p>\u751f\u6210\u65e5\u5fd7\u5e76\u52a0\u5165\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d</p> </li> </ol> <p>\u65e5\u5fd7\u7cfb\u7edf\u901a\u5e38\u9700\u8981\u7cbe\u786e\u5230\u5fae\u79d2\u7ea7\u522b\u3002\u5728C++\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>&lt;chrono&gt;</code> \u548c <code>&lt;iomanip&gt;</code> \u5934\u6587\u4ef6\u63d0\u4f9b\u7684\u529f\u80fd\u6765\u5b9e\u73b0\u7cbe\u786e\u65f6\u95f4\u6233\u3002</p> <ol> <li>\u9996\u5148\uff0c\u9700\u8981\u5305\u542b\u5fc5\u8981\u7684\u5934\u6587\u4ef6\uff1a</li> </ol> C++<pre><code>#include &lt;chrono&gt;   // \u7cfb\u7edf\u65f6\u95f4\n#include &lt;iomanip&gt;  // \u683c\u5f0f\u5316\u8f93\u51fa\n#include &lt;fstream&gt;  // \u6587\u4ef6\u64cd\u4f5c\n</code></pre> <p>\u63a5\u7740\uff0c\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u83b7\u53d6\u548c\u683c\u5f0f\u5316\u65f6\u95f4\u6233\uff1a</p> <ul> <li> <p>\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9\uff1a</p> C++<pre><code>auto now = std::chrono::system_clock::now();\n</code></pre> </li> <li> <p>\u8f6c\u6362\u65f6\u95f4\u70b9\u4e3a <code>time_t</code> \u7c7b\u578b\uff0c\u8868\u793a\u81ea 1970 \u5e74 1 \u6708 1 \u65e5\u4ee5\u6765\u7684\u79d2\u6570\uff1a</p> C++<pre><code>auto now_as_time_t = std::chrono::system_clock::to_time_t(now);\n</code></pre> </li> <li> <p>\u8ba1\u7b97\u5fae\u79d2\u6570\u3002</p> C++<pre><code>auto current_microseconds = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(now.time_since_epoch()) % 1000000;\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\uff1a</p> <ol> <li>\u8ba1\u7b97\u603b\u5fae\u5999\u6570</li> <li>\u5bf91000000\u53d6\u6a21</li> </ol> <p>\u6700\u540e\u5f97\u5230\u5f53\u524d\u79d2\u7684\u5fae\u79d2\u90e8\u5206\u3002</p> </li> <li> <p>\u683c\u5f0f\u5316\u548c\u5199\u5165\u65f6\u95f4\u6233\u3002</p> C++<pre><code>file &lt;&lt; std::put_time(std::localtime(&amp;now_as_time_t), \"%Y-%m-%d %H:%M:%S\");\nfile &lt;&lt; '.' &lt;&lt; std::setfill('0') &lt;&lt; std::setw(6) &lt;&lt; current_microseconds.count();\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86\uff1a</p> <ol> <li>\u4f7f\u7528 <code>std::localtime</code> \u5c06 <code>time_t</code> \u7c7b\u578b\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u672c\u5730\u65f6\u95f4\u3002</li> <li>\u4f7f\u7528<code>std::put_time</code> \u5c06\u672c\u5730\u65f6\u95f4\u8f6c\u6362\u4e3a\u201c\u5e74-\u6708-\u65e5 \u65f6:\u5206:\u79d2\u201d\u7684\u683c\u5f0f\u3002</li> <li>\u6dfb\u52a0\u5fae\u79d2\u90e8\u5206\u3002<ol> <li><code>std::setfill('0')</code> \u8868\u793a\u4e0d\u8db3\u90e8\u5206\u75280\u586b\u5145\u3002</li> <li><code>std::setw(6)</code> \u8bbe\u7f6e\u5b57\u6bb5\u5bbd\u5ea6\u4e3a6</li> <li><code>current_microseconds.count()</code> \u83b7\u53d6\u5fae\u79d2\u6570\u3002</li> </ol> </li> <li>\u540e\u7eed\u5904\u7406</li> </ol> </li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_4","title":"\u7b80\u6613\u4ee3\u7801","text":"C++<pre><code>#include &lt;chrono&gt;   // \u7cfb\u7edf\u65f6\u95f4\n#include &lt;iomanip&gt;  // \u683c\u5f0f\u5316\u8f93\u51fa\n#include &lt;fstream&gt;  // \u4e0b\u9762\u54e5\u51e0\u4e2a\u4e0d\u7528\u591a\u8bf4\u4e86\u5427\n#include &lt;iostream&gt; \n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nbool appendToCSV(const std::string&amp; filename, const std::vector&lt;std::string&gt;&amp; row)\n{\n    std::ofstream file(filename, std::ios::app);\n    if (!file)\n    {\n        std::cerr &lt;&lt; \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6 \" &lt;&lt; filename &lt;&lt; std::endl;\n        return false;\n    }\n\n    auto now = std::chrono::system_clock::now();\n    auto now_as_time_t = std::chrono::system_clock::to_time_t(now);\n    auto current_microseconds = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(\n        now.time_since_epoch()) % 1000000;\n\n    file &lt;&lt; std::put_time(std::localtime(&amp;now_as_time_t), \"%Y-%m-%d %H:%M:%S\");\n    file &lt;&lt; '.' &lt;&lt; std::setfill('0') &lt;&lt; std::setw(6) &lt;&lt; current_microseconds.count();\n    file &lt;&lt; \",\";\n\n    for (size_t i = 0; i &lt; row.size(); ++i)\n    {\n        file &lt;&lt; row[i];\n        if (i &lt; row.size() - 1)\n            file &lt;&lt; \",\";\n    }\n    file &lt;&lt; \"\\n\";\n\n    if (!file.good())\n    {\n        std::cerr &lt;&lt; \"\u5199\u5165CSV\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef \" &lt;&lt; filename &lt;&lt; std::endl;\n        return false;\n    }\n\n    return true;\n}\n\nvoid logFunc()\n{\n    //...\u4e1a\u52a1\u90e8\u5206\uff0c\u5f97\u5230\u6253\u5370\u7684\u884c\u6570\u636erowdata\uff0c\u5982rowdata = \"This is a row log\"\n    appendToCSV(\"logPath\", { \"Log:\", rowdata });\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_5","title":"\u9501","text":"<p>\u9501\uff08Lock\uff09\u662f\u4e00\u79cd\u540c\u6b65\u673a\u5236\uff0c\u7528\u4e8e\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u4ee5\u9632\u6b62\u6570\u636e\u7684\u51b2\u7a81\u548c\u4e0d\u4e00\u81f4\u6027\u3002\u9501\u4e5f\u662f\u5728\u627e\u5de5\u4f5c\u7684\u65f6\u5019\u7ecf\u5e38\u4f1a\u88ab\u5199\u8fdb\u8981\u6c42\u91cc\u7684\u4e00\u70b9\u3002\u65e0\u8bba\u662f\u5728\u65e5\u5e38\u5e94\u7528\uff0c\u8fd8\u662f\u5728\u64cd\u4f5c\u7cfb\u7edf\uff0c\u51e0\u4e4e\u904d\u5730\u662f\u9501\u3002</p> <p>\u8bfb\u4e66\u65f6\u770b\u64cd\u4f5c\u7cfb\u7edf\u65f6\uff0c\u5bf9\u9501\u53ef\u80fd\u4e0d\u4ee5\u4e3a\u610f\uff0c\u6ca1\u6709\u6982\u5ff5\uff0c\u4f46\u9501\u771f\u7684\u662f\u5728\u5f00\u53d1\u7684\u65f6\u5019\u5341\u5206\u91cd\u8981\u7684\u4e00\u79cd\u5e94\u7528\uff0c\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u5c24\u4e3a\u91cd\u8981\uff0c\u56e0\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u540c\u65f6\u5c1d\u8bd5\u4fee\u6539\u540c\u4e00\u4e2a\u8d44\u6e90\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2apilot.py\u7684\u4ee3\u7801\uff0c\u8be5\u811a\u672c\u80fd\u591f\u5b9e\u65f6\u76d1\u63a7\u5e76\u8bb0\u5f55\u65e5\u5fd7\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u5e76\u4e14\u52a8\u6001\u5730\u751f\u6210\u56fe\u8868\uff08\u89c1\u53e6\u4e00\u7bc7\u65e5\u5fd7\uff1a\u5f85\u5b8c\u6210\uff09\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8fd9\u4e2a\u65e5\u5fd7\u6587\u4ef6\u50cf\u662f\u62d4\u6cb3\u7684\u90a3\u6839\u7ef3\u5b50\u4e00\u6837\uff0c\u4e00\u8fb9\u662f\u65e5\u5fd7\u7cfb\u7edf\u5728\u4e0d\u505c\u7684\u5199\uff0c\u800c\u53e6\u4e00\u8fb9\u662f\u56fe\u8868\u751f\u6210\u6a21\u5757\u5728\u4e0d\u505c\u7684\u8bfb\uff0c\u8fd9\u79cd\u8bfb\u5199\u64cd\u4f5c\u7684\u5e76\u53d1\u53ef\u80fd\u5bfc\u81f4\u6570\u636e\u51b2\u7a81\uff0c\u6bd4\u5982\u5728\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u9047\u5230\u53ea\u5199\u4e86\u4e00\u534a\u7684\u6570\u636e\u884c\uff0c\u4ece\u800c\u5f97\u5230\u4e0d\u5b8c\u6574\u7684\u4fe1\u606f\u3002</p> <p>\u6211\u6700\u8ba8\u538c\u4e24\u79cd\u4eba\uff0c\u4e00\u79cd\u662f\u8bf4\u8bdd\u53ea\u8bf4\u4e00\u534a\u7684\u4eba       \u2014\u2014\u4e2d\u56fd\u4e92\u8054\u7f51</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5199\u6570\u636e\u7684\u65f6\u5019\u52a0\u628a\u9501\uff0c\u5728\u5199\u5b8c\u4e00\u6574\u884c\u6570\u636e\u540e\u518d\u91ca\u653e\u9501\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u786e\u4fdd\u56fe\u8868\u8bfb\u53d6\u65f6\u83b7\u53d6\u7684\u662f\u5b8c\u6574\u3001\u4e00\u81f4\u7684\u6570\u636e\u3002</p> <p>\u5b9e\u73b0\u8fd9\u4e00\u673a\u5236\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5f15\u5165\u5fc5\u8981\u7684\u5934\u6587\u4ef6\uff1a</li> </ol> C++<pre><code>#include &lt;mutex&gt;\n</code></pre> <ol> <li>\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7528\u4e8e\u9501\u5b9a\uff1a</li> </ol> C++<pre><code>std::mutex fileMutex;\n</code></pre> <ol> <li>\u4f7f\u7528 <code>std::lock_guard</code> \u5728\u51fd\u6570\u4e2d\u6dfb\u52a0\u9501\uff1a</li> </ol> C++<pre><code>bool appendToCSV(const std::string&amp; filename, const std::vector&lt;std::string&gt;&amp; row)\n{\n    // \u9501\u5b9a\u4e92\u65a5\u91cf\n    std::lock_guard&lt;std::mutex&gt; lock(fileMutex);\n\n    // ... \u5176\u4f59\u4ee3\u7801 ...\n\n    // lock_guard \u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u9501\u81ea\u52a8\u91ca\u653e\n}\n</code></pre> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u65e2\u4fdd\u8bc1\u4e86\u6570\u636e\u5199\u5165\u7684\u5b8c\u6574\u6027\uff0c\u53c8\u907f\u514d\u4e86\u6570\u636e\u8bfb\u5199\u8fc7\u7a0b\u4e2d\u7684\u51b2\u7a81\uff0c\u4ece\u800c\u786e\u4fdd\u4e86\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u548c\u6570\u636e\u7684\u51c6\u786e\u6027\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_6","title":"\u9501\u7684\u7c7b\u578b\u548c\u7279\u6027","text":"<ol> <li> <p>\u4e92\u65a5\u9501\uff08Mutex\uff09\uff1a</p> </li> <li> <p>\u7528\u4e8e\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u3002</p> </li> <li>\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u9501\uff0c\u5176\u4ed6\u8bd5\u56fe\u8bbf\u95ee\u8be5\u8d44\u6e90\u7684\u7ebf\u7a0b\u5c06\u4f1a\u963b\u585e\uff0c\u76f4\u5230\u9501\u88ab\u91ca\u653e\u3002</li> </ol> C++<pre><code>//\u4f7f\u7528\u4e92\u65a5\u9501\u6765\u786e\u4fdd\u5728\u8fdb\u884c\u4ea4\u6613\u65f6\u8d26\u6237\u4f59\u989d\u7684\u5b89\u5168\n#include &lt;mutex&gt;\n\nclass BankAccount {\nprivate:\n    int balance;\n    std::mutex mutex;\n\npublic:\n    void deposit(int amount) {\n        mutex.lock();\n        balance += amount;\n        mutex.unlock();\n    }\n\n    void withdraw(int amount) {\n        mutex.lock();\n        if (balance &gt;= amount) {\n            balance -= amount;\n        }\n        mutex.unlock();\n    }\n};\n</code></pre> <ol> <li> <p>\u8bfb\u5199\u9501\uff08Read-Write Lock\uff09\uff1a</p> </li> <li> <p>\u5141\u8bb8\u591a\u4e2a\u8bfb\u64cd\u4f5c\u540c\u65f6\u8fdb\u884c\uff0c\u4f46\u5199\u64cd\u4f5c\u662f\u4e92\u65a5\u7684\u3002</p> </li> <li>\u5f53\u5199\u9501\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4e0d\u80fd\u8bfb\u53d6\u6216\u5199\u5165\u3002</li> </ol> C++<pre><code>//\u4e00\u4e2a\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u5176\u4e2d\u6570\u636e\u53ef\u4ee5\u7531\u591a\u4e2a\u7528\u6237\u540c\u65f6\u8bfb\u53d6\uff0c\u4f46\u53ea\u80fd\u7531\u4e00\u4e2a\u7528\u6237\u8fdb\u884c\u5199\u64cd\u4f5c\u3002\n#include &lt;shared_mutex&gt;\n\nclass Database {\nprivate:\n    std::shared_mutex rwLock;\n    // \u6570\u636e\u6210\u5458...\n\npublic:\n    void readData() {\n        std::shared_lock&lt;std::shared_mutex&gt; lock(rwLock);\n        // \u6267\u884c\u8bfb\u53d6\u64cd\u4f5c...\n    }\n\n    void writeData() {\n        std::unique_lock&lt;std::shared_mutex&gt; lock(rwLock);\n        // \u6267\u884c\u5199\u5165\u64cd\u4f5c...\n    }\n};\n</code></pre> <ol> <li> <p>\u81ea\u65cb\u9501\uff08Spinlock\uff09\uff1a</p> </li> <li> <p>\u5f53\u9501\u4e0d\u53ef\u7528\u65f6\uff0c\u7ebf\u7a0b\u4f1a\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u4e0d\u65ad\u68c0\u67e5\u9501\u662f\u5426\u53ef\u7528\uff0c\u800c\u4e0d\u662f\u8fdb\u5165\u4f11\u7720\u3002</p> </li> <li>\u9002\u7528\u4e8e\u9501\u6301\u6709\u65f6\u95f4\u77ed\u4e14\u7ebf\u7a0b\u4e0d\u5e0c\u671b\u5728\u91cd\u65b0\u8c03\u5ea6\u4e0a\u82b1\u8d39\u592a\u591a\u65f6\u95f4\u7684\u573a\u666f\u3002</li> </ol> C++<pre><code>//\u9700\u8981\u9891\u7e41\u4f46\u5feb\u901f\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u573a\u666f\uff0c\u5982\u8ba1\u6570\u5668\u66f4\u65b0\n#include &lt;atomic&gt;\n\nclass Counter {\nprivate:\n    std::atomic_flag lock = ATOMIC_FLAG_INIT;\n    int value;\n\npublic:\n    void increment() {\n        while (lock.test_and_set(std::memory_order_acquire)) {\n            // \u7b49\u5f85\u9501\u91ca\u653e\uff0c\u4e0d\u91ca\u653eCPU\n        }\n        value++;\n        lock.clear(std::memory_order_release);\n    }\n};\n</code></pre> <ol> <li> <p>\u9012\u5f52\u9501\uff08Recursive Lock\uff09\uff1a</p> </li> <li> <p>\u5141\u8bb8\u540c\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u83b7\u53d6\u540c\u4e00\u9501\u3002</p> </li> <li>\u89e3\u51b3\u4e86\u9012\u5f52\u51fd\u6570\u6216\u5faa\u73af\u4e2d\u91cd\u590d\u8bf7\u6c42\u9501\u7684\u95ee\u9898\u3002</li> </ol> C++<pre><code>//\u9700\u8981\u5728\u6bcf\u4e2a\u9012\u5f52\u5c42\u6b21\u4e0a\u83b7\u53d6\u76f8\u540c\u7684\u9501\u3002\n#include &lt;mutex&gt;\n\nstd::recursive_mutex mutex;\n\nvoid recursiveFunction(int n) {\n    if (n &lt;= 0) return;\n    mutex.lock();\n    // \u6267\u884c\u67d0\u4e9b\u64cd\u4f5c...\n    recursiveFunction(n - 1);\n    mutex.unlock();\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_7","title":"\u9501\u7684\u4f7f\u7528\u539f\u5219","text":""},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#1","title":"1. \u907f\u514d\u6b7b\u9501","text":"<p>\u4ec0\u4e48\u662f\u6b7b\u9501\uff1f \u6b7b\u9501\u662f\u5e76\u53d1\u7f16\u7a0b\u4e2d\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u53d1\u751f\u5728\u4e24\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u6c38\u4e45\u5730\u7b49\u5f85\u5bf9\u65b9\u6301\u6709\u7684\u8d44\u6e90\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u4e0b\u56db\u4e2a\u6761\u4ef6\u540c\u65f6\u6ee1\u8db3\u65f6\uff1a</p> <ul> <li>\u4e92\u65a5\u6761\u4ef6\uff1a\u8d44\u6e90\u4e0d\u80fd\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u4f7f\u7528\u3002</li> <li>\u6301\u6709\u5e76\u7b49\u5f85\u6761\u4ef6\uff1a\u7ebf\u7a0b\u6301\u6709\u81f3\u5c11\u4e00\u4e2a\u8d44\u6e90\uff0c\u5e76\u7b49\u5f85\u83b7\u53d6\u989d\u5916\u7684\u8d44\u6e90\u3002</li> <li>\u4e0d\u5265\u593a\u6761\u4ef6\uff1a\u8d44\u6e90\u53ea\u80fd\u88ab\u6301\u6709\u5b83\u7684\u7ebf\u7a0b\u91ca\u653e\u3002</li> <li>\u5faa\u73af\u7b49\u5f85\u6761\u4ef6\uff1a\u5b58\u5728\u4e00\u79cd\u7ebf\u7a0b\u95f4\u7684\u5faa\u73af\u7b49\u5f85\u8d44\u6e90\u5173\u7cfb\u3002</li> </ul> <p>\u5982\u4f55\u907f\u514d\u6b7b\u9501\uff1f</p> <ul> <li>\u9501\u7684\u987a\u5e8f\uff1a\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u8bf7\u6c42\u9501\u3002\u8fd9\u6837\u53ef\u4ee5\u6253\u7834\u5faa\u73af\u7b49\u5f85\u7684\u6761\u4ef6\u3002</li> <li>\u8d44\u6e90\u5206\u914d\u56fe\uff1a\u5206\u6790\u548c\u8bbe\u8ba1\u8d44\u6e90\u5206\u914d\u56fe\uff0c\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u5faa\u73af\u7b49\u5f85\u3002</li> <li>\u8d85\u65f6\u673a\u5236\uff1a\u7ed9\u7ebf\u7a0b\u7b49\u5f85\u9501\u7684\u64cd\u4f5c\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u7ebf\u7a0b\u91ca\u653e\u5df2\u6301\u6709\u7684\u6240\u6709\u8d44\u6e90\u5e76\u91cd\u8bd5\u3002</li> <li>\u9501\u7684\u5206\u7ea7\uff1a\u5206\u5c42\u6b21\u5730\u5206\u914d\u9501\uff0c\u5f3a\u5236\u7ebf\u7a0b\u6309\u7167\u5c42\u6b21\u83b7\u53d6\u9501\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#2","title":"2. \u907f\u514d\u4f18\u5148\u7ea7\u53cd\u8f6c","text":"<p>\u4ec0\u4e48\u662f\u4f18\u5148\u7ea7\u53cd\u8f6c\uff1f \u4f18\u5148\u7ea7\u53cd\u8f6c\u53d1\u751f\u5728\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u6301\u6709\u5bf9\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u5fc5\u987b\u7684\u8d44\u6e90\u65f6\u3002\u8fd9\u4f1a\u5bfc\u81f4\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u88ab\u8feb\u7b49\u5f85\uff0c\u800c\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u56e0\u4e3a\u67d0\u4e9b\u539f\u56e0\uff08\u6bd4\u5982CPU\u65f6\u95f4\u7247\u8f6e\u8f6c\u5230\u5176\u4ed6\u7ebf\u7a0b\uff09\u4e0d\u80fd\u91ca\u653e\u8d44\u6e90\u3002</p> <p>\u5982\u4f55\u907f\u514d\u4f18\u5148\u7ea7\u53cd\u8f6c\uff1f</p> <ul> <li>\u4f18\u5148\u7ea7\u7ee7\u627f\uff1a\u5f53\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u7b49\u5f85\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u6301\u6709\u7684\u9501\u65f6\uff0c\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u4e34\u65f6\u63d0\u5347\u4e3a\u9ad8\u4f18\u5148\u7ea7\u3002</li> <li>\u4f18\u5148\u7ea7\u5929\u82b1\u677f\u534f\u8bae\uff1a\u9884\u5148\u8bbe\u5b9a\u7cfb\u7edf\u4e2d\u6240\u6709\u9501\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\uff08\u5929\u82b1\u677f\uff09\uff0c\u5f53\u7ebf\u7a0b\u83b7\u53d6\u4efb\u4f55\u9501\u65f6\uff0c\u5b83\u7684\u4f18\u5148\u7ea7\u63d0\u5347\u5230\u8be5\u9501\u7684\u5929\u82b1\u677f\u4f18\u5148\u7ea7\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#3","title":"3. \u8c28\u614e\u4f7f\u7528\u9501","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u8c28\u614e\u4f7f\u7528\u9501\uff1f \u867d\u7136\u9501\u662f\u540c\u6b65\u591a\u7ebf\u7a0b\u7684\u91cd\u8981\u673a\u5236\uff0c\u4f46\u8fc7\u5ea6\u4f7f\u7528\u9501\u53ef\u80fd\u5bfc\u81f4\u591a\u79cd\u95ee\u9898\uff0c\u5982\u6027\u80fd\u4e0b\u964d\u3001\u54cd\u5e94\u6027\u5dee\uff0c\u751a\u81f3\u6b7b\u9501\u3002</p> <p>\u5982\u4f55\u8c28\u614e\u4f7f\u7528\u9501\uff1f</p> <ul> <li>\u6700\u5c0f\u5316\u9501\u7684\u8303\u56f4\uff1a\u53ea\u5728\u5fc5\u987b\u7684\u6700\u5c0f\u4ee3\u7801\u5757\u4e0a\u4f7f\u7528\u9501\u3002</li> <li>\u907f\u514d\u957f\u65f6\u95f4\u6301\u6709\u9501\uff1a\u786e\u4fdd\u4e0d\u5728\u6301\u6709\u9501\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u8017\u65f6\u64cd\u4f5c\u3002</li> <li>\u8bfb\u5199\u9501\u66ff\u4ee3\u4e92\u65a5\u9501\uff1a\u5f53\u9002\u7528\u65f6\uff0c\u4f7f\u7528\u8bfb\u5199\u9501\u4ee3\u66ff\u4e92\u65a5\u9501\uff0c\u5141\u8bb8\u66f4\u9ad8\u7684\u5e76\u53d1\u8bfb\u53d6\u3002</li> <li>\u8003\u8651\u4f7f\u7528\u65e0\u9501\u7f16\u7a0b\u6280\u672f\uff1a\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u548c\u65e0\u9501\u6570\u636e\u7ed3\u6784\u3002</li> </ul> <p>\u9075\u5faa\u8fd9\u4e9b\u539f\u5219\u6709\u52a9\u4e8e\u6709\u6548\u7ba1\u7406\u7ebf\u7a0b\u95f4\u7684\u4e92\u52a8\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u7684\u7a33\u5b9a\u6027\u548c\u6027\u80fd\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_8","title":"\u591a\u7ebf\u7a0b","text":"<p>\u6253\u5370\u65e5\u5fd7\u662f\u4e00\u4e2a\u6027\u80fd\u654f\u611f\u7684\u64cd\u4f5c\uff0c\u5728\u591a\u7ebf\u7a0b\u7684\u5e94\u7528\u4e2d\uff0c\u5bb9\u6613\u5bfc\u81f4\u6253\u5370\u987a\u5e8f\u51fa\u73b0\u9519\u4e71\uff0c\u5728\u5355\u7ebf\u7a0b\u5219\u5bb9\u6613\u51fa\u73b0\u963b\u585e\u7684\u60c5\u51b5\u3002</p> <p>\u663e\u7136\uff0c\u770b\u5230\u8fd9\u4e2a\u4e3b\u9898\u5c31\u77e5\u9053\u4e86\uff0c\u6211\u7684\u65e5\u5fd7\u6253\u5370\u53c8\u51fa\u73b0\u4e86\u95ee\u9898\uff1a</p> Bash<pre><code>2023-12-27 09:23:14.376537,Frame: 282\n2023-12-27 09:23:14.382651,Count,Batches Count,29\n2023-12-27 09:23:14.383016,Frame: 283\n2023-12-27 09:23:14.383316,Count,Triangles Count,83942  # \u672c\u6765\u5e94\u8be5\u5728\u4e0a\u9762\n2023-12-27 09:23:14.385199,Count,Batches Count,29\n2023-12-27 09:23:14.385457,Count,Triangles Count,83942\n</code></pre> <p>\u4e3a\u4e86\u89e3\u51b3\u987a\u5e8f\u540c\u6b65\u7684\u95ee\u9898\uff0c\u8fd9\u91cc\u901a\u8fc7\u5f15\u5165\u4e86\u4e00\u4e2a\u57fa\u4e8e\u7ebf\u7a0b\u5b89\u5168\u961f\u5217\u7684\u5355\u4e00\u65e5\u5fd7\u5904\u7406\u7ebf\u7a0b\uff0c\u786e\u4fdd\u65e5\u5fd7\u8bb0\u5f55\u7684\u6709\u5e8f\u6027\u548c\u7ebf\u7a0b\u5b89\u5168\u6027\u3002</p> <ul> <li>\u7ebf\u7a0b\u5b89\u5168\uff1a\u7ebf\u7a0b\u5b89\u5168\u662f\u6307\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\uff0c\u4e00\u4e2a\u65b9\u6cd5\u6216\u7c7b\u7684\u5b9e\u4f8b\u80fd\u591f\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u800c\u4e0d\u5f15\u53d1\u4efb\u4f55\u95ee\u9898\uff0c\u5982\u6570\u636e\u635f\u574f\u6216\u4e0d\u4e00\u81f4\u6027\u3002\u7ebf\u7a0b\u5b89\u5168\u901a\u5e38\u901a\u8fc7\u4f7f\u7528\u9501\uff08\u5982\u4e92\u65a5\u9501\uff09\u6216\u5176\u4ed6\u540c\u6b65\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u786e\u4fdd\u4e00\u6b21\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6267\u884c\u67d0\u4e9b\u5173\u952e\u64cd\u4f5c\u3002</li> <li>\u5355\u4e00\u65e5\u5fd7\u7ebf\u7a0b\uff1a\u8fd9\u662f\u6307\u6240\u6709\u7684\u65e5\u5fd7\u64cd\u4f5c\u90fd\u7531\u4e00\u4e2a\u4e13\u95e8\u7684\u7ebf\u7a0b\uff08\u65e5\u5fd7\u7ebf\u7a0b\uff09\u6765\u5904\u7406\uff0c\u800c\u4e0d\u662f\u7531\u4ea7\u751f\u65e5\u5fd7\u7684\u5404\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u76f4\u63a5\u5904\u7406\u3002\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e2d\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u4e0d\u4f1a\u76f4\u63a5\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\u6216\u6267\u884c\u5176\u4ed6\u65e5\u5fd7\u8bb0\u5f55\u64cd\u4f5c\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u5c06\u65e5\u5fd7\u6d88\u606f\u53d1\u9001\u7ed9\u65e5\u5fd7\u7ebf\u7a0b\u3002</li> </ul> <p>\u4fee\u6539\u539f\u6709\u4ee3\u7801\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u8981\u6c42\uff1a</p> <ol> <li>\u7ebf\u7a0b\u5b89\u5168\u961f\u5217\u7684\u5b9e\u73b0</li> </ol> <p>\u5728\u4ee3\u7801\u7684\u9876\u90e8\u6dfb\u52a0\u7ebf\u7a0b\u5b89\u5168\u961f\u5217\u7684\u5b9e\u73b0\uff1a</p> C++<pre><code>#include &lt;queue&gt;\n#include &lt;mutex&gt;\n#include &lt;condition_variable&gt;\n\ntemplate &lt;typename T&gt;\nclass ThreadSafeQueue {\nprivate:\n    std::queue&lt;T&gt; queue;\n    std::mutex mutex;\n    std::condition_variable cond;\n\npublic:\n    void push(T value) {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex);\n        queue.push(std::move(value));\n        cond.notify_one();\n    }\n\n    T pop() {\n        std::unique_lock&lt;std::mutex&gt; lock(mutex);\n        cond.wait(lock, [this]{ return !queue.empty(); });\n        T value = std::move(queue.front());\n        queue.pop();\n        return value;\n    }\n\n    bool empty() {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex);\n        return queue.empty();\n    }\n};\n</code></pre> <ol> <li>\u521b\u5efa\u65e5\u5fd7\u5904\u7406\u7ebf\u7a0b</li> </ol> <p>\u5728\u5168\u5c40\u53d8\u91cf\u533a\u57df\u6dfb\u52a0\u65e5\u5fd7\u961f\u5217\u548c\u65e5\u5fd7\u7ebf\u7a0b\u7684\u5b9a\u4e49\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65e5\u5fd7\u5904\u7406\u7ebf\u7a0b\u51fd\u6570\uff1a</p> C++<pre><code>ThreadSafeQueue&lt;std::vector&lt;std::string&gt;&gt; logQueue;\nstd::thread logThread;\nbool logThreadRunning = true;\n\nvoid logThreadFunction() {\n    std::ofstream file(FILENAME, std::ios::app);\n    if (!file) {\n        std::cerr &lt;&lt; \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6 \" &lt;&lt; FILENAME &lt;&lt; std::endl;\n        return;\n    }\n\n    while (logThreadRunning || !logQueue.empty()) {\n        if (!logQueue.empty()) {\n            auto logMessage = logQueue.pop();\n\n            // \u4f7f\u7528\u539f\u6709\u7684appendToCSV\u903b\u8f91\n            auto now = std::chrono::system_clock::now();\n            auto now_as_time_t = std::chrono::system_clock::to_time_t(now);\n            auto current_microseconds = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(\n                now.time_since_epoch()) % 1000000;\n\n            file &lt;&lt; std::put_time(std::localtime(&amp;now_as_time_t), \"%Y-%m-%d %H:%M:%S\");\n            file &lt;&lt; '.' &lt;&lt; std::setfill('0') &lt;&lt; std::setw(6) &lt;&lt; current_microseconds.count();\n            file &lt;&lt; \",\";\n\n            for (size_t i = 0; i &lt; logMessage.size(); ++i) {\n                file &lt;&lt; logMessage[i];\n                if (i &lt; logMessage.size() - 1)\n                    file &lt;&lt; \",\";\n            }\n            file &lt;&lt; \"\\n\";\n\n            if (!file.good()) {\n                std::cerr &lt;&lt; \"\u5199\u5165CSV\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef \" &lt;&lt; FILENAME &lt;&lt; std::endl;\n            }\n\n            file.flush();\n        }\n    }\n    file.close();\n}\n</code></pre> <ol> <li>\u4fee\u6539 <code>appendToCSV</code> \u51fd\u6570</li> </ol> <p>\u5c06 <code>appendToCSV</code> \u51fd\u6570\u4fee\u6539\u4e3a\u5c06\u65e5\u5fd7\u6d88\u606f\u653e\u5165\u961f\u5217\u4e2d\uff1a</p> C++<pre><code>void appendToQueue(const std::vector&lt;std::string&gt;&amp; row) {\n    logQueue.push(row);\n}\n</code></pre> <ol> <li>\u8c03\u6574\u65e5\u5fd7\u8bb0\u5f55\u65b9\u6cd5</li> </ol> <p>\u5c06\u6240\u6709\u539f\u5148\u8c03\u7528 <code>appendToCSV</code> \u7684\u5730\u65b9\u6539\u4e3a\u8c03\u7528 <code>appendToQueue</code>\u3002\u4f8b\u5982\uff1a</p> C++<pre><code>// \u4e4b\u524d\u7684\u8c03\u7528\nappendToCSV(FILENAME, { \"Trace\", markerName, durationStr });\n\n// \u73b0\u5728\u7684\u8c03\u7528\nappendToQueue({ \"Trace\", markerName, durationStr });\n</code></pre> <ol> <li>\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u4e0e\u6709\u5e8f\u6027</li> </ol> <p>\u5728 <code>UnityPluginLoad</code> \u51fd\u6570\u4e2d\u542f\u52a8\u65e5\u5fd7\u7ebf\u7a0b\uff0c\u5728 <code>UnityPluginUnload</code> \u51fd\u6570\u4e2d\u505c\u6b62\u65e5\u5fd7\u7ebf\u7a0b\uff1a</p> C++<pre><code>void UnityPluginLoad(IUnityInterfaces * unityInterfaces) {\n    // ...\n    logThread = std::thread(logThreadFunction);\n}\n\nvoid UnityPluginUnload() {\n    // ...\n    logThreadRunning = false;\n    if (logThread.joinable()) {\n        logThread.join();\n    }\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_9","title":"\u6982\u5ff5","text":"<p>\u591a\u7ebf\u7a0b\u7f16\u7a0b\u662f\u4f7f\u7a0b\u5e8f\u80fd\u591f\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4efb\u52a1\u7684\u6280\u672f\uff0c\u662f\u63d0\u9ad8\u5e94\u7528\u7a0b\u5e8f\u6548\u7387\u548c\u6027\u80fd\u7684\u91cd\u8981\u624b\u6bb5\u3002\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u901a\u5e38\u5305\u542b\u5728\u8fdb\u7a0b\u4e2d\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u65f6\u90fd\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u4e0a\u4e0b\u6587\uff0c\u5305\u62ec\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u5bc4\u5b58\u5668\u96c6\u5408\u548c\u6808\u3002</p> <p>\u591a\u7ebf\u7a0b\u662f\u6307\u5728\u5355\u4e2a\u7a0b\u5e8f\u4e2d\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6267\u884c\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8fdb\u7a0b\u8d44\u6e90\uff0c\u4ece\u800c\u63d0\u9ad8\u7ebf\u7a0b\u95f4\u7684\u901a\u4fe1\u6548\u7387\u3002\u7136\u800c\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e5f\u5b58\u5728\u6f5c\u5728\u7684\u98ce\u9669\uff0c\u5982\u6570\u636e\u7ade\u4e89\u548c\u6b7b\u9501\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\u5e94\u5408\u7406\u4f7f\u7528\u9501\uff0c\u907f\u514d\u591a\u7ebf\u7a0b\u7f16\u7a0b\u9020\u6210\u7684\u98ce\u9669\u3002</p> <p>\u591a\u7ebf\u7a0b\u65e2\u53ef\u4ee5\u5e76\u884c\u5904\u7406\uff08\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u8fdb\u884c\uff09\uff0c\u4e5f\u53ef\u4ee5\u5e76\u53d1\u5904\u7406\uff08\u591a\u4e2a\u4efb\u52a1\u4ea4\u66ff\u8fdb\u884c\uff09\u3002\u5728\u5207\u6362\u7ebf\u7a0b\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u4fdd\u5b58\u5f53\u524d\u7ebf\u7a0b\u7684\u72b6\u6001\u5e76\u6062\u590d\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u7684\u72b6\u6001\u3002</p> <p>\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\uff0c\u591a\u7ebf\u7a0b\u6280\u672f\u80fd\u663e\u8457\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\u8b6c\u5982\uff0c\u5728\u6570\u636e\u5904\u7406\u65f6\uff0c\u5c06\u6570\u636e\u5206\u5272\u5e76\u7531\u4e0d\u540c\u6838\u5fc3\u5e76\u884c\u5904\u7406\u80fd\u5927\u5e45\u7f29\u77ed\u8ba1\u7b97\u65f6\u95f4\u3002\u8fd9\u5728\u8ba1\u7b97\u82af\u7247\u4e0a\u5f97\u4ee5\u4f53\u73b0\uff0c2023\u5e74\u53d1\u552e\u7684M3\u82af\u7247\u7684Macbook\uff0c\u5c3d\u7ba1\u5176\u5236\u9020\u5de5\u827a\u7684\u8fdb\u6b65\u52303nm\uff0c\u4f46\u5355\u6838\u6027\u80fd\u5b9e\u9645\u5e76\u672a\u663e\u8457\u63d0\u5347\uff0c\u8001\u5e93\u514b\u901a\u8fc7\u5bf9\u6838\u73a9\u6cd5\uff08\u8fbe\u523016+40\u6838\u5fc3\uff09\uff0c\u786c\u662f\u5c06M3 Pro Max\u82af\u7247\u5728\u6027\u80fd\u4e0a\u63a5\u8fd1\u4e8eIntel\u768413900K\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u4ef7\u683c\u2026\u2026\u4f60\u61c2\u7684\u3002</p> <p>\u53e6\u5916\uff0c\u5728\u56fe\u5f62\u754c\u9762\u5e94\u7528\u4e2d\uff0c\u591a\u7ebf\u7a0b\u5bf9\u4e8e\u4fdd\u6301\u754c\u9762\u54cd\u5e94\u6027\u548c\u540e\u53f0\u4efb\u52a1\u7684\u540c\u65f6\u6267\u884c\u81f3\u5173\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5728Unity\u5e94\u7528\u4e2d\uff0c\u65e0\u8bba\u662f\u5728\u5b89\u5353\u5e73\u53f0\u8fd8\u662fOpenHarmony\u5e73\u53f0\u4e0a\uff0c\u5747\u8bbe\u6709\u4e24\u4e2a\u4e3b\u8981\u7ebf\u7a0b\uff1a<code>Main</code>\uff08\u8d1f\u8d23\u903b\u8f91\u5904\u7406\uff09\u548c<code>GFXDevice</code>\uff08\u8d1f\u8d23\u6e32\u67d3\uff09\u3002\u8fd9\u79cd\u8bbe\u8ba1\u786e\u4fdd\u4e86\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u80fd\u591f\u72ec\u7acb\u8fd0\u4f5c\uff0c\u4e0d\u4f1a\u76f8\u4e92\u9020\u6210\u963b\u585e\u3002</p> <p>\u7531\u4e8e\u786c\u4ef6\u9650\u5236\uff0c\u4e00\u4e2a\u6838\u7684\u8ba1\u7b97\u80fd\u529b\u662f\u6709\u9650\u7684\u3002\u968f\u7740\u8ba1\u7b97\u673a\u6027\u80fd\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5355\u6838\u5904\u7406\u5668\u7684\u8ba1\u7b97\u80fd\u529b\u5df2\u7ecf\u8fbe\u5230\u4e86\u4e00\u5b9a\u74f6\u9888\u3002\u4e3a\u4e86\u63d0\u9ad8\u8ba1\u7b97\u673a\u7684\u6574\u4f53\u6027\u80fd\uff0c\u5fc5\u987b\u5229\u7528\u591a\u6838\u5904\u7406\u5668\u7684\u4f18\u52bf\u3002\u5f53\u4ee3\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5f00\u53d1\u79bb\u4e0d\u5f00\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_10","title":"\u4f7f\u7528","text":"<p>C++11\u6807\u51c6\u5e93\u5f15\u5165\u4e86<code>&lt;thread&gt;</code>\u5e93\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u7f16\u7a0b\u3002</p> <p>\u7b80\u5355\u793a\u4f8b</p> C++<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\uff0c\u7ebf\u7a0b\u5c06\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\nvoid threadFunction() {\n    std::cout &lt;&lt; \"Hello, Thread!\" &lt;&lt; std::endl;\n}\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u6267\u884c\u4e0a\u9762\u5b9a\u4e49\u7684\u51fd\u6570\n    std::thread t(threadFunction);\n\n    // \u5728\u4e3b\u7ebf\u7a0b\u4e2d\u7ee7\u7eed\u6267\u884c\n    std::cout &lt;&lt; \"Hello, Main!\" &lt;&lt; std::endl;\n\n    // \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210\u4efb\u52a1\n    t.join();\n\n    return 0;\n}\n</code></pre> <p>\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7ebf\u7a0b<code>t</code>\uff0c\u7528\u4e8e\u6267\u884c\u540d\u4e3a<code>threadFunction</code>\u7684\u51fd\u6570\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u7a0b\u5e8f\u7684\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u5e76\u6253\u5370\u6d88\u606f\u3002\u901a\u8fc7<code>t.join()</code>\uff0c\u6211\u4eec\u786e\u4fdd\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u7ebf\u7a0b<code>t</code>\u5b8c\u6210\u5176\u4efb\u52a1\u3002</p> <p>\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ol> <li>\u521b\u5efa\u7ebf\u7a0b: \u4f7f\u7528<code>std::thread</code>\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002</li> <li>\u7b49\u5f85\u7ebf\u7a0b: \u4f7f\u7528<code>join()</code>\u65b9\u6cd5\u786e\u4fdd\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u65b0\u521b\u5efa\u7684\u7ebf\u7a0b\u7ed3\u675f\u3002</li> <li>\u7ebf\u7a0b\u5206\u79bb: \u4f7f\u7528<code>detach()</code>\u65b9\u6cd5\u53ef\u4ee5\u5206\u79bb\u7ebf\u7a0b\uff0c\u4f7f\u5176\u72ec\u7acb\u4e8e\u4e3b\u7ebf\u7a0b\u8fd0\u884c\u3002</li> </ol> <p>\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u8d44\u6e90\u7ba1\u7406\uff1a\u786e\u4fdd\u7ebf\u7a0b\u5728\u7ed3\u675f\u65f6\u6b63\u786e\u5730\u91ca\u653e\u8d44\u6e90\u3002</li> <li>\u7ebf\u7a0b\u5b89\u5168\uff1a\u5f53\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u65f6\uff0c\u5e94\u8003\u8651\u4f7f\u7528\u4e92\u65a5\u9501\u6216\u5176\u4ed6\u540c\u6b65\u673a\u5236\u4ee5\u907f\u514d\u6570\u636e\u7ade\u4e89\u548c\u6b7b\u9501\u3002</li> </ul>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/%E7%AE%80%E6%98%93%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/#_11","title":"\u5b8c\u6574\u4ee3\u7801\u793a\u4f8b","text":"C++<pre><code>#include &lt;string.h&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;chrono&gt;\n#include &lt;map&gt;\n#include &lt;iomanip&gt;\n\n#include &lt;queue&gt;\n#include &lt;mutex&gt;\n#include &lt;condition_variable&gt;\n\n#include &lt;thread&gt;\n\n#define FILENAME \"data.csv\"\n\n// \u7ebf\u7a0b\u5b89\u5168\u961f\u5217\u6a21\u677f\u7c7b\ntemplate &lt;typename T&gt;\nclass ThreadSafeQueue\n{\nprivate:\n    std::queue&lt;T&gt; queue;               // \u5b9e\u9645\u5b58\u50a8\u6570\u636e\u7684\u961f\u5217\n    std::mutex mutex;                  // \u4e92\u65a5\u9501\uff0c\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\n    std::condition_variable cond;      // \u6761\u4ef6\u53d8\u91cf\uff0c\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65\n\npublic:\n    void push(T value)\n    {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex);\n        queue.push(std::move(value));  // \u6570\u636e\u5165\u961f\n        cond.notify_one();             // \u901a\u77e5\u7b49\u5f85\u7ebf\u7a0b\n    }\n\n    T pop()\n    {\n        std::unique_lock&lt;std::mutex&gt; lock(mutex);\n        cond.wait(lock, [this] { return !queue.empty(); }); // \u7b49\u5f85\u76f4\u5230\u961f\u5217\u975e\u7a7a\n        T value = std::move(queue.front());\n        queue.pop();                   // \u6570\u636e\u51fa\u961f\n        return value;\n    }\n\n    bool empty()\n    {\n        std::lock_guard&lt;std::mutex&gt; lock(mutex);\n        return queue.empty();          // \u68c0\u67e5\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n    }\n};\n\nThreadSafeQueue&lt;std::vector&lt;std::string&gt;&gt; logQueue; // \u65e5\u5fd7\u6d88\u606f\u961f\u5217\nstd::thread logThread;                              // \u65e5\u5fd7\u7ebf\u7a0b\nstd::atomic&lt;bool&gt; logThreadRunning(true);           // \u63a7\u5236\u65e5\u5fd7\u7ebf\u7a0b\u8fd0\u884c\u7684\u6807\u5fd7\n\n// \u65e5\u5fd7\u7ebf\u7a0b\u7684\u4e3b\u51fd\u6570\nvoid logThreadFunction()\n{\n    std::ofstream file(FILENAME, std::ios::app); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8ffd\u52a0\n    if (!file)\n    {\n        std::cerr &lt;&lt; \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6 \" &lt;&lt; FILENAME &lt;&lt; std::endl;\n        return;\n    }\n\n    while (logThreadRunning || !logQueue.empty()) // \u5f53\u7ebf\u7a0b\u8fd0\u884c\u6216\u961f\u5217\u975e\u7a7a\u65f6\n    {\n        if (!logQueue.empty())\n        {\n            auto logMessage = logQueue.pop(); // \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u65e5\u5fd7\u6d88\u606f\n\n            // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u5e76\u683c\u5f0f\u5316\n            auto now = std::chrono::system_clock::now();\n            auto now_as_time_t = std::chrono::system_clock::to_time_t(now);\n            auto current_microseconds = std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(\n                                            now.time_since_epoch()) % 1000000;\n\n            // \u5199\u5165\u65f6\u95f4\u6233\u548c\u65e5\u5fd7\u6d88\u606f\n            file &lt;&lt; std::put_time(std::localtime(&amp;now_as_time_t), \"%Y-%m-%d %H:%M:%S\");\n            file &lt;&lt; '.' &lt;&lt; std::setfill('0') &lt;&lt; std::setw(6) &lt;&lt; current_microseconds.count();\n            file &lt;&lt; \",\";\n\n            for (size_t i = 0; i &lt; logMessage.size(); ++i)\n            {\n                file &lt;&lt; logMessage[i];\n                if (i &lt; logMessage.size() - 1)\n                    file &lt;&lt; \",\";\n            }\n            file &lt;&lt; \"\\n\";\n\n            if (!file.good())\n            {\n                std::cerr &lt;&lt; \"\u5199\u5165CSV\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef \" &lt;&lt; FILENAME &lt;&lt; std::endl;\n            }\n\n            file.flush(); // \u6e05\u7a7a\u6587\u4ef6\u7f13\u51b2\u533a\n        }\n    }\n    file.close(); // \u5173\u95ed\u6587\u4ef6\n}\n\n// \u5c06\u65e5\u5fd7\u6d88\u606f\u6dfb\u52a0\u5230\u961f\u5217\nvoid appendToQueue(const std::vector&lt;std::string&gt; &amp;row)\n{\n    logQueue.push(row);\n}\n\nint main()\n{\n    logThread = std::thread(logThreadFunction); // \u542f\u52a8\u65e5\u5fd7\u7ebf\u7a0b\n\n    // \u793a\u4f8b\uff1a\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u65e5\u5fd7\u6d88\u606f\n    appendToQueue({\"Count\", \"SampleName\", \"1\"});\n    appendToQueue({\"Count\", \"SampleName\", \"2\"});\n    // ... \u5176\u4ed6\u4e1a\u52a1\u903b\u8f91 ...\n\n    logThreadRunning = false; // \u8bbe\u7f6e\u7ebf\u7a0b\u8fd0\u884c\u6807\u5fd7\u4e3afalse\n    logThread.join();         // \u7b49\u5f85\u65e5\u5fd7\u7ebf\u7a0b\u7ed3\u675f\n\n    return 0;\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/","title":"OpenGL\u521d\u63a2\u2014\u2014HelloTriangle","text":"<p>\u672c\u6587\u4ee3\u7801\u793a\u4f8b\u6765\u81ealearnopengl-cn\uff08\u4f60\u597d\uff0c\u4e09\u89d2\u5f62\uff09\uff0c\u901a\u8fc7Opengl\u5b8c\u6210\u4e09\u89d2\u5f62\u7ed8\u5236\u3002</p>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#1-glfwglad","title":"1. \u5f15\u5165GLFW\u548cGLAD","text":"<ul> <li>GLFW \u662f\u4e00\u4e2a\u4e13\u95e8\u9488\u5bf9OpenGL\u7684C\u8bed\u8a00\u5e93\uff0c\u63d0\u4f9b\u4e86\u6e32\u67d3\u7269\u4f53\u6240\u9700\u7684\u57fa\u7840\u63a5\u53e3\u3002\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efaOpenGL\u4e0a\u4e0b\u6587\u3001\u5b9a\u4e49\u7a97\u53e3\u53c2\u6570\u5e76\u5904\u7406\u7528\u6237\u8f93\u5165\u3002</li> <li>GLAD \u662f\u4e00\u4e2aOpenGL\u52a0\u8f7d\u5e93\uff0c\u7528\u4e8e\u5728\u8fd0\u884c\u65f6\u52a0\u8f7dOpenGL\u51fd\u6570\u6307\u9488\u3002\u5b83\u5e2e\u52a9\u786e\u5b9a\u4e0d\u540c\u663e\u5361\u548c\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u54ea\u4e9bOpenGL\u51fd\u6570\u3002</li> </ul> <p>GLFW \u53ef\u4ee5\u4ece\u5176\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u9875\u83b7\u53d6\uff0c\u652f\u6301\u901a\u8fc7 CMake \u7f16\u8bd1\u6216\u76f4\u63a5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002GLAD \u901a\u8fc7\u4e00\u4e2a\u5728\u7ebf\u670d\u52a1\u751f\u6210\u3002\u5728GLAD\u7f51\u7ad9\u4e0a\uff0c\u9009\u62e9 C/C++ \u8bed\u8a00\uff0c\u9009\u5b9a OpenGL \u7248\u672c\uff08\u672c\u4f8b\u4f7f\u7528 3.3 \u4ee5\u4e0a\uff09\uff0c\u6a21\u5f0f\u9009\u62e9 Core \u5e76\u52fe\u9009 Generate a loader\uff0c\u7136\u540e\u70b9\u51fb \u751f\u6210\uff08Generate\uff09\u6309\u94ae\u3002</p> <p>\u5f15\u5165\u65f6\u5148\u5f15\u5165glad\uff0c\u518d\u5f15\u5165glfw3\uff0c\u4ee5\u907f\u514d\u7f16\u8bd1\u9519\u8bef\u3002\u5f15\u5165\u65b9\u5f0f\u89c1\u5916\u90e8\u5e93\u5f15\u7528\u3002</p> C++<pre><code>// \u5305\u542bGLAD\u548cGLFW\u7684\u5934\u6587\u4ef6\n#include &lt;iostream&gt;\n#include \"./include/glad/glad.h\"\n#include \"./include/GLFW/glfw3.h\"\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#2-glfw","title":"2. \u521d\u59cb\u5316GLFW","text":"<ul> <li>\u521d\u59cb\u5316GLFW\u5e93</li> <li>\u8bbe\u7f6eOpenGL\u7248\u672c\u548c\u6a21\u5f0f</li> <li>\u521b\u5efa\u7a97\u53e3\u5bf9\u8c61</li> <li>\u8bbe\u7f6e\u7a97\u53e3\u5bf9\u8c61\u4e0a\u4e0b\u6587</li> <li>\u8bbe\u7f6e\u7a97\u53e3\u5927\u5c0f\u8c03\u6574\u65f6\u7684\u56de\u8c03\u51fd\u6570\u3002</li> </ul> C++<pre><code>...\nvoid framebuffer_size_callback(GLFWwindow *window, int width, int height);\n\nint main()\n{\n    // \u521d\u59cb\u5316 GLFW \u5e93\n    glfwInit();\n    // \u914d\u7f6e GLFW\uff1a\u8bbe\u7f6e OpenGL \u7248\u672c (3.3)\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);\n    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);\n    // \u4f7f\u7528\u6838\u5fc3\u6a21\u5f0f\n    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);\n\n    // \u521b\u5efa\u7a97\u53e3\u5bf9\u8c61\n    GLFWwindow *window = glfwCreateWindow(800, 600, \"LearnOpenGL\", NULL, NULL);\n    if (window == NULL)\n    {\n        std::cout &lt;&lt; \"Failed to create GLFW window\" &lt;&lt; std::endl;\n        glfwTerminate();\n        return -1;\n    }\n    // \u5c06\u7a97\u53e3\u7684\u4e0a\u4e0b\u6587\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7ebf\u7a0b\u7684\u4e3b\u4e0a\u4e0b\u6587\n    glfwMakeContextCurrent(window);\n    // \u8bbe\u7f6e\u7a97\u53e3\u8c03\u6574\u5927\u5c0f\u65f6\u7684\u56de\u8c03\u51fd\u6570\n    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);\n    ...\n}\n\n// GLFW: \u6bcf\u5f53\u7a97\u53e3\u5927\u5c0f\u6539\u53d8\u65f6\uff0c\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u5c31\u4f1a\u88ab\u6267\u884c\n// ---------------------------------------------------------------------------------------------\nvoid framebuffer_size_callback(GLFWwindow *window, int width, int height)\n{\n    // \u786e\u4fdd\u89c6\u53e3\u4e0e\u65b0\u7a97\u53e3\u7684\u5c3a\u5bf8\u76f8\u5339\u914d\n    glViewport(0, 0, width, height);\n}\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#3-glad","title":"3. \u521d\u59cb\u5316GLAD","text":"C++<pre><code>...\nint main(){\n    ...\n    // \u521d\u59cb\u5316 GLAD\n    if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress))\n    {\n        std::cout &lt;&lt; \"Failed to initialize GLAD\" &lt;&lt; std::endl;\n        return -1;\n    }\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#4","title":"4. \u5b9a\u4e49\u4e09\u89d2\u5f62\u9876\u70b9\u6570\u636e","text":"C++<pre><code>...\nint main(){\n    ...\n    // \u5b9a\u4e49\u9876\u70b9\u6570\u636e\n    float vertices[] = {\n        -0.5f, -0.5f, 0.0f, // \u5de6\u4e0b\u89d2\n        0.5f, -0.5f, 0.0f,  // \u53f3\u4e0b\u89d2\n        0.0f, 0.5f, 0.0f    // \u9876\u90e8\n    };\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#5","title":"5. \u7f16\u8bd1\u9876\u70b9\u7740\u8272\u5668","text":"<ul> <li>\u7f16\u5199\u6e90\u7801\uff1a\u521b\u5efa\u9876\u70b9\u7740\u8272\u5668\u7684GLSL\u6e90\u7801\u5b57\u7b26\u4e32\u3002</li> <li>\u521b\u5efa\u9876\u70b9\u7740\u8272\u5668\uff1a\u5229\u7528 <code>glCreateShader</code> \u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\u3002</li> <li>\u9644\u52a0\u6e90\u7801\uff1a\u4f7f\u7528 <code>glShaderSource</code> \u5c06\u6e90\u7801\u5b57\u7b26\u4e32\u9644\u52a0\u5230\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\u3002</li> <li>\u7f16\u8bd1\u7740\u8272\u5668\uff1a\u8c03\u7528 <code>glCompileShader</code> \u7f16\u8bd1\u7740\u8272\u5668\u3002</li> <li>\u68c0\u67e5\u7f16\u8bd1\u72b6\u6001\uff1a\u4f7f\u7528 <code>glGetShaderiv</code> \u548c <code>glGetShaderInfoLog</code> \u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u6210\u529f\u3002</li> </ul> C++<pre><code>...\nint main(){\n    ...\n    // \u9876\u70b9\u7740\u8272\u5668\u6e90\u7801\n    const char *vertexShaderSource = \"#version 330 core\\n\"\n                                     \"layout (location = 0) in vec3 aPos;\\n\" // \u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a aPos \u7684\u9876\u70b9\u5c5e\u6027\n                                     \"void main()\\n\"\n                                     \"{\\n\"\n                                     \"   gl_Position = vec4(aPos.x, aPos.y, aPos.z, 1.0);\\n\" // \u8bbe\u7f6e\u6700\u7ec8\u4f4d\u7f6e\n                                     \"}\\0\";                                                  // \u4ee3\u7801\u7ed3\u675f\n\n    // \u521b\u5efa\u9876\u70b9\u7740\u8272\u5668\n    unsigned int vertexShader = glCreateShader(GL_VERTEX_SHADER); // \u521b\u5efa\u4e00\u4e2a\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\uff0c\u8fd4\u56de\u5176 ID\n                                                                  // \u53c2\u6570\u4f20\u9012GL_VERTEX_SHADER\n\n    // \u5c06\u7740\u8272\u5668\u6e90\u7801\u9644\u52a0\u5230\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\n    glShaderSource(vertexShader, 1, &amp;vertexShaderSource, NULL); // \u5c06\u9876\u70b9\u7740\u8272\u5668\u6e90\u7801\u9644\u52a0\u5230\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\n    // \u53c2\u6570\u89e3\u91ca\uff1a\n    // vertexShader\uff1a\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\u7684 ID\uff0c\u8fd9\u91cc\u7528\u4e0a\u8ff0\u521b\u5efa\u597d\u7684\u5bf9\u8c61\n    // 1\uff1a\u6307\u5b9a\u4f20\u9012\u7684\u6e90\u7801\u5b57\u7b26\u4e32\u6570\u91cf\n    // &amp;vertexShaderSource\uff1a\u9876\u70b9\u7740\u8272\u5668\u6e90\u7801\u6570\u7ec4\u7684\u5730\u5740\n    // NULL\uff1a\u6e90\u7801\u5b57\u7b26\u4e32\u957f\u5ea6\u6570\u7ec4\uff0cNULL \u8868\u793a\u6e90\u7801\u5b57\u7b26\u4e32\u4ee5 null \u7ed3\u5c3e\n\n    // \u7f16\u8bd1\u7740\u8272\u5668\n    glCompileShader(vertexShader); // \u7f16\u8bd1\u9876\u70b9\u7740\u8272\u5668\n\n    // \u68c0\u67e5\u9876\u70b9\u7740\u8272\u5668\u7684\u7f16\u8bd1\u662f\u5426\u6210\u529f\n    int success;\n    char infoLog[512];\n    glGetShaderiv(vertexShader, GL_COMPILE_STATUS, &amp;success); // \u83b7\u53d6\u9876\u70b9\u7740\u8272\u5668\u7684\u7f16\u8bd1\u72b6\u6001\n    // \u53c2\u6570\u89e3\u91ca\uff1a\n    // vertexShader\uff1a\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\u7684 ID\n    // GL_COMPILE_STATUS\uff1a\u83b7\u53d6\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u8fd9\u91cc\u662f\u7f16\u8bd1\u72b6\u6001\n    // &amp;success\uff1a\u5b58\u50a8\u72b6\u6001\u7684\u53d8\u91cf\u7684\u5730\u5740\n\n    if (!success)\n    {\n        glGetShaderInfoLog(vertexShader, 512, NULL, infoLog); // \u83b7\u53d6\u9876\u70b9\u7740\u8272\u5668\u7684\u7f16\u8bd1\u9519\u8bef\u4fe1\u606f\n        // \u53c2\u6570\u89e3\u91ca\uff1a\n        // vertexShader\uff1a\u9876\u70b9\u7740\u8272\u5668\u5bf9\u8c61\u7684 ID\n        // 512\uff1a\u4fe1\u606f\u7f13\u51b2\u533a\u7684\u5927\u5c0f\n        // NULL\uff1a\u5b9e\u9645\u83b7\u53d6\u7684\u4fe1\u606f\u957f\u5ea6\uff0cNULL \u8868\u793a\u4e0d\u9700\u8981\u8fd9\u4e2a\u503c\n        // infoLog\uff1a\u5b58\u50a8\u9519\u8bef\u4fe1\u606f\u7684\u5b57\u7b26\u6570\u7ec4\n\n        std::cout &lt;&lt; \"ERROR::SHADER::VERTEX::COMPILATION_FAILED\\n\"\n                  &lt;&lt; infoLog &lt;&lt; std::endl; // \u6253\u5370\u9519\u8bef\u4fe1\u606f\n    }\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#6","title":"6. \u7f16\u8bd1\u7247\u6bb5\u7740\u8272\u5668","text":"<p>\u4e0e\u9876\u70b9\u7740\u8272\u5668\u7c7b\u4f3c\u3002</p> C++<pre><code>...\nint main(){\n    ... \n    // \u7247\u6bb5\u7740\u8272\u5668\u6e90\u7801\n    const char *fragmentShaderSource = \"#version 330 core\\n\"\n                                       \"out vec4 FragColor;\\n\"\n                                       \"void main()\\n\"\n                                       \"{\\n\"\n                                       \" FragColor = vec4(1.0f, 0.5f, 0.2f, 1.0f);\\n\" // \u8bbe\u7f6e\u989c\u8272\n                                       \"}\\0\";\n    // \u521b\u5efa\u7247\u6bb5\u7740\u8272\u5668\n    unsigned int fragmentShader = glCreateShader(GL_FRAGMENT_SHADER);\n    // \u5c06\u7740\u8272\u5668\u6e90\u7801\u9644\u52a0\u5230\u7740\u8272\u5668\u5bf9\u8c61\u4e0a\n    glShaderSource(fragmentShader, 1, &amp;fragmentShaderSource, NULL);\n    // \u7f16\u8bd1\u7740\u8272\u5668\n    glCompileShader(fragmentShader);\n    // \u68c0\u67e5\u7247\u6bb5\u7740\u8272\u5668\u7684\u7f16\u8bd1\u662f\u5426\u6210\u529f\n    glGetShaderiv(fragmentShader, GL_COMPILE_STATUS, &amp;success);\n    if (!success)\n    {\n        glGetShaderInfoLog(fragmentShader, 512, NULL, infoLog);\n        std::cout &lt;&lt; \"ERROR::SHADER::FRAGMENT::COMPILATION_FAILED\\n\"\n                  &lt;&lt; infoLog &lt;&lt; std::endl;\n    }\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#7","title":"7. \u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f","text":"<ul> <li>\u521b\u5efa\u7a0b\u5e8f\uff1a\u4f7f\u7528 <code>glCreateProgram</code> \u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\u3002</li> <li>\u9644\u52a0\u7740\u8272\u5668\uff1a\u901a\u8fc7 <code>glAttachShader</code> \u5c06\u9876\u70b9\u548c\u7247\u6bb5\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u4e0a\u3002</li> <li>\u94fe\u63a5\u7a0b\u5e8f\uff1a\u4f7f\u7528 <code>glLinkProgram</code> \u94fe\u63a5\u7740\u8272\u5668\u7a0b\u5e8f\u3002</li> <li>\u68c0\u67e5\u94fe\u63a5\u72b6\u6001\uff1a\u4f7f\u7528 <code>glGetProgramiv</code> \u548c <code>glGetProgramInfoLog</code> \u68c0\u67e5\u94fe\u63a5\u662f\u5426\u6210\u529f\u3002</li> <li>\u5220\u9664\u7740\u8272\u5668\u5bf9\u8c61\uff1a\u94fe\u63a5\u540e\uff0c\u7740\u8272\u5668\u5bf9\u8c61\u4e0d\u518d\u9700\u8981\uff0c\u4f7f\u7528 <code>glDeleteShader</code> \u5220\u9664\u5b83\u4eec\u3002</li> </ul> C++<pre><code>...\nint main(){\n    ... \n    // \u521b\u5efa\u7740\u8272\u5668\u7a0b\u5e8f\n    unsigned int shaderProgram = glCreateProgram();\n    // \u5c06\u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u6bb5\u7740\u8272\u5668\u9644\u52a0\u5230\u7a0b\u5e8f\u4e0a\n    glAttachShader(shaderProgram, vertexShader);\n    glAttachShader(shaderProgram, fragmentShader);\n    // \u94fe\u63a5\u7740\u8272\u5668\u7a0b\u5e8f\n    glLinkProgram(shaderProgram);\n    // \u68c0\u67e5\u7740\u8272\u5668\u7a0b\u5e8f\u7684\u94fe\u63a5\u662f\u5426\u6210\u529f\n    glGetProgramiv(shaderProgram, GL_LINK_STATUS, &amp;success);\n    if (!success)\n    {\n        glGetProgramInfoLog(shaderProgram, 512, NULL, infoLog);\n        std::cout &lt;&lt; \"ERROR::SHADER::PROGRAM::LINKING_FAILED\\n\"\n                  &lt;&lt; infoLog &lt;&lt; std::endl;\n    }\n    // \u5728\u94fe\u63a5\u5b8c\u6210\u540e\u5220\u9664\u7740\u8272\u5668\u5bf9\u8c61\n    glDeleteShader(vertexShader);\n    glDeleteShader(fragmentShader);\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#8-vaovbo","title":"8. \u5904\u7406VAO\u548cVBO","text":"<ul> <li>\u521b\u5efaVAO\u548cVBO\uff1a\u4f7f\u7528 <code>glGenVertexArrays</code> \u548c <code>glGenBuffers</code> \u521b\u5efa\u5bf9\u8c61\u3002</li> <li>\u7ed1\u5b9aVAO\u548cVBO\uff1a\u901a\u8fc7 <code>glBindVertexArray</code> \u548c <code>glBindBuffer</code> \u7ed1\u5b9a\u5bf9\u8c61\u3002</li> <li>\u590d\u5236\u9876\u70b9\u6570\u636e\uff1a\u4f7f\u7528 <code>glBufferData</code> \u5c06\u9876\u70b9\u6570\u636e\u590d\u5236\u5230VBO\u3002</li> <li>\u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\uff1a\u914d\u7f6e\u5982\u4f55\u89e3\u91ca\u9876\u70b9\u6570\u636e\uff0c\u4f7f\u7528 <code>glVertexAttribPointer</code> \u548c <code>glEnableVertexAttribArray</code>\u3002</li> </ul> C++<pre><code>...\nint main(){\n    ... \n    // \u521b\u5efa VAO\uff08\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff09\n    unsigned int VAO;\n    glGenVertexArrays(1, &amp;VAO);\n    // \u521b\u5efa VBO\uff08\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff09\n    unsigned int VBO;\n    glGenBuffers(1, &amp;VBO);\n\n    // \u7ed1\u5b9a VAO\n    glBindVertexArray(VAO);\n    // \u7ed1\u5b9a\u5e76\u8bbe\u7f6e VBO\n    glBindBuffer(GL_ARRAY_BUFFER, VBO);\n\n    // \u5c06\u9876\u70b9\u6570\u636e\u590d\u5236\u5230\u7f13\u51b2\u7684\u5185\u5b58\u4e2d\n    glBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n\n    // \u8bbe\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void *)0);\n    glEnableVertexAttribArray(0);\n}\n...\n</code></pre>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#9","title":"9. \u6e32\u67d3\u5faa\u73af","text":"<p>\u6e32\u67d3\u903b\u8f91\uff0c\u6dfb\u52a0\u8f93\u5165\u64cd\u4f5c\u3002</p> <ul> <li>\u5904\u7406\u8f93\u5165\uff1a\u8c03\u7528 <code>processInput</code> \u51fd\u6570\u5904\u7406\u7528\u6237\u8f93\u5165\u3002</li> <li>\u6e05\u5c4f\uff1a\u4f7f\u7528 <code>glClearColor</code> \u548c <code>glClear</code> \u8bbe\u7f6e\u6e05\u5c4f\u989c\u8272\u5e76\u6e05\u9664\u989c\u8272\u7f13\u51b2\u3002</li> <li> <p>\u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f\uff1a\u8c03\u7528 <code>glUseProgram</code> \u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f\u3002</p> </li> <li> <p>\u7ed1\u5b9aVAO\uff1a\u4f7f\u7528 <code>glBindVertexArray</code> \u7ed1\u5b9a\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\u3002</p> </li> <li>\u7ed8\u5236\u4e09\u89d2\u5f62\uff1a\u901a\u8fc7 <code>glDrawArrays</code> \u7ed8\u5236\u5b9a\u4e49\u597d\u7684\u9876\u70b9\u3002</li> <li>\u4ea4\u6362\u7f13\u51b2\u533a\u548c\u8f6e\u8be2\u4e8b\u4ef6\uff1a\u4f7f\u7528 <code>glfwSwapBuffers</code> \u548c <code>glfwPollEvents</code> \u6765\u66f4\u65b0\u7a97\u53e3\u5e76\u5904\u7406\u4e8b\u4ef6\u3002</li> </ul> C++<pre><code>...\nvoid processInput(GLFWwindow *window);\n\nint main(){\n    ... \n    // \u6e32\u67d3\u5faa\u73af\n    while (!glfwWindowShouldClose(window))\n    {\n        // \u5904\u7406\u8f93\u5165\n        processInput(window);\n\n        // \u6e05\u9664\u989c\u8272\u7f13\u51b2\u533a\n        glClearColor(0.2f, 0.3f, 0.3f, 1.0f);\n        glClear(GL_COLOR_BUFFER_BIT);\n\n        // \u6bcf\u6b21\u7ed8\u5236\u4e4b\u524d\u4f7f\u7528\u7740\u8272\u5668\u7a0b\u5e8f\n        glUseProgram(shaderProgram);\n        // \u6bcf\u6b21\u7ed8\u5236\u4e4b\u524d\u7ed1\u5b9aVAO\n        glBindVertexArray(VAO);\n        // \u7ed8\u5236\u4e09\u89d2\u5f62\n        glDrawArrays(GL_TRIANGLES, 0, 3);\n\n        // \u4ea4\u6362\u989c\u8272\u7f13\u51b2\uff08\u53cc\u7f13\u51b2\u6a21\u5f0f\uff09\n        glfwSwapBuffers(window);\n        // \u8f6e\u8be2\u5e76\u5904\u7406\u4e8b\u4ef6\n        glfwPollEvents();\n    }\n}\n...\n// \u5904\u7406\u6240\u6709\u8f93\u5165: \u67e5\u8be2 GLFW \u662f\u5426\u6709\u76f8\u5173\u952e\u88ab\u6309\u4e0b/\u91ca\u653e\uff0c\u5e76\u505a\u51fa\u76f8\u5e94\u53cd\u5e94\n// ---------------------------------------------------------------------------------------------------------\nvoid processInput(GLFWwindow *window)\n{\n    // \u5982\u679c\u6309\u4e0b\u4e86Escape\u952e\uff0c\u5219\u8bbe\u7f6e\u7a97\u53e3\u5e94\u8be5\u5173\u95ed\n    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS)\n        glfwSetWindowShouldClose(window, true);\n}\n</code></pre> <p>\u5728 <code>while</code> \u5faa\u73af\u4e2d\uff0c\u6bcf\u6b21\u7ed8\u5236\u4e4b\u524d\u4f7f\u7528\u7740\u8272\u5668\u548c\u7ed1\u5b9aVAO\u662fOpenGL\u7684\u6807\u51c6\u5b9e\u8df5\uff1a</p> <ol> <li>\u72b6\u6001\u673a\u673a\u5236\uff1aOpenGL\u6309\u7167\u5f53\u524d\u72b6\u6001\u6267\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u5fc5\u987b\u6307\u5b9a\u6bcf\u6b21\u6e32\u67d3\u6240\u7528\u7684\u7740\u8272\u5668\u548cVAO\u3002</li> <li>\u591a\u7269\u4f53\u6e32\u67d3\uff1a\u4e0d\u540c\u7269\u4f53\u53ef\u80fd\u9700\u8981\u4e0d\u540c\u7684\u7740\u8272\u5668\u548c\u9876\u70b9\u914d\u7f6e\uff0c\u56e0\u6b64\u6bcf\u6b21\u6e32\u67d3\u524d\u7684\u7ed1\u5b9a\u786e\u4fdd\u4e86\u6b63\u786e\u7684\u914d\u7f6e\u3002</li> <li>\u4ee3\u7801\u6e05\u6670\u548c\u6269\u5c55\u6027\uff1a\u8fd9\u79cd\u505a\u6cd5\u4f7f\u4ee3\u7801\u66f4\u6613\u4e8e\u7406\u89e3\u548c\u7ef4\u62a4\uff0c\u7279\u522b\u662f\u5728\u6dfb\u52a0\u65b0\u7269\u4f53\u6216\u7740\u8272\u5668\u65f6\u3002</li> <li>\u9632\u6b62\u72b6\u6001\u6c61\u67d3\uff1a\u6bcf\u6b21\u7ed8\u5236\u524d\u7684\u91cd\u65b0\u7ed1\u5b9a\u907f\u514d\u4e86\u4e4b\u524d\u6e32\u67d3\u6b65\u9aa4\u7684\u8bbe\u7f6e\u5f71\u54cd\u5f53\u524d\u7ed8\u5236\u3002</li> </ol>"},{"location":"%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B/%E8%AF%AD%E8%A8%80%E8%83%BD%E5%8A%9B/CorC%2B%2B/OpenGL/HelloTriangle/#10","title":"10. \u6e05\u7406\u5e76\u9000\u51fa","text":"C++<pre><code>...\nint main(){\n    ... \n    // \u9000\u51fa\u524d\u91ca\u653e\u8d44\u6e90\n    glfwTerminate();\n    glDeleteVertexArrays(1, &amp;VAO);\n    glDeleteBuffers(1, &amp;VBO);\n    glDeleteProgram(shaderProgram);\n\n    return 0;\n}\n...\n</code></pre>"},{"location":"%E8%BF%90%E7%BB%B4/Docker/DockerDemo%E2%80%94%E2%80%94Linux%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA%E5%BA%94%E7%94%A8%EF%BC%88Panda3D%EF%BC%89/","title":"DockerDemo\u2014\u2014Linux\u7cfb\u7edf\u642d\u5efa\u5e94\u7528\uff08Panda3D\uff09","text":"<p>\u5c1d\u8bd5\uff1a</p> <p>\u2460\u7f16\u5199\u4e00\u4e2a\u4ebaDocker Demo;</p> <p>\u2461\u914d\u7f6eLinux Centos yum\u6e90\uff1b</p> <p>\u2462\u642d\u5efa\u57fa\u4e8ePanda3D\u7684\u6559\u5b66\u9879\u76ee\uff1a3d-game-shaders-for-beginners</p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/cntlm%E7%BD%91%E7%BB%9C%E6%90%AD%E5%BB%BA/","title":"cntlm\u7f51\u7edc\u642d\u5efa","text":"<p>\u914d\u7f6ecntlm.ini:</p> <p>Username, Domain, Password\uff08\u901a\u8fc7\u5bc6\u6587\u5219\u4e0d\u9700\u8981\uff09, Proxy, noProxy, Listen</p> <p>\u5f97\u5230\u5bc6\u6587\uff1a</p> <p>cntlm -H -u username\uff0c\u8f93\u5165\u5bc6\u7801\uff0c\u5f97\u5230\u5bc6\u6587\u4e00\u5171\u6709\u4e09\u4e2a\uff1aPassLM\u3001PassNT\u3001PassNTLMv2</p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/","title":"\u5b89\u88c5WSL","text":"Text Only<pre><code>wsl --install\n</code></pre>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/#ssh","title":"SSH \u516c\u94a5\u8bbe\u7f6e","text":"<p>\u6765\u6e90\u4e8e\uff1ahttps://help.gitee.com/base/account/SSH%E5%85%AC%E9%92%A5%E8%AE%BE%E7%BD%AE</p> <p>Gitee \u63d0\u4f9b\u4e86\u57fa\u4e8e SSH \u534f\u8bae\u7684 Git \u670d\u52a1\uff0c\u5728\u4f7f\u7528 SSH \u534f\u8bae\u8bbf\u95ee\u4ed3\u5e93\u4ed3\u5e93\u4e4b\u524d\uff0c\u9700\u8981\u5148\u914d\u7f6e\u597d\u8d26\u6237 SSH \u516c\u94a5\u3002</p> <p>\u4ed3\u5e93\u516c\u94a5\uff08\u90e8\u7f72\u516c\u94a5\uff09\u8bf7\u79fb\u6b65 \u6dfb\u52a0\u90e8\u7f72\u516c\u94a5</p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/#ssh_1","title":"\u751f\u6210 SSH \u516c\u94a5","text":"<p>Windows \u7528\u6237\u5efa\u8bae\u4f7f\u7528 Windows PowerShell \u6216\u8005 Git Bash\uff0c\u5728 \u547d\u4ee4\u63d0\u793a\u7b26 \u4e0b\u65e0 <code>cat</code> \u548c <code>ls</code> \u547d\u4ee4\u3002</p> <p>1\u3001\u901a\u8fc7\u547d\u4ee4 <code>ssh-keygen</code> \u751f\u6210 SSH Key\uff1a</p> Bash<pre><code>ssh-keygen -t ed25519 -C \"Gitee SSH Key\"\n</code></pre> <ul> <li><code>-t</code> key \u7c7b\u578b</li> <li><code>-C</code> \u6ce8\u91ca</li> </ul> <p>\u8f93\u51fa\uff0c\u5982\uff1a</p> Bash<pre><code>Generating public/private ed25519 key pair.\nEnter file in which to save the key (/home/git/.ssh/id_ed25519):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /home/git/.ssh/id_ed25519\nYour public key has been saved in /home/git/.ssh/id_ed25519.pub\nThe key fingerprint is:\nSHA256:ohDd0OK5WG2dx4gST/j35HjvlJlGHvihyY+Msl6IC8I Gitee SSH Key\nThe key's randomart image is:\n+--[ED25519 256]--+\n|    .o           |\n|   .+oo          |\n|  ...O.o +       |\n|   .= * = +.     |\n|  .o +..S*. +    |\n|. ...o o..+* *   |\n|.E. o . ..+.O    |\n| . . ... o =.    |\n|    ..oo. o.o    |\n+----[SHA256]-----+\n</code></pre> <ul> <li>\u4e2d\u95f4\u901a\u8fc7\u4e09\u6b21\u56de\u8f66\u952e\u786e\u5b9a</li> </ul> <p>2\u3001\u67e5\u770b\u751f\u6210\u7684 SSH \u516c\u94a5\u548c\u79c1\u94a5\uff1a</p> Bash<pre><code>ls ~/.ssh/\n</code></pre> <p>\u8f93\u51fa\uff1a</p> Bash<pre><code>id_ed25519  id_ed25519.pub\n</code></pre> <ul> <li>\u79c1\u94a5\u6587\u4ef6 <code>id_ed25519</code></li> <li>\u516c\u94a5\u6587\u4ef6 <code>id_ed25519.pub</code></li> </ul> <p>3\u3001\u8bfb\u53d6\u516c\u94a5\u6587\u4ef6 <code>~/.ssh/id_ed25519.pub</code>\uff1a</p> Bash<pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre> <p>\u8f93\u51fa\uff0c\u5982\uff1a</p> Bash<pre><code>ssh-ed25519 AAAA***5B Gitee SSH Key\n</code></pre> <p>\u590d\u5236\u7ec8\u7aef\u8f93\u51fa\u7684\u516c\u94a5\u3002</p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/#ssh_2","title":"\u8bbe\u7f6e\u8d26\u6237 SSH \u516c\u94a5","text":"<p>\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4e3b\u9875\u53f3\u4e0a\u89d2 \u300c\u4e2a\u4eba\u8bbe\u7f6e\u300d-&gt;\u300c\u5b89\u5168\u8bbe\u7f6e\u300d-&gt;\u300cSSH \u516c\u94a5\u300d-&gt;\u300c\u6dfb\u52a0\u516c\u94a5\u300d \uff0c\u6dfb\u52a0\u751f\u6210\u7684 public key \u6dfb\u52a0\u5230\u5f53\u524d\u8d26\u6237\u4e2d\u3002</p> <p>\u9700\u8981\u6ce8\u610f\uff1a \u6dfb\u52a0\u516c\u94a5\u9700\u8981\u9a8c\u8bc1\u7528\u6237\u5bc6\u7801</p> <p></p> <p>\u901a\u8fc7 <code>ssh -T</code> \u6d4b\u8bd5\uff0c\u8f93\u51fa SSH Key \u7ed1\u5b9a\u7684\u7528\u6237\u540d\uff1a</p> Bash<pre><code>$ ssh -T git@gitee.com\nHi USERNAME! You've successfully authenticated, but GITEE.COM does not provide shell access.\n</code></pre> <p>\u5728\u6dfb\u52a0\u5b8c\u516c\u94a5\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u5728 \u300c\u4e2a\u4eba\u8bbe\u7f6e\u300d-&gt;\u300c\u5b89\u5168\u8bbe\u7f6e\u300d-&gt;\u300cSSH \u516c\u94a5\u300d \u6d4f\u89c8\u67e5\u770b\u5f53\u524d\u8d26\u6237\u5df2\u7ecf\u6dfb\u52a0\u7684 SSH \u516c\u94a5\uff0c\u5e76\u5bf9\u516c\u94a5\u8fdb\u884c\u7ba1\u7406/\u5220\u9664\u64cd\u4f5c\u3002</p> <p></p> <p></p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/#ssh-key-ssh-key","title":"\u4ed3\u5e93\u7684 SSH Key \u548c\u8d26\u6237 SSH Key \u7684\u533a\u522b\uff1f","text":"<p>\u8d26\u6237\u7684 SSH Key \u548c\u8d26\u6237\u7ed1\u5b9a\uff0c\u5f53\u8d26\u6237\u5177\u6709 \u63a8\u9001/\u62c9\u53d6 \u6743\u9650\u65f6\u53ef\u901a\u8fc7 SSH \u65b9\u5f0f \u63a8\u9001/\u62c9\u53d6 \u7684\u4ed3\u5e93\u3002</p> <p>\u901a\u8fc7 <code>ssh -T</code> \u6d4b\u8bd5\u65f6\uff0c\u8f93\u51fa SSH Key \u7ed1\u5b9a\u7684\u7528\u6237\u540d\uff1a</p> Bash<pre><code>$ ssh -T git@gitee.com\nHi USERNAME! You've successfully authenticated, but GITEE.COM does not provide shell access.\n</code></pre> <p>\u4ed3\u5e93\u7684 SSH key \u53ea\u9488\u5bf9\u4ed3\u5e93\uff0c\u4e14\u6211\u4eec\u4ec5\u5bf9\u4ed3\u5e93\u63d0\u4f9b\u4e86\u90e8\u7f72\u516c\u94a5\uff0c\u5373\u4ed3\u5e93\u4e0b\u7684\u516c\u94a5\u4ec5\u80fd\u62c9\u53d6\u4ed3\u5e93\uff0c\u8fd9\u901a\u5e38\u7528\u4e8e\u751f\u4ea7\u670d\u52a1\u5668\u62c9\u53d6\u4ed3\u5e93\u7684\u4ee3\u7801\u3002</p> <p>\u901a\u8fc7 <code>ssh -T</code> \u6d4b\u8bd5\u65f6\uff0c\u8f93\u51fa Anonymous\uff1a</p> <p>Bash<pre><code>ssh -T git@gitee.com\nHi Anonymous! You've successfully authenticated, but GITEE.COM does not provide shell access.\n</code></pre> </p>"},{"location":"%E8%BF%90%E7%BB%B4/Other/deamon%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/#_1","title":"\u914d\u7f6e\u516c\u94a5","text":"<ol> <li>\u8fdb\u5165\u73af\u5883</li> </ol> Text Only<pre><code>wsl --distribution Ubuntu20.04\n</code></pre> <ol> <li>\u8bbe\u7f6e\u516c\u94a5</li> </ol> Text Only<pre><code>ssh-keygen -t ed25519 -C \"Gitee SSH Key\"\n</code></pre> <ol> <li> <p>\u6dfb\u52a0\u5230gitee</p> </li> <li> <p>\u83b7\u53d6\u6743\u9650</p> </li> </ol> Text Only<pre><code>sudo su\n</code></pre> <ol> <li>\u521b\u5efa\u5de5\u4f5c\u76ee\u5f55</li> </ol> Text Only<pre><code>mkdir /home/deamon\ncd /home/deamon\n</code></pre> <ol> <li>\u914d\u7f6e\u5e94\u7528\u4ed3</li> </ol> Text Only<pre><code>vim /etc/apt/sources.list\n</code></pre> Text Only<pre><code>deb https://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\ndeb-src https://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse\n\ndeb https://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\ndeb-src https://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse\n\ndeb https://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\ndeb-src https://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse\n\ndeb https://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\ndeb-src https://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse\n\ndeb https://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\ndeb-src https://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse\n</code></pre> Text Only<pre><code>sudo apt-get update\nsudo apt-get upgrade\n</code></pre> <ol> <li>\u5b89\u88c5git:</li> </ol> Text Only<pre><code>sudo apt install git-all \n</code></pre> <ol> <li>\u5b89\u88c5git-lfs</li> </ol> Text Only<pre><code>curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh\nsudo apt-get install git-lfs\ngit lfs install\n</code></pre> <ol> <li>\u5b89\u88c5repo\u5de5\u5177</li> </ol> Text Only<pre><code>curl https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 &gt; /usr/local/bin/repo\nchmod a+x /usr/local/bin/repo\n\napt install python3-pip\npip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple requests\n</code></pre> <ol> <li> <p>\u4e0b\u8f7d\u4e3b\u5206\u652f\u4ee3\u7801</p> Text Only<pre><code>git config --global user.email \"harrysunv9x@outlook.com\"\ngit config --global user.name \"HarrySunV9x\"\n\nsudo ln -s /usr/bin/python3 /usr/bin/python\nrepo init -u git@gitee.com:openharmony/manifest.git -b master --no-repo-verify\nrepo sync -c\nrepo forall -c 'git lfs pull'\n</code></pre> </li> <li> <p>\u5b89\u88c5\u4f9d\u8d56</p> Text Only<pre><code>sudo apt-get update &amp;&amp; sudo apt-get install binutils binutils-dev git git-lfs gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib gcc-arm-linux-gnueabi libc6-dev-i386 libc6-dev-amd64 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip m4 bc gnutls-bin python3.8 python3-pip ruby genext2fs device-tree-compiler make libffi-dev e2fsprogs pkg-config perl openssl libssl-dev libelf-dev libdwarf-dev u-boot-tools mtd-utils cpio doxygen liblz4-tool openjdk-8-jre gcc g++ texinfo dosfstools mtools default-jre default-jdk libncurses5 apt-utils wget scons python3.8-distutils tar rsync git-core libxml2-dev lib32z-dev grsync xxd libglib2.0-dev libpixman-1-dev kmod jfsutils reiserfsprogs xfsprogs squashfs-tools pcmciautils quota ppp libtinfo-dev libtinfo5 libncurses5-dev libncursesw5 libstdc++6 gcc-arm-none-eabi vim ssh locales libxinerama-dev libxcursor-dev libxrandr-dev libxi-dev\n</code></pre> </li> <li> <p>\u9884\u7f16\u8bd1</p> Text Only<pre><code>sudo apt-get update &amp;&amp; sudo apt-get install binutils git git-lfs gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev genext2fs liblz4-tool libssl-dev libtinfo5 lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip m4 bc gnutls-bin python3.8 python3-pip ruby default-jdk u-boot-tools mtools mtd-utils scons gcc-arm-none-eabi \n</code></pre> </li> <li> <p>\u4e0b\u8f7d\u5de5\u5177</p> Text Only<pre><code>./build/prebuilts_download.sh\n</code></pre> </li> <li> <p>build</p> Text Only<pre><code>./build.sh --product-name rk3568 --fast--rebuild --build-target SP_daemon\n</code></pre> </li> </ol>"},{"location":"%E8%BF%90%E7%BB%B4/Other/%E5%B4%A9%E9%93%81%E7%A7%81%E6%9C%8D%E6%90%AD%E5%BB%BA/","title":"\u6b65\u9aa4","text":"<ol> <li> <p>\u514b\u9686\u670d\u52a1\u5668\u9879\u76ee \u5728\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u514b\u9686LunarCore\u9879\u76ee\uff1a</p> <p>git clone https://github.com/Melledy/LunarCore.git /home/btserver/LunarCore</p> </li> <li> <p>\u670d\u52a1\u7aef \u53c2\u7167LunarCore\u9879\u76ee\u7684\u5f00\u53d1\u6587\u6863https://github.com/Melledy/LunarCore/blob/development/docs/README_zh-CN.md\u8fdb\u884c\u670d\u52a1\u5668\u7684\u642d\u5efa\u3002</p> </li> <li> <p>\u4fee\u6539\u914d\u7f6e\u6587\u4ef6  \u7f16\u8f91 /home/btserver/LunarCore/config.json \u6587\u4ef6\uff0c\u5c06\u6240\u6709\u7684 localhost \u5730\u5740\u66f4\u6539\u4e3a\u60a8\u670d\u52a1\u5668\u7684\u5b9e\u9645\u5730\u5740\u3002\u8bf7\u6ce8\u610f\uff0cinternalMongoServer \u7684\u8bbe\u7f6e\u9664\u5916\uff0c\u5b83\u5e94\u4fdd\u6301\u539f\u6837\u3002</p> </li> <li> <p>\u5ba2\u6237\u7aef \u5982\u679c\u60a8\u66f4\u6539\u4e86\u7aef\u53e3\uff0c\u5219\u5ba2\u6237\u7aef\u9700\u8981\u4f7f\u7528 cultivation \u5de5\u5177\u6765\u8fdb\u884c\u8bbe\u7f6e\u3002\u9996\u5148\u5b89\u88c5\u5e76\u542f\u52a8 cultivation\uff0c\u7136\u540e\u9009\u62e9\u5d29\u94c1\u6e38\u620f\u76ee\u5f55\uff0c\u8f93\u5165\u60a8\u7684\u670d\u52a1\u5668\u5730\u5740\u548c\u7aef\u53e3\uff0c\u6700\u540e\u542f\u52a8\u6e38\u620f\u3002\u5982\u679c\u4e0d\u6539\u7aef\u53e3\uff0c\u90a3\u4e48\u4f7f\u7528 cultivation \u6216\u8005 Fiddler \u90fd\u53ef\u4ee5\u3002</p> </li> </ol> <p>PS</p> <ol> <li>\u5982\u679c\u4e0d\u4fee\u6539\u7aef\u53e3\uff0c443\u4e0d\u8981\u88ab\u5360\u7528</li> <li>nginx\u53ef\u80fd\u4f1a\u51b2\u7a81\uff0c\u8981\u5173\u95ed</li> <li>\u6ce8\u610f\u670d\u52a1\u5668\u9632\u706b\u5899\u662f\u5426\u6253\u5f00\u4e86\u6240\u6709\u7aef\u53e3\uff0c\u5426\u5219\u62a51001_1</li> </ol>"},{"location":"%E9%9A%8F%E7%AC%94/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/","title":"\u8bb0\u4e00\u6b21\u95ee\u9898\u5206\u6790","text":"<p>\u5728\u7528Unity\u63d2\u4ef6\u5230\u5904\u5f15\u64ce\u6570\u636e\u7684\u65f6\u5019\uff0c\u6709\u4e00\u5c42\u6570\u636e\u662f\u65e0\u6cd5\u901a\u8fc7Marker\u76f4\u63a5\u83b7\u53d6\u7684\u3002\u5c31\u662fCpu usage\u8fd9\u4e00\u680f\uff1a</p> <p></p> <p>\u5bf9\u8fd9\u79cd\u6beb\u65e0\u5934\u7eea\u7684\u95ee\u9898\u4e00\u5f00\u59cb\u5b8c\u5168\u65e0\u4ece\u4e0b\u624b\uff0c\u7f51\u4e0a\u4e5f\u641c\u4e0d\u5230\u4efb\u4f55\u6570\u636e\u6765\u6e90\u7684\u4fe1\u606f\u3002</p> <p>\u90a3\u4e48\u53ea\u80fd\u4e00\u5c42\u5c42\u5f00\u59cb\u6478\u3002</p> <p>Marker\u5206\u6790</p> <p>\u9996\u5148\u5148\u5bf9Marker\u7684\u63a5\u53e3\u8fdb\u884c\u5206\u6790\uff0c\u6211\u4eec\u80fd\u62ff\u5230\u4ec0\u4e48\u6570\u636e\uff1f</p> <p>Unity\u63d0\u4f9b\u4e86\u4e00\u5217\u7684\u63a5\u53e3\u7528\u4e8e\u8fdb\u884cProfiler\uff0c\u6211\u4eec\u53ef\u4ee5\u5728${Editor}\\Data\\PluginAPI\\\u4e2d\u62ff\u5230\u3002\u5176\u4e2d\uff0cIUnityProfilerCallbacks.h\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u7684\u63a5\u53e3\u4fe1\u606f\u3002IUnityProfiler.h\u5219\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u53d8\u91cf\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5728IUnityProfilerCallbacks\u5f97\u5230\u793a\u4f8b\u51fd\u6570EventCallback\u7684\u51fd\u6570\u5b9a\u4e49\uff1a</p> C++<pre><code>static void UNITY_INTERFACE_API MyProfilerEventCallback(const UnityProfilerMarkerDesc* markerDesc, UnityProfilerMarkerEventType eventType, unsigned short eventDataCount, const UnityProfilerMarkerData* eventData, void* userData)\n</code></pre> <p>Unity\u4f20\u9012\u7ed9\u6211\u4eec\u7684\u4e94\u4e2a\u53c2\u6570\uff1a</p> <ul> <li>markerDesc\uff1a\u6709\u5173Marker\u7684\u63cf\u8ff0\u4fe1\u606f</li> </ul> C++<pre><code>typedef struct UnityProfilerMarkerDesc\n{\n    // Per-marker callback chain pointer. Don't use.\n    const void* callback;\n    // Event id.\n    UnityProfilerMarkerId id;\n    // UnityProfilerMarkerFlag_ value.\n    UnityProfilerMarkerFlags flags;\n    // Category index the marker belongs to.\n    UnityProfilerCategoryId categoryId;\n    // NULL-terminated string which is associated with the marker.\n    const char* name;\n    // Metadata descriptions chain. Don't use.\n    const void* metaDataDesc;\n} UnityProfilerMarkerDesc;\n</code></pre> <ul> <li> <p>callback\uff1a\u6ce8\u91ca\u544a\u8bc9\u4e86\u6211\u4eec\u4e0d\u8981\u4f7f\u7528\uff0c\u56e0\u6b64\u4e0d\u7528\u5173\u5fc3\u3002</p> </li> <li> <p>id\uff1aMarker\u7684ID\uff0cUnity\u7528\u552f\u4e00\u7684ID\u6807\u8bc6Marker\uff0c\u542f\u7528\uff0c\u6709\u56fa\u5b9a\u4f4d\u67d0\u4e9bMarker\u9884\u7559\u7684\uff0c\u4e5f\u7528\u52a8\u6001\u751f\u6210\u7684\u3002</p> </li> <li> <p>flags\uff1a Marker\u7684\u6807\u5fd7</p> C++<pre><code>enum UnityProfilerMarkerFlag_\n{\n    kUnityProfilerMarkerFlagDefault = 0,\n\n    kUnityProfilerMarkerFlagScriptUser = 1 &lt;&lt; 1,         // Markers created with C# API.\n    kUnityProfilerMarkerFlagScriptInvoke = 1 &lt;&lt; 5,       // Runtime invocations with ScriptingInvocation::Invoke.\n    kUnityProfilerMarkerFlagScriptEnterLeave = 1 &lt;&lt; 6,   // Deep profiler.\n\n    kUnityProfilerMarkerFlagAvailabilityEditor = 1 &lt;&lt; 2, // Editor-only marker, doesn't present in dev and non-dev players.\n    kUnityProfilerMarkerFlagAvailabilityNonDev = 1 &lt;&lt; 3, // Non-development marker, is present everywhere including release builds.\n\n    kUnityProfilerMarkerFlagWarning = 1 &lt;&lt; 4,            // Indicates undesirable, performance-wise suboptimal code path.\n\n    kUnityProfilerMarkerFlagCounter = 1 &lt;&lt; 7,            // Marker is also used as a counter.\n\n    kUnityProfilerMarkerFlagVerbosityDebug = 1 &lt;&lt; 10,    // Internal debug markers - e.g. JobSystem Idle.\n    kUnityProfilerMarkerFlagVerbosityInternal = 1 &lt;&lt; 11, // Internal markers - e.g. Mutex/semaphore waits.\n    kUnityProfilerMarkerFlagVerbosityAdvanced = 1 &lt;&lt; 12  // Markers which are useful for advanced users - e.g. Loading.\n};\ntypedef uint16_t UnityProfilerMarkerFlags;\n</code></pre> <p>\u6ce8\u91ca\u5df2\u7ecf\u8bf4\u660e\u4e86\u6bcf\u4e2aFlag\u7684\u542b\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684Flag\u5bf9Marker\u8fdb\u884c\u7b5b\u9009\u3002\u6bd4\u5982\uff0c\u5982\u679c\u6211\u4eec\u53ea\u60f3\u64cd\u4f5cCounter\u7c7b\u578b\u7684marker\uff0c\u53ef\u4ee5\uff1a</p> C++<pre><code>if ((markerDesc-&gt;flags &amp; kUnityProfilerMarkerFlagCounter) != 0){\n    // \u5bf9Counter\u8fdb\u884c\u64cd\u4f5c\n}\n</code></pre> </li> <li> <p>categoryId\uff1aMarker\u7684\u5206\u7c7b\u3002</p> C++<pre><code>enum UnityBuiltinProfilerCategory_\n{\n    kUnityProfilerCategoryRender = 0,\n    kUnityProfilerCategoryScripts = 1,\n    kUnityProfilerCategoryManagedJobs = 2,\n    kUnityProfilerCategoryBurstJobs = 3,\n    kUnityProfilerCategoryGUI = 4,\n    kUnityProfilerCategoryPhysics = 5,\n    kUnityProfilerCategoryAnimation = 6,\n    kUnityProfilerCategoryAI = 7,\n    kUnityProfilerCategoryAudio = 8,\n    kUnityProfilerCategoryAudioJob = 9,\n    kUnityProfilerCategoryAudioUpdateJob = 10,\n    kUnityProfilerCategoryVideo = 11,\n    kUnityProfilerCategoryParticles = 12,\n    kUnityProfilerCategoryGi = 13,\n    kUnityProfilerCategoryNetwork = 14,\n    kUnityProfilerCategoryLoading = 15,\n    kUnityProfilerCategoryOther = 16,\n    kUnityProfilerCategoryGC = 17,\n    kUnityProfilerCategoryVSync = 18,\n    kUnityProfilerCategoryOverhead = 19,\n    kUnityProfilerCategoryPlayerLoop = 20,\n    kUnityProfilerCategoryDirector = 21,\n    kUnityProfilerCategoryVR = 22,\n    kUnityProfilerCategoryAllocation = 23, kUnityProfilerCategoryMemory = 23,\n    kUnityProfilerCategoryInternal = 24,\n    kUnityProfilerCategoryFileIO = 25,\n    kUnityProfilerCategoryUISystemLayout = 26,\n    kUnityProfilerCategoryUISystemRender = 27,\n    kUnityProfilerCategoryVFX = 28,\n    kUnityProfilerCategoryBuildInterface = 29,\n    kUnityProfilerCategoryInput = 30,\n    kUnityProfilerCategoryVirtualTexturing = 31,\n    kUnityProfilerCategoryGPU = 32,\n    kUnityProfilerCategoryPhysics2D = 33,\n    kUnityProfilerCategoryNetworkOperations = 34,\n    kUnityProfilerCategoryUIDetails = 35,\n    kUnityProfilerCategoryDebug = 36,\n    kUnityProfilerCategoryJobs = 37,\n};\ntypedef uint16_t UnityProfilerCategoryId;\n</code></pre> <p>\u6bcf\u4e00\u4e2aMarker\u5bf9\u5e94\u4e00\u4e2aCategory\uff0c\u7528\u4e8e\u5206\u7c7b\u3002</p> </li> <li> <p>name\uff1aMarker\u7684name\u3002</p> </li> <li> <p>metaDataDesc\uff1a\u6ce8\u91ca\u544a\u8bc9\u6211\u4eec\u4e0d\u8981\u7528\uff0c\u4e0d\u505a\u5173\u5fc3\u3002</p> </li> <li> <p>eventType\uff1a\u8c03\u7528\u5230\u8be5\u51fd\u6570\u65f6\u5019\u7684\u7c7b\u578b\uff1a</p> </li> </ul> C++<pre><code>enum UnityProfilerMarkerEventType_\n{\n    kUnityProfilerMarkerEventTypeBegin = 0,               // Trace\u7c7b\u578b\u5f00\u59cb\n    kUnityProfilerMarkerEventTypeEnd = 1,             // Trace\u7c7b\u578b\u7ed3\u675f\n    kUnityProfilerMarkerEventTypeSingle = 2               // Count\u7c7b\u578b\n};\ntypedef uint16_t UnityProfilerMarkerEventType;\n</code></pre> <ul> <li> <p>eventDataCount\uff1aeventData\u7684\u6570\u91cf\uff0c\u4e00\u822c\u662f0\u4e2a\u6216\u80051\u4e2a\u3002</p> </li> <li> <p>eventData\uff1aeventData\u7684\u5177\u4f53\u6570\u636e\uff0c\u53ef\u4ee5\u4ece\u91cc\u9762\u62ff\u5230Unity\u7ed9\u6211\u4eec\u63d0\u4f9b\u7684\u6570\u636e\uff1a</p> </li> </ul> C++<pre><code>typedef struct UnityProfilerMarkerData\n{\n    UnityProfilerMarkerDataType type;\n    uint8_t reserved0;\n    uint16_t reserved1;\n    uint32_t size;\n    const void* ptr;\n} UnityProfilerMarkerData;\n</code></pre> <p>\u76ee\u524d\uff0c\u6211\u4e0d\u6e05\u695areserved0\u4e0ereserved1\u7684\u4f5c\u7528\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230</p> <p>\u2460 type\uff0c\u6570\u636e\u7c7b\u578b</p> C++<pre><code>enum UnityProfilerMarkerDataType_\n{\n    kUnityProfilerMarkerDataTypeNone = 0,\n    kUnityProfilerMarkerDataTypeInstanceId = 1,\n    kUnityProfilerMarkerDataTypeInt32 = 2,\n    kUnityProfilerMarkerDataTypeUInt32 = 3,\n    kUnityProfilerMarkerDataTypeInt64 = 4,\n    kUnityProfilerMarkerDataTypeUInt64 = 5,\n    kUnityProfilerMarkerDataTypeFloat = 6,\n    kUnityProfilerMarkerDataTypeDouble = 7,\n    kUnityProfilerMarkerDataTypeString = 8,\n    kUnityProfilerMarkerDataTypeString16 = 9,\n    kUnityProfilerMarkerDataTypeBlob8 = 11,\n    kUnityProfilerMarkerDataTypeGfxResourceId = 12,\n    kUnityProfilerMarkerDataTypeCount // Total count of data types\n};\ntypedef uint8_t UnityProfilerMarkerDataType;\n</code></pre> <p>\u2461 size\uff0c\u6570\u636e\u5927\u5c0f</p> <p>\u2462 ptr\uff0c\u6570\u636e\u6307\u9488</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230Unity\u7ed9\u6211\u4eec\u7684\u6570\u636e\uff0c\u5982\u83b7\u53d6\u4e00\u4e2aCounter Marker\u7684\u503c\uff1a</p> C++<pre><code>if (type == kUnityProfilerMarkerDataTypeInt32) {\n  auto data = *reinterpret_cast&lt;int32_t *&gt;(const_cast&lt;void *&gt;(ptr));\n}\n...               //\u5176\u4ed6\u7c7b\u578b\n</code></pre> <p>\u6839\u636e\u6d4b\u8bd5\uff0cCounter\u7c7b\u578b\u7684type\u53ea\u6709<code>kUnityProfilerMarkerDataTypeInt32</code>\u3001<code>kUnityProfilerMarkerDataTypeInt64</code>\u3001<code>kUnityProfilerMarkerDataTypeUInt64</code>\u3001<code>kUnityProfilerMarkerDataTypeDouble</code>\u3002</p> <p>\u5177\u4f53\u4f7f\u7528\u65f6\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u60c5\u51b5\u7075\u6d3b\u53d6\u7528\u3002</p> <ul> <li>userData\uff1aMarker\u5728\u81ea\u5b9a\u4e49\u65f6\u81ea\u5df1\u5b9a\u4e49\u7684\u6570\u636e\uff0c\u4e00\u822c\u4e0d\u505a\u5173\u5fc3\u3002</li> </ul> <p>\u5bf9\u5e94Category\u7684\u51fd\u6570\u65f6\u95f4\u8017\u65f6</p> <p>\u6839\u636e\u521d\u6b65\u5206\u6790\uff0c\u7b2c\u4e00\u5370\u8c61\u81ea\u7136\u662f\u62ff\u5230\u5bf9\u5e94Category\u7684\u51fd\u6570\u65f6\u95f4\u8017\u65f6\u548c\uff0c\u56e0\u4e3aCpuUsage\u7684\u5206\u7c7b\u4e0eCategory\u7684\u5206\u7c7b\u51e0\u4e4e\u662f\u4e00\u81f4\u7684\u3002</p> <p>\u4f46\u8fd9\u4e2a\u60f3\u6cd5\u7ecf\u4e0d\u8d77\u63a8\u6572\uff0c\u5982\u56fe\u91cc\u6d4b\u8bd5\u7684Render\u53ea\u67093ms\uff0c\u8fd9\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4ec5\u4e00\u4e2aPlayerLoop\u5c3130+ms\u3002\u8fd9\u5b8c\u5168\u5bf9\u4e0d\u4e0a\u3002</p> <p>\u51fd\u6570\u975e\u8c03\u7528\u8017\u65f6</p> <p>\u51fd\u6570\u9664\u4e86\u672c\u8eab\u7684\u5b8c\u6574\u8c03\u7528\u8017\u65f6\uff0c\u8fd8\u6709\u6240\u8c13\u7684\u975e\u8c03\u7528\u8017\u65f6\uff0c\u5373\u4e0d\u5305\u542b\u8c03\u7528\u5176\u4ed6\u51fd\u6570\u65f6\u5019\u9020\u6210\u7684\u51fd\u6570\u635f\u8017\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4e4b\u524d\u7684\u535a\u5ba2\u3002</p> <p>\u5728UnityProfiler\u91cc\uff0c\u8fd9\u4e2a\u6570\u503c\u4e5f\u662f\u6709\u8bb0\u5f55\u7684\uff1a</p> <p></p> <p>\u521d\u6b65\u731c\u60f3\uff0c\u5982\u4f55\u662f\u8fd9\u4e2aselftime\u7684\u548c\u53ef\u80fd\u5c31\u6bd4\u8f83\u5408\u7406\u4e86\uff0c\u4e3a\u4e86\u66f4\u786e\u8ba4\u8fd9\u4e2a\u60f3\u6cd5\uff0c\u6211\u8fd8\u53bbUnity\u8bba\u575b\u53d1\u4e86\u5e16\u5b50\u8bf7\u6559\uff1aWhat mean is about Category in CPU Usage Profiler module\u3002\u5927\u4f6c\u7684\u56de\u590d\u8be6\u7ec6\u89e3\u91ca\u4e86\u4ec0\u4e48\u662fselftime\uff1a</p> <p>The chart is an accumulation of the main thread's Self Ms of each marker with that category. Or, if you'd switch to Timeline view and imagine yourself lying at the bottom of the main thread graph and looking up: the color distribution that you see is then the same as it is in the chart, just more dispersed. In that sense, the grey \"Internal\" markers like Semaphore.WaitWorSignal are \"transparent\" and take on whatever category their parent sample has.</p> <p>So in your example, some child sample(s) of Drawing is(are) not categorized as Rendering.</p> <p>\u540c\u65f6\uff0c\u4e5f\u8bf4\u660e\u4e86\u6ca1\u6709\u4ec0\u4e48\u63a5\u53e3\u53ef\u4ee5\u76f4\u63a5\u83b7\u53d6selftime\uff0c\u53ea\u80fd\u81ea\u5df1\u7b97\u3002\u57fa\u672c\u53ef\u4ee5\u786e\u5b9aCPU Usage\u7684\u5206\u7c7b\u4ee3\u8868\u4ec0\u4e48\u4e86\u3002</p> <p>\u7136\u540e\u8ba1\u7b97\u6bcf\u4e2aCategory\u7684Selftime\uff0c\u786e\u5b9e\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u3002\uff08\u5927\u4f6c\u8fd8\u56de\u590d\u4e86ProfilerRecorder API\uff0c\u8fd9\u4e2a\u6ee1\u8db3\u4e0d\u4e86\u6211\u7684\u9700\u6c42\uff0c\u4e0d\u591a\u505a\u4ecb\u62d3\u5c55\u4e86\u3002\uff09</p> <p>\u6570\u636e\u89c2\u5bdf</p> <p>\u6211\u5c06\u6bcf\u4e2aCategory\u7684\u7d2f\u8ba1Selftime\u548cUnity\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u6bd4\u5bf9\uff0c\u53d1\u73b0\u5dee\u8ddd\u5f88\u591a\u3002\u6bd4\u5982\u4ec5Render\u5c31\u6709\u8fd1\u4e09\u500d\u7684\u5dee\u8ddd\u3002\u8fd9\u663e\u7136\u4e0d\u662f\u6211\u60f3\u8981\u7684\u6700\u7ec8\u7ed3\u679c\u3002\u5982\u679c\u8fd9\u4e2a\u6570\u636e\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u636e\u663e\u7136\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002</p> <p>\u5c3d\u7ba1\u4ece\u539f\u7406\u4e0a\u6765\u8bf4\uff0c\u91c7\u96c6\u7684\u6570\u636e\u4e0d\u53ef\u80fd\u5b8c\u5168\u4e00\u81f4\uff0c\u4f46\u8bef\u5dee\u4e0d\u4f1a\u8fd9\u4e48\u6253\uff0c\u800c\u662f\u5728\u76f8\u8fd1\u7684\u8303\u56f4\u624d\u5bf9\u3002\u56e0\u6b64\uff0c\u4ec5\u4ec5\u662f\u901a\u8fc7Category\u53bb\u5206\u7c7bSelftime\u5e76\u8ba1\u7b97\u548c\uff0c\u8fd9\u4e2a\u60f3\u6cd5\u663e\u7136\u662f\u601d\u8def\u7684\uff0c\u8981\u4e48\u662f\u60f3\u6cd5\u4e00\u5f00\u59cb\u5c31\u662f\u9519\u7684\uff0c\u8981\u4e48\u5c31\u662f\u6f0f\u4e86\u4ec0\u4e48\u3002</p> <p>\u9996\u5148\u6211\u8981\u786e\u8ba4\uff0c\u81ea\u5df1\u7684\u975e\u51fd\u6570\u8c03\u7528\u8017\u65f6\uff0c\u4e5f\u5c31\u662fSelfTime\u7684\u8ba1\u7b97\u662f\u5426\u6709\u95ee\u9898\uff0c\u5982\u679c\u6211\u7684\u51fd\u6570\u8ba1\u7b97\u90fd\u6709\u95ee\u9898\uff0c\u90a3\u4e48\u6700\u540e\u7684\u7ed3\u679c\u80af\u5b9a\u4e0d\u5bf9\u3002</p> <p>\u6211\u6311\u9009\u5176\u4e2d\u4e00\u4e2aMarker\uff0c\u6bd4\u5982PlayerLoop\uff0c\u548cUnity\u63d0\u4f9b\u7684\u6570\u636e\u76f8\u6bd4\uff0c\u5747\u57280.5ms\u5de6\u53f3\uff0c\u4ece\u800c\u8bc1\u660e\u6211\u7684\u51fd\u6570\u8ba1\u7b97\u6ca1\u95ee\u9898\u3002</p> <p>\u7136\u540e\u518d\u8fdb\u4e00\u6b65\u601d\u8003\uff0c\u662f\u5426\u901a\u8fc7Category\u8ba1\u7b97Selftime\u7684\u601d\u8def\u4e0d\u5bf9\uff1f\u6839\u636e\u8bba\u575b\u7684\u56de\u590d\uff0c\u8fd9\u4e2a\u601d\u8def\u5e94\u8be5\u662f\u6b63\u786e\u7684\u3002</p> <p>\u90a3\u4e48\u4e00\u5b9a\u662f\u6f0f\u4e86\u4ec0\u4e48\u5bfc\u81f4\u6570\u636e\u5dee\u8ddd\u8fd9\u4e48\u5927\u3002</p> <p>\u5bf9Unity\u91c7\u96c6\u7684\u6570\u636e\u8fdb\u884c\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\uff1aCPUUsage\u7684\u5404\u4e2a\u8017\u65f6\u52a0\u8d77\u6765\uff0c\u6b63\u597d\u7ea6\u4e3a33.5ms\uff0c\u4e5f\u5c31\u662f\u4e00\u5e27\u7684\u65f6\u95f4\uff0c\u6bcf\u4e00\u5e27\u7684\u6570\u636e\u57fa\u672c\u90fd\u662f\u8fd9\u4e2a\u65f6\u95f4\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u6ce8\u610f\u5230\u4e86\uff0c\u4ece\u6a2a\u5411\u770b\uff0c\u4e00\u5e27\u7684\u65f6\u95f4\u662f33.5ms\uff0c\u4f46\u662f\u4ece\u7eb5\u5411\u770b\uff0c\u4e00\u5e27\u4e5f\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u800c\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u65f6\u95f4\u5e94\u8be5\u90fd\u662f33.5ms\u3002\u56e0\u6b64\uff0c\u662f\u4e0d\u662f\u8fd9\u4e2aCPUUsage\u53ea\u662f\u67d0\u4e2a\u7ebf\u7a0b\u7684\u8017\u65f6\u7edf\u8ba1\u5462\uff1f\u8fdb\u4e00\u6b65\u7814\u7a76UnityProfiler\uff0c\u5207\u6362\u4e00\u4e0b\u7ebf\u7a0b\uff0c\u7ed3\u679c\u771f\u7684\u53d1\u73b0\u53ea\u6709Main Thread\u8fd9\u4e2a\u7ebf\u7a0b\uff0c\u4e0a\u9762\u7684\u6ce2\u5f62\u56fe\u4f1a\u53d1\u5149\uff0c\u6709\u6570\u636e\u663e\u793a\u3002\u8fd9\u91cc\u57fa\u672c\u53ef\u4ee5\u786e\u8ba4\uff0cCPUUSage\u5c31\u662f\u4f7f\u7528\u4e86MainThread\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u6570\u636e\u3002\u800c\u6211\u4eec\u901a\u8fc7Marker\u8ba1\u7b97\u7684Selftime\uff0c\u662f\u5305\u542b\u5168\u90e8\u7ebf\u7a0b\u7684\u3002</p> <p>\u901a\u8fc7\u5bf9\u7ebf\u7a0b\u7b5b\u9009\uff0c\u6700\u540e\u5f97\u5230\u4e86\u6b63\u786e\u7684\u6570\u636e\u3002\u95ee\u9898\u5f97\u5230\u4e86\u89e3\u51b3\u3002</p> <p>\u603b\u7ed3</p> <p>\u505a\u597d\u9884\u7814\uff0c\u597d\u7684\u9884\u7814\u53ef\u4ee5\u8282\u7701\u592a\u591a\u65f6\u95f4\u3002</p> <p>\u4e0d\u803b\u4e0b\u95ee\uff0c\u5229\u7528\u793e\u533a\u5927\u4f6c\u4eec\u7684\u5e2e\u52a9\uff0c\u53bb\u5bfb\u627e\u7f51\u4e0a\u627e\u4e0d\u5230\u7684\u7b54\u6848\u3002</p> <p>\u51b7\u9759\u89c2\u5bdf\uff0c\u53d1\u73b0\u89c4\u5f8b\uff0c\u89e3\u51b3\u95ee\u9898\u3002</p>"}]}